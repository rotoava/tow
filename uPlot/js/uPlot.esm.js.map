{"version":3,"file":"uPlot.esm.js","sources":["../src/feats.js","../src/domClasses.js","../src/strings.js","../src/dom.js","../src/utils.js","../src/fmtDate.js","../src/opts.js","../src/sync.js","../src/paths/utils.js","../src/paths/points.js","../src/paths/linear.js","../src/paths/stepped.js","../src/paths/bars.js","../src/paths/spline.js","../src/paths/monotoneCubic.js","../src/uPlot.js"],"sourcesContent":["export const FEAT_TIME          = true;\nexport const FEAT_LEGEND        = true;\n\nexport const FEAT_POINTS        = true;\n\nexport const FEAT_PATHS         = true;\nexport const FEAT_PATHS_LINEAR  = true;\nexport const FEAT_PATHS_STEPPED = true;\nexport const FEAT_PATHS_BARS    = true;\nexport const FEAT_PATHS_SPLINE  = true;\nexport const FEAT_PATHS_SPLINE2 = false;\n\nexport const FEAT_JOIN          = true;","const pre = \"u-\";\n\nexport const UPLOT          =       \"uplot\";\nexport const ORI_HZ         = pre + \"hz\";\nexport const ORI_VT         = pre + \"vt\";\nexport const TITLE          = pre + \"title\";\nexport const WRAP           = pre + \"wrap\";\nexport const UNDER          = pre + \"under\";\nexport const OVER           = pre + \"over\";\nexport const AXIS           = pre + \"axis\";\nexport const OFF            = pre + \"off\";\nexport const SELECT         = pre + \"select\";\nexport const CURSOR_X       = pre + \"cursor-x\";\nexport const CURSOR_Y       = pre + \"cursor-y\";\nexport const CURSOR_PT      = pre + \"cursor-pt\";\nexport const LEGEND         = pre + \"legend\"\nexport const LEGEND_LIVE    = pre + \"live\";\nexport const LEGEND_INLINE  = pre + \"inline\";\nexport const LEGEND_SERIES  = pre + \"series\";\nexport const LEGEND_MARKER  = pre + \"marker\";\nexport const LEGEND_LABEL   = pre + \"label\";\nexport const LEGEND_VALUE   = pre + \"value\";","export const WIDTH       = \"width\";\nexport const HEIGHT      = \"height\";\nexport const TOP         = \"top\";\nexport const BOTTOM      = \"bottom\";\nexport const LEFT        = \"left\";\nexport const RIGHT       = \"right\";\nexport const hexBlack    = \"#000\";\nexport const transparent = hexBlack + \"0\";\n\nexport const mousemove   = \"mousemove\";\nexport const mousedown   = \"mousedown\";\nexport const mouseup     = \"mouseup\";\nexport const mouseenter  = \"mouseenter\";\nexport const mouseleave  = \"mouseleave\";\nexport const dblclick    = \"dblclick\";\nexport const resize      = \"resize\";\nexport const scroll      = \"scroll\";\n\nexport const change      = \"change\";\nexport const dppxchange  = \"dppxchange\";\n\nexport const LEGEND_DISP = \"--\";","import {\n\tOFF,\n} from './domClasses';\n\nimport {\n\tchange,\n\tdppxchange,\n} from './strings';\n\nexport const domEnv = typeof window != 'undefined';\n\nexport const doc = domEnv ? document  : null;\nexport const win = domEnv ? window    : null;\nexport const nav = domEnv ? navigator : null;\n\nexport let pxRatio;\n\n//export const canHover = domEnv && !win.matchMedia('(hover: none)').matches;\n\nlet query;\n\nfunction setPxRatio() {\n\tlet _pxRatio = devicePixelRatio;\n\n\t// during print preview, Chrome fires off these dppx queries even without changes\n\tif (pxRatio != _pxRatio) {\n\t\tpxRatio = _pxRatio;\n\n\t\tquery && off(change, query, setPxRatio);\n\t\tquery = matchMedia(`(min-resolution: ${pxRatio - 0.001}dppx) and (max-resolution: ${pxRatio + 0.001}dppx)`);\n\t\ton(change, query, setPxRatio);\n\n\t\twin.dispatchEvent(new CustomEvent(dppxchange));\n\t}\n}\n\nexport function addClass(el, c) {\n\tif (c != null) {\n\t\tlet cl = el.classList;\n\t\t!cl.contains(c) && cl.add(c);\n\t}\n}\n\nexport function remClass(el, c) {\n\tlet cl = el.classList;\n\tcl.contains(c) && cl.remove(c);\n}\n\nexport function setStylePx(el, name, value) {\n\tel.style[name] = value + \"px\";\n}\n\nexport function placeTag(tag, cls, targ, refEl) {\n\tlet el = doc.createElement(tag);\n\n\tif (cls != null)\n\t\taddClass(el, cls);\n\n\tif (targ != null)\n\t\ttarg.insertBefore(el, refEl);\n\n\treturn el;\n}\n\nexport function placeDiv(cls, targ) {\n\treturn placeTag(\"div\", cls, targ);\n}\n\nconst xformCache = new WeakMap();\n\nexport function elTrans(el, xPos, yPos, xMax, yMax) {\n\tlet xform = \"translate(\" + xPos + \"px,\" + yPos + \"px)\";\n\tlet xformOld = xformCache.get(el);\n\n\tif (xform != xformOld) {\n\t\tel.style.transform = xform;\n\t\txformCache.set(el, xform);\n\n\t\tif (xPos < 0 || yPos < 0 || xPos > xMax || yPos > yMax)\n\t\t\taddClass(el, OFF);\n\t\telse\n\t\t\tremClass(el, OFF);\n\t}\n}\n\nconst colorCache = new WeakMap();\n\nexport function elColor(el, background, borderColor) {\n\tlet newColor = background + borderColor;\n\tlet oldColor = colorCache.get(el);\n\n\tif (newColor != oldColor) {\n\t\tcolorCache.set(el, newColor);\n\t\tel.style.background = background;\n\t\tel.style.borderColor = borderColor;\n\t}\n}\n\nconst sizeCache = new WeakMap();\n\nexport function elSize(el, newWid, newHgt, centered) {\n\tlet newSize = newWid + \"\" + newHgt;\n\tlet oldSize = sizeCache.get(el);\n\n\tif (newSize != oldSize) {\n\t\tsizeCache.set(el, newSize);\n\t\tel.style.height = newHgt + \"px\";\n\t\tel.style.width = newWid + \"px\";\n\t\tel.style.marginLeft = centered ? -newWid/2 + \"px\" : 0;\n\t\tel.style.marginTop = centered ? -newHgt/2 + \"px\" : 0;\n\t}\n}\n\nconst evOpts = {passive: true};\nconst evOpts2 = {...evOpts, capture: true};\n\nexport function on(ev, el, cb, capt) {\n\tel.addEventListener(ev, cb, capt ? evOpts2 : evOpts);\n}\n\nexport function off(ev, el, cb, capt) {\n\tel.removeEventListener(ev, cb, capt ? evOpts2 : evOpts);\n}\n\ndomEnv && setPxRatio();","import { domEnv, nav } from './dom';\n\n// binary search for index of closest value\nexport function closestIdx(num, arr, lo, hi) {\n\tlet mid;\n\tlo = lo || 0;\n\thi = hi || arr.length - 1;\n\tlet bitwise = hi <= 2147483647;\n\n\twhile (hi - lo > 1) {\n\t\tmid = bitwise ? (lo + hi) >> 1 : floor((lo + hi) / 2);\n\n\t\tif (arr[mid] < num)\n\t\t\tlo = mid;\n\t\telse\n\t\t\thi = mid;\n\t}\n\n\tif (num - arr[lo] <= arr[hi] - num)\n\t\treturn lo;\n\n\treturn hi;\n}\n\nexport function nonNullIdx(data, _i0, _i1, dir) {\n\tfor (let i = dir == 1 ? _i0 : _i1; i >= _i0 && i <= _i1; i += dir) {\n\t\tif (data[i] != null)\n\t\t\treturn i;\n\t}\n\n\treturn -1;\n}\n\nexport function getMinMax(data, _i0, _i1, sorted) {\n//\tconsole.log(\"getMinMax()\");\n\n\tlet _min = inf;\n\tlet _max = -inf;\n\n\tif (sorted == 1) {\n\t\t_min = data[_i0];\n\t\t_max = data[_i1];\n\t}\n\telse if (sorted == -1) {\n\t\t_min = data[_i1];\n\t\t_max = data[_i0];\n\t}\n\telse {\n\t\tfor (let i = _i0; i <= _i1; i++) {\n\t\t\tlet v = data[i];\n\n\t\t\tif (v != null) {\n\t\t\t\tif (v < _min)\n\t\t\t\t\t_min = v;\n\t\t\t\tif (v > _max)\n\t\t\t\t\t_max = v;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [_min, _max];\n}\n\nexport function getMinMaxLog(data, _i0, _i1) {\n//\tconsole.log(\"getMinMax()\");\n\n\tlet _min = inf;\n\tlet _max = -inf;\n\n\tfor (let i = _i0; i <= _i1; i++) {\n\t\tlet v = data[i];\n\n\t\tif (v != null && v > 0) {\n\t\t\tif (v < _min)\n\t\t\t\t_min = v;\n\t\t\tif (v > _max)\n\t\t\t\t_max = v;\n\t\t}\n\t}\n\n\treturn [\n\t\t_min ==  inf ?  1 : _min,\n\t\t_max == -inf ? 10 : _max,\n\t];\n}\n\nexport function rangeLog(min, max, base, fullMags) {\n\tlet minSign = sign(min);\n\tlet maxSign = sign(max);\n\n\tlet logFn = base == 10 ? log10 : log2;\n\n\tif (min == max) {\n\t\tif (minSign == -1) {\n\t\t\tmin *= base;\n\t\t\tmax /= base;\n\t\t}\n\t\telse {\n\t\t\tmin /= base;\n\t\t\tmax *= base;\n\t\t}\n\t}\n\n\tlet growMinAbs = minSign == 1 ? floor : ceil;\n\tlet growMaxAbs = maxSign == 1 ? ceil : floor;\n\n\tlet minExp = growMinAbs(logFn(abs(min)));\n\tlet maxExp = growMaxAbs(logFn(abs(max)));\n\n\tlet minIncr = pow(base, minExp);\n\tlet maxIncr = pow(base, maxExp);\n\n\t// fix values like Math.pow(10, -5) === 0.000009999999999999999\n\tif (base == 10) {\n\t\tif (minExp < 0)\n\t\t\tminIncr = roundDec(minIncr, -minExp);\n\t\tif (maxExp < 0)\n\t\t\tmaxIncr = roundDec(maxIncr, -maxExp);\n\t}\n\n\tif (fullMags || base == 2) {\n\t\tmin = minIncr * minSign;\n\t\tmax = maxIncr * maxSign;\n\t}\n\telse {\n\t\tmin = incrRoundDn(min, minIncr);\n\t\tmax = incrRoundUp(max, maxIncr);\n\t}\n\n\treturn [min, max];\n}\n\nexport function rangeAsinh(min, max, base, fullMags) {\n\tlet minMax = rangeLog(min, max, base, fullMags);\n\n\tif (min == 0)\n\t\tminMax[0] = 0;\n\n\tif (max == 0)\n\t\tminMax[1] = 0;\n\n\treturn minMax;\n}\n\nexport const rangePad = 0.1;\n\nexport const autoRangePart = {\n\tmode: 3,\n\tpad: rangePad,\n};\n\nconst _eqRangePart = {\n\tpad:  0,\n\tsoft: null,\n\tmode: 0,\n};\n\nconst _eqRange = {\n\tmin: _eqRangePart,\n\tmax: _eqRangePart,\n};\n\n// this ensures that non-temporal/numeric y-axes get multiple-snapped padding added above/below\n// TODO: also account for incrs when snapping to ensure top of axis gets a tick & value\nexport function rangeNum(_min, _max, mult, extra) {\n\tif (isObj(mult))\n\t\treturn _rangeNum(_min, _max, mult);\n\n\t_eqRangePart.pad  = mult;\n\t_eqRangePart.soft = extra ? 0 : null;\n\t_eqRangePart.mode = extra ? 3 : 0;\n\n\treturn _rangeNum(_min, _max, _eqRange);\n}\n\n// nullish coalesce\nexport function ifNull(lh, rh) {\n\treturn lh == null ? rh : lh;\n}\n\n// checks if given index range in an array contains a non-null value\n// aka a range-bounded Array.some()\nexport function hasData(data, idx0, idx1) {\n\tidx0 = ifNull(idx0, 0);\n\tidx1 = ifNull(idx1, data.length - 1);\n\n\twhile (idx0 <= idx1) {\n\t\tif (data[idx0] != null)\n\t\t\treturn true;\n\t\tidx0++;\n\t}\n\n\treturn false;\n}\n\nfunction _rangeNum(_min, _max, cfg) {\n\tlet cmin = cfg.min;\n\tlet cmax = cfg.max;\n\n\tlet padMin = ifNull(cmin.pad, 0);\n\tlet padMax = ifNull(cmax.pad, 0);\n\n\tlet hardMin = ifNull(cmin.hard, -inf);\n\tlet hardMax = ifNull(cmax.hard,  inf);\n\n\tlet softMin = ifNull(cmin.soft,  inf);\n\tlet softMax = ifNull(cmax.soft, -inf);\n\n\tlet softMinMode = ifNull(cmin.mode, 0);\n\tlet softMaxMode = ifNull(cmax.mode, 0);\n\n\tlet delta = _max - _min;\n\tlet deltaMag = log10(delta);\n\n\tlet scalarMax = max(abs(_min), abs(_max));\n\tlet scalarMag = log10(scalarMax);\n\n\tlet scalarMagDelta = abs(scalarMag - deltaMag);\n\n\t// this handles situations like 89.7, 89.69999999999999\n\t// by assuming 0.001x deltas are precision errors\n//\tif (delta > 0 && delta < abs(_max) / 1e3)\n//\t\tdelta = 0;\n\n\t// treat data as flat if delta is less than 1 billionth\n\t// or range is 11+ orders of magnitude below raw values, e.g. 99999999.99999996 - 100000000.00000004\n\tif (delta < 1e-9 || scalarMagDelta > 10) {\n\t\tdelta = 0;\n\n\t\t// if soft mode is 2 and all vals are flat at 0, avoid the 0.1 * 1e3 fallback\n\t\t// this prevents 0,0,0 from ranging to -100,100 when softMin/softMax are -1,1\n\t\tif (_min == 0 || _max == 0) {\n\t\t\tdelta = 1e-9;\n\n\t\t\tif (softMinMode == 2 && softMin != inf)\n\t\t\t\tpadMin = 0;\n\n\t\t\tif (softMaxMode == 2 && softMax != -inf)\n\t\t\t\tpadMax = 0;\n\t\t}\n\t}\n\n\tlet nonZeroDelta = delta || scalarMax || 1e3;\n\tlet mag          = log10(nonZeroDelta);\n\tlet base         = pow(10, floor(mag));\n\n\tlet _padMin  = nonZeroDelta * (delta == 0 ? (_min == 0 ? .1 : 1) : padMin);\n\tlet _newMin  = roundDec(incrRoundDn(_min - _padMin, base/10), 9);\n\tlet _softMin = _min >= softMin && (softMinMode == 1 || softMinMode == 3 && _newMin <= softMin || softMinMode == 2 && _newMin >= softMin) ? softMin : inf;\n\tlet minLim   = max(hardMin, _newMin < _softMin && _min >= _softMin ? _softMin : min(_softMin, _newMin));\n\n\tlet _padMax  = nonZeroDelta * (delta == 0 ? (_max == 0 ? .1 : 1) : padMax);\n\tlet _newMax  = roundDec(incrRoundUp(_max + _padMax, base/10), 9);\n\tlet _softMax = _max <= softMax && (softMaxMode == 1 || softMaxMode == 3 && _newMax >= softMax || softMaxMode == 2 && _newMax <= softMax) ? softMax : -inf;\n\tlet maxLim   = min(hardMax, _newMax > _softMax && _max <= _softMax ? _softMax : max(_softMax, _newMax));\n\n\tif (minLim == maxLim && minLim == 0)\n\t\tmaxLim = 100;\n\n\treturn [minLim, maxLim];\n}\n\n// alternative: https://stackoverflow.com/a/2254896\nconst numFormatter = new Intl.NumberFormat(domEnv ? nav.language : 'en-US');\nexport const fmtNum = val => numFormatter.format(val);\n\nconst M = Math;\n\nexport const PI = M.PI;\nexport const abs = M.abs;\nexport const floor = M.floor;\nexport const round = M.round;\nexport const ceil = M.ceil;\nexport const min = M.min;\nexport const max = M.max;\nexport const pow = M.pow;\nexport const sqrt = M.sqrt;\nexport const sign = M.sign;\nexport const log10 = M.log10;\nexport const log2 = M.log2;\n// TODO: seems like this needs to match asinh impl if the passed v is tweaked?\nexport const sinh =  (v, linthresh = 1) => M.sinh(v) * linthresh;\nexport const asinh = (v, linthresh = 1) => M.asinh(v / linthresh);\n\nexport const inf = Infinity;\n\nexport function numIntDigits(x) {\n\treturn (log10((x ^ (x >> 31)) - (x >> 31)) | 0) + 1;\n}\n\nexport function clamp(num, _min, _max) {\n\treturn min(max(num, _min), _max);\n}\n\nexport function fnOrSelf(v) {\n\treturn typeof v == \"function\" ? v : () => v;\n}\n\nexport const noop = () => {};\n\nexport const retArg0 = _0 => _0;\n\nexport const retArg1 = (_0, _1) => _1;\n\nexport const retNull = _ => null;\n\nexport const retTrue = _ => true;\n\nexport const retEq = (a, b) => a == b;\n\n// this will probably prevent tick incrs > 14 decimal places\n// (we generate up to 17 dec, see fixedDec const)\nconst fixFloat = v => roundDec(v, 14);\n\nexport function incrRound(num, incr) {\n\treturn fixFloat(roundDec(fixFloat(num/incr))*incr);\n}\n\nexport function incrRoundUp(num, incr) {\n\treturn fixFloat(ceil(fixFloat(num/incr))*incr);\n}\n\nexport function incrRoundDn(num, incr) {\n\treturn fixFloat(floor(fixFloat(num/incr))*incr);\n}\n\n// https://stackoverflow.com/a/48764436\n// rounds half away from zero\nexport function roundDec(val, dec = 0) {\n\tif (isInt(val))\n\t\treturn val;\n//\telse if (dec == 0)\n//\t\treturn round(val);\n\n\tlet p = 10 ** dec;\n\tlet n = (val * p) * (1 + Number.EPSILON);\n\treturn round(n) / p;\n}\n\n// https://stackoverflow.com/questions/14879691/get-number-of-digits-with-javascript/28203456#28203456\nexport function numDigits(x) {\n\treturn (log10((x ^ (x >> 31)) - (x >> 31)) | 0) + 1;\n}\n\nexport const fixedDec = new Map();\n\nexport function guessDec(num) {\n\treturn ((\"\"+num).split(\".\")[1] || \"\").length;\n}\n\nexport function genIncrs(base, minExp, maxExp, mults) {\n\tlet incrs = [];\n\n\tlet multDec = mults.map(guessDec);\n\n\tfor (let exp = minExp; exp < maxExp; exp++) {\n\t\tlet expa = abs(exp);\n\t\tlet mag = roundDec(pow(base, exp), expa);\n\n\t\tfor (let i = 0; i < mults.length; i++) {\n\t\t\tlet _incr = mults[i] * mag;\n\t\t\tlet dec = (_incr >= 0 && exp >= 0 ? 0 : expa) + (exp >= multDec[i] ? 0 : multDec[i]);\n\t\t\tlet incr = roundDec(_incr, dec);\n\t\t\tincrs.push(incr);\n\t\t\tfixedDec.set(incr, dec);\n\t\t}\n\t}\n\n\treturn incrs;\n}\n\n//export const assign = Object.assign;\n\nexport const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\n\nexport const nullNullTuple = [null, null];\n\nexport const isArr = Array.isArray;\nexport const isInt = Number.isInteger;\nexport const isUndef = v => v === void 0;\n\nexport function isStr(v) {\n\treturn typeof v == 'string';\n}\n\nexport function cmpObj(a, b) {\n\tfor (let k in a) {\n\t\tif (b[k] != a[k])\n\t\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport function isObj(v) {\n\tlet is = false;\n\n\tif (v != null) {\n\t\tlet c = v.constructor;\n\t\tis = c == null || c == Object;\n\t}\n\n\treturn is;\n}\n\nexport function fastIsObj(v) {\n\treturn v != null && typeof v == 'object';\n}\n\nconst TypedArray = Object.getPrototypeOf(Uint8Array);\n\nexport function copy(o, _isObj = isObj) {\n\tlet out;\n\n\tif (isArr(o)) {\n\t\tlet val = o.find(v => v != null);\n\n\t\tif (isArr(val) || _isObj(val)) {\n\t\t\tout = Array(o.length);\n\t\t\tfor (let i = 0; i < o.length; i++)\n\t\t\t\tout[i] = copy(o[i], _isObj);\n\t\t}\n\t\telse\n\t\t\tout = o.slice();\n\t}\n\telse if (o instanceof TypedArray) // also (ArrayBuffer.isView(o) && !(o instanceof DataView))\n\t\tout = o.slice();\n\telse if (_isObj(o)) {\n\t\tout = {};\n\t\tfor (let k in o)\n\t\t\tout[k] = copy(o[k], _isObj);\n\t}\n\telse\n\t\tout = o;\n\n\treturn out;\n}\n\nexport function assign(targ) {\n\tlet args = arguments;\n\n\tfor (let i = 1; i < args.length; i++) {\n\t\tlet src = args[i];\n\n\t\tfor (let key in src) {\n\t\t\tif (isObj(targ[key]))\n\t\t\t\tassign(targ[key], copy(src[key]));\n\t\t\telse\n\t\t\t\ttarg[key] = copy(src[key]);\n\t\t}\n\t}\n\n\treturn targ;\n}\n\n// nullModes\nconst NULL_REMOVE = 0;  // nulls are converted to undefined (e.g. for spanGaps: true)\nconst NULL_RETAIN = 1;  // nulls are retained, with alignment artifacts set to undefined (default)\nconst NULL_EXPAND = 2;  // nulls are expanded to include any adjacent alignment artifacts\n\n// sets undefined values to nulls when adjacent to existing nulls (minesweeper)\nfunction nullExpand(yVals, nullIdxs, alignedLen) {\n\tfor (let i = 0, xi, lastNullIdx = -1; i < nullIdxs.length; i++) {\n\t\tlet nullIdx = nullIdxs[i];\n\n\t\tif (nullIdx > lastNullIdx) {\n\t\t\txi = nullIdx - 1;\n\t\t\twhile (xi >= 0 && yVals[xi] == null)\n\t\t\t\tyVals[xi--] = null;\n\n\t\t\txi = nullIdx + 1;\n\t\t\twhile (xi < alignedLen && yVals[xi] == null)\n\t\t\t\tyVals[lastNullIdx = xi++] = null;\n\t\t}\n\t}\n}\n\n// nullModes is a tables-matched array indicating how to treat nulls in each series\n// output is sorted ASC on the joined field (table[0]) and duplicate join values are collapsed\nexport function join(tables, nullModes) {\n\tif (allHeadersSame(tables)) {\n\t//\tconsole.log('cheap join!');\n\n\t\tlet table = tables[0].slice();\n\n\t\tfor (let i = 1; i < tables.length; i++)\n\t\t\ttable.push(...tables[i].slice(1));\n\n\t\tif (!isAsc(table[0]))\n\t\t\ttable = sortCols(table);\n\n\t\treturn table;\n\t}\n\n\tlet xVals = new Set();\n\n\tfor (let ti = 0; ti < tables.length; ti++) {\n\t\tlet t = tables[ti];\n\t\tlet xs = t[0];\n\t\tlet len = xs.length;\n\n\t\tfor (let i = 0; i < len; i++)\n\t\t\txVals.add(xs[i]);\n\t}\n\n\tlet data = [Array.from(xVals).sort((a, b) => a - b)];\n\n\tlet alignedLen = data[0].length;\n\n\tlet xIdxs = new Map();\n\n\tfor (let i = 0; i < alignedLen; i++)\n\t\txIdxs.set(data[0][i], i);\n\n\tfor (let ti = 0; ti < tables.length; ti++) {\n\t\tlet t = tables[ti];\n\t\tlet xs = t[0];\n\n\t\tfor (let si = 1; si < t.length; si++) {\n\t\t\tlet ys = t[si];\n\n\t\t\tlet yVals = Array(alignedLen).fill(undefined);\n\n\t\t\tlet nullMode = nullModes ? nullModes[ti][si] : NULL_RETAIN;\n\n\t\t\tlet nullIdxs = [];\n\n\t\t\tfor (let i = 0; i < ys.length; i++) {\n\t\t\t\tlet yVal = ys[i];\n\t\t\t\tlet alignedIdx = xIdxs.get(xs[i]);\n\n\t\t\t\tif (yVal === null) {\n\t\t\t\t\tif (nullMode != NULL_REMOVE) {\n\t\t\t\t\t\tyVals[alignedIdx] = yVal;\n\n\t\t\t\t\t\tif (nullMode == NULL_EXPAND)\n\t\t\t\t\t\t\tnullIdxs.push(alignedIdx);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tyVals[alignedIdx] = yVal;\n\t\t\t}\n\n\t\t\tnullExpand(yVals, nullIdxs, alignedLen);\n\n\t\t\tdata.push(yVals);\n\t\t}\n\t}\n\n\treturn data;\n}\n\nexport const microTask = typeof queueMicrotask == \"undefined\" ? fn => Promise.resolve().then(fn) : queueMicrotask;\n\n// TODO: https://github.com/dy/sort-ids (~2x faster for 1e5+ arrays)\nfunction sortCols(table) {\n\tlet head = table[0];\n\tlet rlen = head.length;\n\n\tlet idxs = Array(rlen);\n\tfor (let i = 0; i < idxs.length; i++)\n\t\tidxs[i] = i;\n\n\tidxs.sort((i0, i1) => head[i0] - head[i1]);\n\n\tlet table2 = [];\n\tfor (let i = 0; i < table.length; i++) {\n\t\tlet row = table[i];\n\t\tlet row2 = Array(rlen);\n\n\t\tfor (let j = 0; j < rlen; j++)\n\t\t\trow2[j] = row[idxs[j]];\n\n\t\ttable2.push(row2);\n\t}\n\n\treturn table2;\n}\n\n// test if we can do cheap join (all join fields same)\nfunction allHeadersSame(tables) {\n\tlet vals0 = tables[0][0];\n\tlet len0 = vals0.length;\n\n\tfor (let i = 1; i < tables.length; i++) {\n\t\tlet vals1 = tables[i][0];\n\n\t\tif (vals1.length != len0)\n\t\t\treturn false;\n\n\t\tif (vals1 != vals0) {\n\t\t\tfor (let j = 0; j < len0; j++) {\n\t\t\t\tif (vals1[j] != vals0[j])\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction isAsc(vals, samples = 100) {\n\tconst len = vals.length;\n\n\t// empty or single value\n\tif (len <= 1)\n\t\treturn true;\n\n\t// skip leading & trailing nullish\n\tlet firstIdx = 0;\n\tlet lastIdx = len - 1;\n\n\twhile (firstIdx <= lastIdx && vals[firstIdx] == null)\n\t\tfirstIdx++;\n\n\twhile (lastIdx >= firstIdx && vals[lastIdx] == null)\n\t\tlastIdx--;\n\n\t// all nullish or one value surrounded by nullish\n\tif (lastIdx <= firstIdx)\n\t\treturn true;\n\n\tconst stride = max(1, floor((lastIdx - firstIdx + 1) / samples));\n\n\tfor (let prevVal = vals[firstIdx], i = firstIdx + stride; i <= lastIdx; i += stride) {\n\t\tconst v = vals[i];\n\n\t\tif (v != null) {\n\t\t\tif (v <= prevVal)\n\t\t\t\treturn false;\n\n\t\t\tprevVal = v;\n\t\t}\n\t}\n\n\treturn true;\n}","import {\n\tFEAT_TIME,\n} from './feats';\n\nconst months = [\n\t\"January\",\n\t\"February\",\n\t\"March\",\n\t\"April\",\n\t\"May\",\n\t\"June\",\n\t\"July\",\n\t\"August\",\n\t\"September\",\n\t\"October\",\n\t\"November\",\n\t\"December\",\n];\n\nconst days = [\n\t\"Sunday\",\n\t\"Monday\",\n\t\"Tuesday\",\n\t\"Wednesday\",\n\t\"Thursday\",\n\t\"Friday\",\n\t\"Saturday\",\n];\n\nfunction slice3(str) {\n\treturn str.slice(0, 3);\n}\n\nconst days3 = FEAT_TIME && days.map(slice3);\n\nconst months3 = FEAT_TIME && months.map(slice3);\n\nconst engNames = {\n\tMMMM: months,\n\tMMM:  months3,\n\tWWWW: days,\n\tWWW:  days3,\n};\n\nfunction zeroPad2(int) {\n\treturn (int < 10 ? '0' : '') + int;\n}\n\nfunction zeroPad3(int) {\n\treturn (int < 10 ? '00' : int < 100 ? '0' : '') + int;\n}\n\n/*\nfunction suffix(int) {\n\tlet mod10 = int % 10;\n\n\treturn int + (\n\t\tmod10 == 1 && int != 11 ? \"st\" :\n\t\tmod10 == 2 && int != 12 ? \"nd\" :\n\t\tmod10 == 3 && int != 13 ? \"rd\" : \"th\"\n\t);\n}\n*/\n\nconst subs = {\n\t// 2019\n\tYYYY:\td => d.getFullYear(),\n\t// 19\n\tYY:\t\td => (d.getFullYear()+'').slice(2),\n\t// July\n\tMMMM:\t(d, names) => names.MMMM[d.getMonth()],\n\t// Jul\n\tMMM:\t(d, names) => names.MMM[d.getMonth()],\n\t// 07\n\tMM:\t\td => zeroPad2(d.getMonth()+1),\n\t// 7\n\tM:\t\td => d.getMonth()+1,\n\t// 09\n\tDD:\t\td => zeroPad2(d.getDate()),\n\t// 9\n\tD:\t\td => d.getDate(),\n\t// Monday\n\tWWWW:\t(d, names) => names.WWWW[d.getDay()],\n\t// Mon\n\tWWW:\t(d, names) => names.WWW[d.getDay()],\n\t// 03\n\tHH:\t\td => zeroPad2(d.getHours()),\n\t// 3\n\tH:\t\td => d.getHours(),\n\t// 9 (12hr, unpadded)\n\th:\t\td => {let h = d.getHours(); return h == 0 ? 12 : h > 12 ? h - 12 : h;},\n\t// AM\n\tAA:\t\td => d.getHours() >= 12 ? 'PM' : 'AM',\n\t// am\n\taa:\t\td => d.getHours() >= 12 ? 'pm' : 'am',\n\t// a\n\ta:\t\td => d.getHours() >= 12 ? 'p' : 'a',\n\t// 09\n\tmm:\t\td => zeroPad2(d.getMinutes()),\n\t// 9\n\tm:\t\td => d.getMinutes(),\n\t// 09\n\tss:\t\td => zeroPad2(d.getSeconds()),\n\t// 9\n\ts:\t\td => d.getSeconds(),\n\t// 374\n\tfff:\td => zeroPad3(d.getMilliseconds()),\n};\n\nexport function fmtDate(tpl, names) {\n\tnames = names || engNames;\n\tlet parts = [];\n\n\tlet R = /\\{([a-z]+)\\}|[^{]+/gi, m;\n\n\twhile (m = R.exec(tpl))\n\t\tparts.push(m[0][0] == '{' ? subs[m[1]] : m[0]);\n\n\treturn d => {\n\t\tlet out = '';\n\n\t\tfor (let i = 0; i < parts.length; i++)\n\t\t\tout += typeof parts[i] == \"string\" ? parts[i] : parts[i](d, names);\n\n\t\treturn out;\n\t}\n}\n\nconst localTz = new Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n// https://stackoverflow.com/questions/15141762/how-to-initialize-a-javascript-date-to-a-particular-time-zone/53652131#53652131\nexport function tzDate(date, tz) {\n\tlet date2;\n\n\t// perf optimization\n\tif (tz == 'UTC' || tz == 'Etc/UTC')\n\t\tdate2 = new Date(+date + date.getTimezoneOffset() * 6e4);\n\telse if (tz == localTz)\n\t\tdate2 = date;\n\telse {\n\t\tdate2 = new Date(date.toLocaleString('en-US', {timeZone: tz}));\n\t\tdate2.setMilliseconds(date.getMilliseconds());\n\t}\n\n\treturn date2;\n}","import {\n\tFEAT_TIME,\n} from './feats';\n\nimport {\n\tassign,\n\n\tabs,\n\tmin,\n\tmax,\n\n\tinf,\n\tpow,\n\tlog2,\n\tlog10,\n\tgenIncrs,\n\tround,\n\tincrRoundUp,\n\troundDec,\n\tfloor,\n\tfmtNum,\n\tfixedDec,\n\n\tretArg1,\n\tnoop,\n\tceil,\n} from './utils';\n\nimport {\n\thexBlack,\n\tWIDTH,\n\tHEIGHT,\n\tLEGEND_DISP,\n} from './strings';\n\nimport {\n\tpxRatio,\n\tplaceDiv,\n\tsetStylePx,\n} from './dom';\n\nimport { fmtDate } from './fmtDate';\n\n//export const series = [];\n\n// default formatters:\n\nconst onlyWhole = v => v % 1 == 0;\n\nconst allMults = [1,2,2.5,5];\n\n// ...0.01, 0.02, 0.025, 0.05, 0.1, 0.2, 0.25, 0.5\nexport const decIncrs = genIncrs(10, -16, 0, allMults);\n\n// 1, 2, 2.5, 5, 10, 20, 25, 50...\nexport const oneIncrs = genIncrs(10, 0, 16, allMults);\n\n// 1, 2,      5, 10, 20, 25, 50...\nexport const wholeIncrs = oneIncrs.filter(onlyWhole);\n\nexport const numIncrs = decIncrs.concat(oneIncrs);\n\nconst NL = \"\\n\";\n\nconst yyyy    = \"{YYYY}\";\nconst NLyyyy  = NL + yyyy;\nconst md      = \"{M}/{D}\";\nconst NLmd    = NL + md;\nconst NLmdyy  = NLmd + \"/{YY}\";\n\nconst aa      = \"{aa}\";\nconst hmm     = \"{h}:{mm}\";\nconst hmmaa   = hmm + aa;\nconst NLhmmaa = NL + hmmaa;\nconst ss      = \":{ss}\";\n\nconst _ = null;\n\nfunction genTimeStuffs(ms) {\n\tlet\ts  = ms * 1e3,\n\t\tm  = s  * 60,\n\t\th  = m  * 60,\n\t\td  = h  * 24,\n\t\tmo = d  * 30,\n\t\ty  = d  * 365;\n\n\t// min of 1e-3 prevents setting a temporal x ticks too small since Date objects cannot advance ticks smaller than 1ms\n\tlet subSecIncrs = ms == 1 ? genIncrs(10, 0, 3, allMults).filter(onlyWhole) : genIncrs(10, -3, 0, allMults);\n\n\tlet timeIncrs = subSecIncrs.concat([\n\t\t// minute divisors (# of secs)\n\t\ts,\n\t\ts * 5,\n\t\ts * 10,\n\t\ts * 15,\n\t\ts * 30,\n\t\t// hour divisors (# of mins)\n\t\tm,\n\t\tm * 5,\n\t\tm * 10,\n\t\tm * 15,\n\t\tm * 30,\n\t\t// day divisors (# of hrs)\n\t\th,\n\t\th * 2,\n\t\th * 3,\n\t\th * 4,\n\t\th * 6,\n\t\th * 8,\n\t\th * 12,\n\t\t// month divisors TODO: need more?\n\t\td,\n\t\td * 2,\n\t\td * 3,\n\t\td * 4,\n\t\td * 5,\n\t\td * 6,\n\t\td * 7,\n\t\td * 8,\n\t\td * 9,\n\t\td * 10,\n\t\td * 15,\n\t\t// year divisors (# months, approx)\n\t\tmo,\n\t\tmo * 2,\n\t\tmo * 3,\n\t\tmo * 4,\n\t\tmo * 6,\n\t\t// century divisors\n\t\ty,\n\t\ty * 2,\n\t\ty * 5,\n\t\ty * 10,\n\t\ty * 25,\n\t\ty * 50,\n\t\ty * 100,\n\t]);\n\n\t// [0]:   minimum num secs in the tick incr\n\t// [1]:   default tick format\n\t// [2-7]: rollover tick formats\n\t// [8]:   mode: 0: replace [1] -> [2-7], 1: concat [1] + [2-7]\n\tconst _timeAxisStamps = [\n\t//   tick incr    default          year                    month   day                   hour    min       sec   mode\n\t\t[y,           yyyy,            _,                      _,      _,                    _,      _,        _,       1],\n\t\t[d * 28,      \"{MMM}\",         NLyyyy,                 _,      _,                    _,      _,        _,       1],\n\t\t[d,           md,              NLyyyy,                 _,      _,                    _,      _,        _,       1],\n\t\t[h,           \"{h}\" + aa,      NLmdyy,                 _,      NLmd,                 _,      _,        _,       1],\n\t\t[m,           hmmaa,           NLmdyy,                 _,      NLmd,                 _,      _,        _,       1],\n\t\t[s,           ss,              NLmdyy + \" \" + hmmaa,   _,      NLmd + \" \" + hmmaa,   _,      NLhmmaa,  _,       1],\n\t\t[ms,          ss + \".{fff}\",   NLmdyy + \" \" + hmmaa,   _,      NLmd + \" \" + hmmaa,   _,      NLhmmaa,  _,       1],\n\t];\n\n\t// the ensures that axis ticks, values & grid are aligned to logical temporal breakpoints and not an arbitrary timestamp\n\t// https://www.timeanddate.com/time/dst/\n\t// https://www.timeanddate.com/time/dst/2019.html\n\t// https://www.epochconverter.com/timezones\n\tfunction timeAxisSplits(tzDate) {\n\t\treturn (self, axisIdx, scaleMin, scaleMax, foundIncr, foundSpace) => {\n\t\t\tlet splits = [];\n\t\t\tlet isYr = foundIncr >= y;\n\t\t\tlet isMo = foundIncr >= mo && foundIncr < y;\n\n\t\t\t// get the timezone-adjusted date\n\t\t\tlet minDate = tzDate(scaleMin);\n\t\t\tlet minDateTs = roundDec(minDate * ms, 3);\n\n\t\t\t// get ts of 12am (this lands us at or before the original scaleMin)\n\t\t\tlet minMin = mkDate(minDate.getFullYear(), isYr ? 0 : minDate.getMonth(), isMo || isYr ? 1 : minDate.getDate());\n\t\t\tlet minMinTs = roundDec(minMin * ms, 3);\n\n\t\t\tif (isMo || isYr) {\n\t\t\t\tlet moIncr = isMo ? foundIncr / mo : 0;\n\t\t\t\tlet yrIncr = isYr ? foundIncr / y  : 0;\n\t\t\t//\tlet tzOffset = scaleMin - minDateTs;\t\t// needed?\n\t\t\t\tlet split = minDateTs == minMinTs ? minDateTs : roundDec(mkDate(minMin.getFullYear() + yrIncr, minMin.getMonth() + moIncr, 1) * ms, 3);\n\t\t\t\tlet splitDate = new Date(round(split / ms));\n\t\t\t\tlet baseYear = splitDate.getFullYear();\n\t\t\t\tlet baseMonth = splitDate.getMonth();\n\n\t\t\t\tfor (let i = 0; split <= scaleMax; i++) {\n\t\t\t\t\tlet next = mkDate(baseYear + yrIncr * i, baseMonth + moIncr * i, 1);\n\t\t\t\t\tlet offs = next - tzDate(roundDec(next * ms, 3));\n\n\t\t\t\t\tsplit = roundDec((+next + offs) * ms, 3);\n\n\t\t\t\t\tif (split <= scaleMax)\n\t\t\t\t\t\tsplits.push(split);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet incr0 = foundIncr >= d ? d : foundIncr;\n\t\t\t\tlet tzOffset = floor(scaleMin) - floor(minDateTs);\n\t\t\t\tlet split = minMinTs + tzOffset + incrRoundUp(minDateTs - minMinTs, incr0);\n\t\t\t\tsplits.push(split);\n\n\t\t\t\tlet date0 = tzDate(split);\n\n\t\t\t\tlet prevHour = date0.getHours() + (date0.getMinutes() / m) + (date0.getSeconds() / h);\n\t\t\t\tlet incrHours = foundIncr / h;\n\n\t\t\t\tlet minSpace = self.axes[axisIdx]._space;\n\t\t\t\tlet pctSpace = foundSpace / minSpace;\n\n\t\t\t\twhile (1) {\n\t\t\t\t\tsplit = roundDec(split + foundIncr, ms == 1 ? 0 : 3);\n\n\t\t\t\t\tif (split > scaleMax)\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tif (incrHours > 1) {\n\t\t\t\t\t\tlet expectedHour = floor(roundDec(prevHour + incrHours, 6)) % 24;\n\t\t\t\t\t\tlet splitDate = tzDate(split);\n\t\t\t\t\t\tlet actualHour = splitDate.getHours();\n\n\t\t\t\t\t\tlet dstShift = actualHour - expectedHour;\n\n\t\t\t\t\t\tif (dstShift > 1)\n\t\t\t\t\t\t\tdstShift = -1;\n\n\t\t\t\t\t\tsplit -= dstShift * h;\n\n\t\t\t\t\t\tprevHour = (prevHour + incrHours) % 24;\n\n\t\t\t\t\t\t// add a tick only if it's further than 70% of the min allowed label spacing\n\t\t\t\t\t\tlet prevSplit = splits[splits.length - 1];\n\t\t\t\t\t\tlet pctIncr = roundDec((split - prevSplit) / foundIncr, 3);\n\n\t\t\t\t\t\tif (pctIncr * pctSpace >= .7)\n\t\t\t\t\t\t\tsplits.push(split);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tsplits.push(split);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn splits;\n\t\t}\n\t}\n\n\treturn [\n\t\ttimeIncrs,\n\t\t_timeAxisStamps,\n\t\ttimeAxisSplits,\n\t];\n}\n\nexport const [ timeIncrsMs, _timeAxisStampsMs, timeAxisSplitsMs ] = FEAT_TIME && genTimeStuffs(1);\nexport const [ timeIncrsS,  _timeAxisStampsS,  timeAxisSplitsS  ] = FEAT_TIME && genTimeStuffs(1e-3);\n\n// base 2\nconst binIncrs = genIncrs(2, -53, 53, [1]);\n\n/*\nconsole.log({\n\tdecIncrs,\n\toneIncrs,\n\twholeIncrs,\n\tnumIncrs,\n\ttimeIncrs,\n\tfixedDec,\n});\n*/\n\nexport function timeAxisStamps(stampCfg, fmtDate) {\n\treturn stampCfg.map(s => s.map((v, i) =>\n\t\ti == 0 || i == 8 || v == null ? v : fmtDate(i == 1 || s[8] == 0 ? v : s[1] + v)\n\t));\n}\n\n// TODO: will need to accept spaces[] and pull incr into the loop when grid will be non-uniform, eg for log scales.\n// currently we ignore this for months since they're *nearly* uniform and the added complexity is not worth it\nexport function timeAxisVals(tzDate, stamps) {\n\treturn (self, splits, axisIdx, foundSpace, foundIncr) => {\n\t\tlet s = stamps.find(s => foundIncr >= s[0]) || stamps[stamps.length - 1];\n\n\t\t// these track boundaries when a full label is needed again\n\t\tlet prevYear;\n\t\tlet prevMnth;\n\t\tlet prevDate;\n\t\tlet prevHour;\n\t\tlet prevMins;\n\t\tlet prevSecs;\n\n\t\treturn splits.map(split => {\n\t\t\tlet date = tzDate(split);\n\n\t\t\tlet newYear = date.getFullYear();\n\t\t\tlet newMnth = date.getMonth();\n\t\t\tlet newDate = date.getDate();\n\t\t\tlet newHour = date.getHours();\n\t\t\tlet newMins = date.getMinutes();\n\t\t\tlet newSecs = date.getSeconds();\n\n\t\t\tlet stamp = (\n\t\t\t\tnewYear != prevYear && s[2] ||\n\t\t\t\tnewMnth != prevMnth && s[3] ||\n\t\t\t\tnewDate != prevDate && s[4] ||\n\t\t\t\tnewHour != prevHour && s[5] ||\n\t\t\t\tnewMins != prevMins && s[6] ||\n\t\t\t\tnewSecs != prevSecs && s[7] ||\n\t\t\t\t                       s[1]\n\t\t\t);\n\n\t\t\tprevYear = newYear;\n\t\t\tprevMnth = newMnth;\n\t\t\tprevDate = newDate;\n\t\t\tprevHour = newHour;\n\t\t\tprevMins = newMins;\n\t\t\tprevSecs = newSecs;\n\n\t\t\treturn stamp(date);\n\t\t});\n\t}\n}\n\n// for when axis.values is defined as a static fmtDate template string\nexport function timeAxisVal(tzDate, dateTpl) {\n\tlet stamp = fmtDate(dateTpl);\n\treturn (self, splits, axisIdx, foundSpace, foundIncr) => splits.map(split => stamp(tzDate(split)));\n}\n\nfunction mkDate(y, m, d) {\n\treturn new Date(y, m, d);\n}\n\nexport function timeSeriesStamp(stampCfg, fmtDate) {\n\treturn fmtDate(stampCfg);\n};\n\nexport const _timeSeriesStamp = '{YYYY}-{MM}-{DD} {h}:{mm}{aa}';\n\nexport function timeSeriesVal(tzDate, stamp) {\n\treturn (self, val, seriesIdx, dataIdx) => dataIdx == null ? LEGEND_DISP : stamp(tzDate(val));\n}\n\nexport function legendStroke(self, seriesIdx) {\n\tlet s = self.series[seriesIdx];\n\treturn s.width ? s.stroke(self, seriesIdx) : s.points.width ? s.points.stroke(self, seriesIdx) : null;\n}\n\nexport function legendFill(self, seriesIdx) {\n\treturn self.series[seriesIdx].fill(self, seriesIdx);\n}\n\nexport const legendOpts = {\n\tshow: true,\n\tlive: true,\n\tisolate: false,\n\tmount: noop,\n\tmarkers: {\n\t\tshow: true,\n\t\twidth: 2,\n\t\tstroke: legendStroke,\n\t\tfill: legendFill,\n\t\tdash: \"solid\",\n\t},\n\tidx: null,\n\tidxs: null,\n\tvalues: [],\n};\n\nfunction cursorPointShow(self, si) {\n\tlet o = self.cursor.points;\n\n\tlet pt = placeDiv();\n\n\tlet size = o.size(self, si);\n\tsetStylePx(pt, WIDTH, size);\n\tsetStylePx(pt, HEIGHT, size);\n\n\tlet mar = size / -2;\n\tsetStylePx(pt, \"marginLeft\", mar);\n\tsetStylePx(pt, \"marginTop\", mar);\n\n\tlet width = o.width(self, si, size);\n\twidth && setStylePx(pt, \"borderWidth\", width);\n\n\treturn pt;\n}\n\nfunction cursorPointFill(self, si) {\n\tlet sp = self.series[si].points;\n\treturn sp._fill || sp._stroke;\n}\n\nfunction cursorPointStroke(self, si) {\n\tlet sp = self.series[si].points;\n\treturn sp._stroke || sp._fill;\n}\n\nfunction cursorPointSize(self, si) {\n\tlet sp = self.series[si].points;\n\treturn sp.size;\n}\n\nfunction dataIdx(self, seriesIdx, cursorIdx) {\n\treturn cursorIdx;\n}\n\nconst moveTuple = [0,0];\n\nfunction cursorMove(self, mouseLeft1, mouseTop1) {\n\tmoveTuple[0] = mouseLeft1;\n\tmoveTuple[1] = mouseTop1;\n\treturn moveTuple;\n}\n\nfunction filtBtn0(self, targ, handle, onlyTarg = true) {\n\treturn e => {\n\t\te.button == 0 && (!onlyTarg || e.target == targ) && handle(e);\n\t};\n}\n\nfunction filtTarg(self, targ, handle, onlyTarg = true) {\n\treturn e => {\n\t\t(!onlyTarg || e.target == targ) && handle(e);\n\t};\n}\n\nexport const cursorOpts = {\n\tshow: true,\n\tx: true,\n\ty: true,\n\tlock: false,\n\tmove: cursorMove,\n\tpoints: {\n\t\tshow:   cursorPointShow,\n\t\tsize:   cursorPointSize,\n\t\twidth:  0,\n\t\tstroke: cursorPointStroke,\n\t\tfill:   cursorPointFill,\n\t},\n\n\tbind: {\n\t\tmousedown:   filtBtn0,\n\t\tmouseup:     filtBtn0,\n\t\tclick:       filtBtn0, // legend clicks, not .u-over clicks\n\t\tdblclick:    filtBtn0,\n\n\t\tmousemove:   filtTarg,\n\t\tmouseleave:  filtTarg,\n\t\tmouseenter:  filtTarg,\n\t},\n\n\tdrag: {\n\t\tsetScale: true,\n\t\tx: true,\n\t\ty: false,\n\t\tdist: 0,\n\t\tuni: null,\n\t\tclick: (self, e) => {\n\t\t//\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\te.stopImmediatePropagation();\n\t\t},\n\t\t_x: false,\n\t\t_y: false,\n\t},\n\n\tfocus: {\n\t\tprox: -1,\n\t\tbias: 0,\n\t},\n\n\tleft: -10,\n\ttop: -10,\n\tidx: null,\n\tdataIdx,\n\tidxs: null,\n\n\tevent: null,\n};\n\nconst axisLines = {\n\tshow: true,\n\tstroke: \"rgba(0,0,0,0.07)\",\n\twidth: 2,\n//\tdash: [],\n};\n\nconst grid = assign({}, axisLines, {\n\tfilter: retArg1,\n});\n\nconst ticks = assign({}, grid, {\n\tsize: 10,\n});\n\nconst border = assign({}, axisLines, {\n\tshow: false,\n});\n\nconst font      = '12px system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"';\nconst labelFont = \"bold \" + font;\nconst lineGap = 1.5;\t// font-size multiplier\n\nexport const xAxisOpts = {\n\tshow: true,\n\tscale: \"x\",\n\tstroke: hexBlack,\n\tspace: 50,\n\tgap: 5,\n\tsize: 50,\n\tlabelGap: 0,\n\tlabelSize: 30,\n\tlabelFont,\n\tside: 2,\n//\tclass: \"x-vals\",\n//\tincrs: timeIncrs,\n//\tvalues: timeVals,\n//\tfilter: retArg1,\n\tgrid,\n\tticks,\n\tborder,\n\tfont,\n\tlineGap,\n\trotate: 0,\n};\n\nexport const numSeriesLabel = \"Value\";\nexport const timeSeriesLabel = \"Time\";\n\nexport const xSeriesOpts = {\n\tshow: true,\n\tscale: \"x\",\n\tauto: false,\n\tsorted: 1,\n//\tlabel: \"Time\",\n//\tvalue: v => stamp(new Date(v * 1e3)),\n\n\t// internal caches\n\tmin: inf,\n\tmax: -inf,\n\tidxs: [],\n};\n\nexport function numAxisVals(self, splits, axisIdx, foundSpace, foundIncr) {\n\treturn splits.map(v => v == null ? \"\" : fmtNum(v));\n}\n\nexport function numAxisSplits(self, axisIdx, scaleMin, scaleMax, foundIncr, foundSpace, forceMin) {\n\tlet splits = [];\n\n\tlet numDec = fixedDec.get(foundIncr) || 0;\n\n\tscaleMin = forceMin ? scaleMin : roundDec(incrRoundUp(scaleMin, foundIncr), numDec);\n\n\tfor (let val = scaleMin; val <= scaleMax; val = roundDec(val + foundIncr, numDec))\n\t\tsplits.push(Object.is(val, -0) ? 0 : val);\t\t// coalesces -0\n\n\treturn splits;\n}\n\n// this doesnt work for sin, which needs to come off from 0 independently in pos and neg dirs\nexport function logAxisSplits(self, axisIdx, scaleMin, scaleMax, foundIncr, foundSpace, forceMin) {\n\tconst splits = [];\n\n\tconst logBase = self.scales[self.axes[axisIdx].scale].log;\n\n\tconst logFn = logBase == 10 ? log10 : log2;\n\n\tconst exp = floor(logFn(scaleMin));\n\n\tfoundIncr = pow(logBase, exp);\n\n\tif (logBase == 10 && exp < 0)\n\t\tfoundIncr = roundDec(foundIncr, -exp);\n\n\tlet split = scaleMin;\n\n\tdo {\n\t\tsplits.push(split);\n\t\tsplit = split + foundIncr;\n\n\t\tif (logBase == 10)\n\t\t\tsplit = roundDec(split, fixedDec.get(foundIncr));\n\n\t\tif (split >= foundIncr * logBase)\n\t\t\tfoundIncr = split;\n\n\t} while (split <= scaleMax);\n\n\treturn splits;\n}\n\nexport function asinhAxisSplits(self, axisIdx, scaleMin, scaleMax, foundIncr, foundSpace, forceMin) {\n\tlet sc = self.scales[self.axes[axisIdx].scale];\n\n\tlet linthresh = sc.asinh;\n\n\tlet posSplits = scaleMax > linthresh ? logAxisSplits(self, axisIdx, max(linthresh, scaleMin), scaleMax, foundIncr, foundSpace, forceMin) : [linthresh];\n\tlet zero = scaleMax >= 0 && scaleMin <= 0 ? [0] : [];\n\tlet negSplits = scaleMin < -linthresh ? logAxisSplits(self, axisIdx, max(linthresh, -scaleMax), -scaleMin, foundIncr, foundSpace, forceMin): [linthresh];\n\n\treturn negSplits.reverse().map(v => -v).concat(zero, posSplits);\n}\n\nconst RE_ALL   = /./;\nconst RE_12357 = /[12357]/;\nconst RE_125   = /[125]/;\nconst RE_1     = /1/;\n\nconst _filt = (splits, distr, re, keepMod) => splits.map((v, i) => ((distr == 4 && v == 0) || i % keepMod == 0 && re.test(v.toExponential()[v < 0 ? 1 : 0])) ? v : null);\n\nexport function log10AxisValsFilt(self, splits, axisIdx, foundSpace, foundIncr) {\n\tlet axis = self.axes[axisIdx];\n\tlet scaleKey = axis.scale;\n\tlet sc = self.scales[scaleKey];\n\n//\tif (sc.distr == 3 && sc.log == 2)\n//\t\treturn splits;\n\n\tlet valToPos = self.valToPos;\n\n\tlet minSpace = axis._space;\n\n\tlet _10 = valToPos(10, scaleKey);\n\n\tlet re = (\n\t\tvalToPos(9, scaleKey) - _10 >= minSpace ? RE_ALL :\n\t\tvalToPos(7, scaleKey) - _10 >= minSpace ? RE_12357 :\n\t\tvalToPos(5, scaleKey) - _10 >= minSpace ? RE_125 :\n\t\tRE_1\n\t);\n\n\tif (re == RE_1) {\n\t\tlet magSpace = abs(valToPos(1, scaleKey) - _10);\n\n\t\tif (magSpace < minSpace)\n\t\t\treturn _filt(splits.slice().reverse(), sc.distr, re, ceil(minSpace / magSpace)).reverse(); // max->min skip\n\t}\n\n\treturn _filt(splits, sc.distr, re, 1);\n}\n\nexport function log2AxisValsFilt(self, splits, axisIdx, foundSpace, foundIncr) {\n\tlet axis = self.axes[axisIdx];\n\tlet scaleKey = axis.scale;\n\tlet minSpace = axis._space;\n\tlet valToPos = self.valToPos;\n\n\tlet magSpace = abs(valToPos(1, scaleKey) - valToPos(2, scaleKey));\n\n\tif (magSpace < minSpace)\n\t\treturn _filt(splits.slice().reverse(), 3, RE_ALL, ceil(minSpace / magSpace)).reverse(); // max->min skip\n\n\treturn splits;\n}\n\nexport function numSeriesVal(self, val, seriesIdx, dataIdx) {\n\treturn dataIdx == null ? LEGEND_DISP : val == null ? \"\" : fmtNum(val);\n}\n\nexport const yAxisOpts = {\n\tshow: true,\n\tscale: \"y\",\n\tstroke: hexBlack,\n\tspace: 30,\n\tgap: 5,\n\tsize: 50,\n\tlabelGap: 0,\n\tlabelSize: 30,\n\tlabelFont,\n\tside: 3,\n//\tclass: \"y-vals\",\n//\tincrs: numIncrs,\n//\tvalues: (vals, space) => vals,\n//\tfilter: retArg1,\n\tgrid,\n\tticks,\n\tborder,\n\tfont,\n\tlineGap,\n\trotate: 0,\n};\n\n// takes stroke width\nexport function ptDia(width, mult) {\n\tlet dia = 3 + (width || 1) * 2;\n\treturn roundDec(dia * mult, 3);\n}\n\nfunction seriesPointsShow(self, si) {\n\tlet { scale, idxs } = self.series[0];\n\tlet xData = self._data[0];\n\tlet p0 = self.valToPos(xData[idxs[0]], scale, true);\n\tlet p1 = self.valToPos(xData[idxs[1]], scale, true);\n\tlet dim = abs(p1 - p0);\n\n\tlet s = self.series[si];\n//\tconst dia = ptDia(s.width, pxRatio);\n\tlet maxPts = dim / (s.points.space * pxRatio);\n\treturn idxs[1] - idxs[0] <= maxPts;\n}\n\nconst facet = {\n\tscale: null,\n\tauto: true,\n\tsorted: 0,\n\n\t// internal caches\n\tmin: inf,\n\tmax: -inf,\n};\n\nconst gaps = (self, seriesIdx, idx0, idx1, nullGaps) => nullGaps;\n\nexport const xySeriesOpts = {\n\tshow: true,\n\tauto: true,\n\tsorted: 0,\n\tgaps,\n\talpha: 1,\n\tfacets: [\n\t\tassign({}, facet, {scale: 'x'}),\n\t\tassign({}, facet, {scale: 'y'}),\n\t],\n};\n\nexport const ySeriesOpts = {\n\tscale: \"y\",\n\tauto: true,\n\tsorted: 0,\n\tshow: true,\n\tspanGaps: false,\n\tgaps,\n\talpha: 1,\n\tpoints: {\n\t\tshow: seriesPointsShow,\n\t\tfilter: null,\n\t//  paths:\n\t//\tstroke: \"#000\",\n\t//\tfill: \"#fff\",\n\t//\twidth: 1,\n\t//\tsize: 10,\n\t},\n//\tlabel: \"Value\",\n//\tvalue: v => v,\n\tvalues: null,\n\n\t// internal caches\n\tmin: inf,\n\tmax: -inf,\n\tidxs: [],\n\n\tpath: null,\n\tclip: null,\n};\n\nexport function clampScale(self, val, scaleMin, scaleMax, scaleKey) {\n/*\n\tif (val < 0) {\n\t\tlet cssHgt = self.bbox.height / pxRatio;\n\t\tlet absPos = self.valToPos(abs(val), scaleKey);\n\t\tlet fromBtm = cssHgt - absPos;\n\t\treturn self.posToVal(cssHgt + fromBtm, scaleKey);\n\t}\n*/\n\treturn scaleMin / 10;\n}\n\nexport const xScaleOpts = {\n\ttime: FEAT_TIME,\n\tauto: true,\n\tdistr: 1,\n\tlog: 10,\n\tasinh: 1,\n\tmin: null,\n\tmax: null,\n\tdir: 1,\n\tori: 0,\n};\n\nexport const yScaleOpts = assign({}, xScaleOpts, {\n\ttime: false,\n\tori: 1,\n});","export const syncs = {};\n\nexport function _sync(key, opts) {\n\tlet s = syncs[key];\n\n\tif (!s) {\n\t\ts = {\n\t\t\tkey,\n\t\t\tplots: [],\n\t\t\tsub(plot) {\n\t\t\t\ts.plots.push(plot);\n\t\t\t},\n\t\t\tunsub(plot) {\n\t\t\t\ts.plots = s.plots.filter(c => c != plot);\n\t\t\t},\n\t\t\tpub(type, self, x, y, w, h, i) {\n\t\t\t\tfor (let j = 0; j < s.plots.length; j++)\n\t\t\t\t\ts.plots[j] != self && s.plots[j].pub(type, self, x, y, w, h, i);\n\t\t\t},\n\t\t};\n\n\t\tif (key != null)\n\t\t\tsyncs[key] = s;\n\t}\n\n\treturn s;\n}","import { round, incrRound, retArg0, nonNullIdx, min, EMPTY_ARR, ifNull } from \"../utils\";\n\nexport const BAND_CLIP_FILL   = 1 << 0;\nexport const BAND_CLIP_STROKE = 1 << 1;\n\nexport function orient(u, seriesIdx, cb) {\n\tconst mode = u.mode;\n\tconst series = u.series[seriesIdx];\n\tconst data = mode == 2 ? u._data[seriesIdx] : u._data;\n\tconst scales = u.scales;\n\tconst bbox   = u.bbox;\n\n\tlet dx = data[0],\n\t\tdy = mode == 2 ? data[1] : data[seriesIdx],\n\t\tsx = mode == 2 ? scales[series.facets[0].scale] : scales[u.series[0].scale],\n\t\tsy = mode == 2 ? scales[series.facets[1].scale] : scales[series.scale],\n\t\tl = bbox.left,\n\t\tt = bbox.top,\n\t\tw = bbox.width,\n\t\th = bbox.height,\n\t\tH = u.valToPosH,\n\t\tV = u.valToPosV;\n\n\treturn (sx.ori == 0\n\t\t? cb(\n\t\t\tseries,\n\t\t\tdx,\n\t\t\tdy,\n\t\t\tsx,\n\t\t\tsy,\n\t\t\tH,\n\t\t\tV,\n\t\t\tl,\n\t\t\tt,\n\t\t\tw,\n\t\t\th,\n\t\t\tmoveToH,\n\t\t\tlineToH,\n\t\t\trectH,\n\t\t\tarcH,\n\t\t\tbezierCurveToH,\n\t\t)\n\t\t: cb(\n\t\t\tseries,\n\t\t\tdx,\n\t\t\tdy,\n\t\t\tsx,\n\t\t\tsy,\n\t\t\tV,\n\t\t\tH,\n\t\t\tt,\n\t\t\tl,\n\t\t\th,\n\t\t\tw,\n\t\t\tmoveToV,\n\t\t\tlineToV,\n\t\t\trectV,\n\t\t\tarcV,\n\t\t\tbezierCurveToV,\n\t\t)\n\t);\n}\n\nexport function bandFillClipDirs(self, seriesIdx) {\n\tlet fillDir = 0;\n\n\t// 2 bits, -1 | 1\n\tlet clipDirs = 0;\n\n\tlet bands = ifNull(self.bands, EMPTY_ARR);\n\n\tfor (let i = 0; i < bands.length; i++) {\n\t\tlet b = bands[i];\n\n\t\t// is a \"from\" band edge\n\t\tif (b.series[0] == seriesIdx)\n\t\t\tfillDir = b.dir;\n\t\t// is a \"to\" band edge\n\t\telse if (b.series[1] == seriesIdx) {\n\t\t\tif (b.dir == 1)\n\t\t\t\tclipDirs |= 1;\n\t\t\telse\n\t\t\t\tclipDirs |= 2;\n\t\t}\n\t}\n\n\treturn [\n\t\tfillDir,\n\t\t(\n\t\t\tclipDirs == 1 ? -1 : // neg only\n\t\t\tclipDirs == 2 ?  1 : // pos only\n\t\t\tclipDirs == 3 ?  2 : // both\n\t\t\t                 0   // neither\n\t\t)\n\t];\n}\n\nexport function seriesFillTo(self, seriesIdx, dataMin, dataMax, bandFillDir) {\n\tlet mode = self.mode;\n\tlet series = self.series[seriesIdx];\n\tlet scaleKey = mode == 2 ? series.facets[1].scale : series.scale;\n\tlet scale = self.scales[scaleKey];\n\n\treturn (\n\t\tbandFillDir == -1 ? scale.min :\n\t\tbandFillDir ==  1 ? scale.max :\n\t\tscale.distr ==  3 ? (\n\t\t\tscale.dir == 1 ? scale.min :\n\t\t\tscale.max\n\t\t) : 0\n\t);\n}\n\n// creates inverted band clip path (from stroke path -> yMax || yMin)\n// clipDir is always inverse of fillDir\n// default clip dir is upwards (1), since default band fill is downwards/fillBelowTo (-1) (highIdx -> lowIdx)\nexport function clipBandLine(self, seriesIdx, idx0, idx1, strokePath, clipDir) {\n\treturn orient(self, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\tlet pxRound = series.pxRound;\n\n\t\tconst dir = scaleX.dir * (scaleX.ori == 0 ? 1 : -1);\n\t\tconst lineTo = scaleX.ori == 0 ? lineToH : lineToV;\n\n\t\tlet frIdx, toIdx;\n\n\t\tif (dir == 1) {\n\t\t\tfrIdx = idx0;\n\t\t\ttoIdx = idx1;\n\t\t}\n\t\telse {\n\t\t\tfrIdx = idx1;\n\t\t\ttoIdx = idx0;\n\t\t}\n\n\t\t// path start\n\t\tlet x0 = pxRound(valToPosX(dataX[frIdx], scaleX, xDim, xOff));\n\t\tlet y0 = pxRound(valToPosY(dataY[frIdx], scaleY, yDim, yOff));\n\t\t// path end x\n\t\tlet x1 = pxRound(valToPosX(dataX[toIdx], scaleX, xDim, xOff));\n\t\t// upper or lower y limit\n\t\tlet yLimit = pxRound(valToPosY(clipDir == 1 ? scaleY.max : scaleY.min, scaleY, yDim, yOff));\n\n\t\tlet clip = new Path2D(strokePath);\n\n\t\tlineTo(clip, x1, yLimit);\n\t\tlineTo(clip, x0, yLimit);\n\t\tlineTo(clip, x0, y0);\n\n\t\treturn clip;\n\t});\n}\n\nexport function clipGaps(gaps, ori, plotLft, plotTop, plotWid, plotHgt) {\n\tlet clip = null;\n\n\t// create clip path (invert gaps and non-gaps)\n\tif (gaps.length > 0) {\n\t\tclip = new Path2D();\n\n\t\tconst rect = ori == 0 ? rectH : rectV;\n\n\t\tlet prevGapEnd = plotLft;\n\n\t\tfor (let i = 0; i < gaps.length; i++) {\n\t\t\tlet g = gaps[i];\n\n\t\t\tif (g[1] > g[0]) {\n\t\t\t\tlet w = g[0] - prevGapEnd;\n\n\t\t\t\tw > 0 && rect(clip, prevGapEnd, plotTop, w, plotTop + plotHgt);\n\n\t\t\t\tprevGapEnd = g[1];\n\t\t\t}\n\t\t}\n\n\t\tlet w = plotLft + plotWid - prevGapEnd;\n\n\t\t// hack to ensure we expand the clip enough to avoid cutting off strokes at edges\n\t\tlet maxStrokeWidth = 10;\n\n\t\tw > 0 && rect(clip, prevGapEnd, plotTop - maxStrokeWidth / 2, w, plotTop + plotHgt + maxStrokeWidth);\n\t}\n\n\treturn clip;\n}\n\nexport function addGap(gaps, fromX, toX) {\n\tlet prevGap = gaps[gaps.length - 1];\n\n\tif (prevGap && prevGap[0] == fromX)\t\t\t// TODO: gaps must be encoded at stroke widths?\n\t\tprevGap[1] = toX;\n\telse\n\t\tgaps.push([fromX, toX]);\n}\n\nexport function findGaps(xs, ys, idx0, idx1, dir, pixelForX, align) {\n\tlet gaps = [];\n\tlet len = xs.length;\n\n\tfor (let i = dir == 1 ? idx0 : idx1; i >= idx0 && i <= idx1; i += dir) {\n\t\tlet yVal = ys[i];\n\n\t\tif (yVal === null) {\n\t\t\tlet fr = i, to = i;\n\n\t\t\tif (dir == 1) {\n\t\t\t\twhile (++i <= idx1 && ys[i] === null)\n\t\t\t\t\tto = i;\n\t\t\t}\n\t\t\telse {\n\t\t\t\twhile (--i >= idx0 && ys[i] === null)\n\t\t\t\t\tto = i;\n\t\t\t}\n\n\t\t\tlet frPx = pixelForX(xs[fr]);\n\t\t\tlet toPx = to == fr ? frPx : pixelForX(xs[to]);\n\n\t\t\t// if value adjacent to edge null is same pixel, then it's partially\n\t\t\t// filled and gap should start at next pixel\n\t\t\tlet fri2 = fr - dir;\n\t\t\tlet frPx2 = align <= 0 && fri2 >= 0 && fri2 < len ? pixelForX(xs[fri2]) : frPx;\n\t\t//\tif (frPx2 == frPx)\n\t\t//\t\tfrPx++;\n\t\t//\telse\n\t\t\t\tfrPx = frPx2;\n\n\t\t\tlet toi2 = to + dir;\n\t\t\tlet toPx2 = align >= 0 && toi2 >= 0 && toi2 < len ? pixelForX(xs[toi2]) : toPx;\n\t\t//\tif (toPx2 == toPx)\n\t\t//\t\ttoPx--;\n\t\t//\telse\n\t\t\t\ttoPx = toPx2;\n\n\t\t\tif (toPx >= frPx)\n\t\t\t\tgaps.push([frPx, toPx]); // addGap\n\t\t}\n\t}\n\n\treturn gaps;\n}\n\nexport function pxRoundGen(pxAlign) {\n\treturn pxAlign == 0 ? retArg0 : pxAlign == 1 ? round : v => incrRound(v, pxAlign);\n}\n\n// inefficient linear interpolation that does bi-directinal scans on each call\nexport function costlyLerp(i, idx0, idx1, _dirX, dataY) {\n\tlet prevNonNull = nonNullIdx(dataY, _dirX == 1 ? idx0 : idx1, i, -_dirX);\n\tlet nextNonNull = nonNullIdx(dataY, i, _dirX == 1 ? idx1 : idx0,  _dirX);\n\n\tlet prevVal = dataY[prevNonNull];\n\tlet nextVal = dataY[nextNonNull];\n\n\treturn prevVal + (i - prevNonNull) / (nextNonNull - prevNonNull) * (nextVal - prevVal);\n}\n\nfunction rect(ori) {\n\tlet moveTo = ori == 0 ?\n\t\tmoveToH :\n\t\tmoveToV;\n\n\tlet arcTo = ori == 0 ?\n\t\t(p, x1, y1, x2, y2, r) => { p.arcTo(x1, y1, x2, y2, r) } :\n\t\t(p, y1, x1, y2, x2, r) => { p.arcTo(x1, y1, x2, y2, r) };\n\n\tlet rect = ori == 0 ?\n\t\t(p, x, y, w, h) => { p.rect(x, y, w, h); } :\n\t\t(p, y, x, h, w) => { p.rect(x, y, w, h); };\n\n\t// TODO (pending better browser support): https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/roundRect\n\treturn (p, x, y, w, h, endRad = 0, baseRad = 0) => {\n\t\tif (endRad == 0 && baseRad == 0)\n\t\t\trect(p, x, y, w, h);\n\t\telse {\n\t\t\tendRad  = min(endRad,  w / 2, h / 2);\n\t\t\tbaseRad = min(baseRad, w / 2, h / 2);\n\n\t\t\t// adapted from https://stackoverflow.com/questions/1255512/how-to-draw-a-rounded-rectangle-using-html-canvas/7838871#7838871\n\t\t\tmoveTo(p, x + endRad, y);\n\t\t\tarcTo(p, x + w, y, x + w, y + h, endRad);\n\t\t\tarcTo(p, x + w, y + h, x, y + h, baseRad);\n\t\t\tarcTo(p, x, y + h, x, y, baseRad);\n\t\t\tarcTo(p, x, y, x + w, y, endRad);\n\t\t\tp.closePath();\n\t\t}\n\t};\n}\n\n// orientation-inverting canvas functions\nexport const moveToH = (p, x, y) => { p.moveTo(x, y); }\nexport const moveToV = (p, y, x) => { p.moveTo(x, y); }\nexport const lineToH = (p, x, y) => { p.lineTo(x, y); }\nexport const lineToV = (p, y, x) => { p.lineTo(x, y); }\nexport const rectH = rect(0);\nexport const rectV = rect(1);\nexport const arcH = (p, x, y, r, startAngle, endAngle) => { p.arc(x, y, r, startAngle, endAngle); }\nexport const arcV = (p, y, x, r, startAngle, endAngle) => { p.arc(x, y, r, startAngle, endAngle); }\nexport const bezierCurveToH = (p, bp1x, bp1y, bp2x, bp2y, p2x, p2y) => { p.bezierCurveTo(bp1x, bp1y, bp2x, bp2y, p2x, p2y); };\nexport const bezierCurveToV = (p, bp1y, bp1x, bp2y, bp2x, p2y, p2x) => { p.bezierCurveTo(bp1x, bp1y, bp2x, bp2y, p2x, p2y); };","import { orient, moveToH, moveToV, rectH, arcH, arcV, BAND_CLIP_FILL, BAND_CLIP_STROKE } from './utils';\nimport { roundDec, PI } from '../utils';\nimport { pxRatio } from '../dom';\n\n// TODO: drawWrap(seriesIdx, drawPoints) (save, restore, translate, clip)\nexport function points(opts) {\n\treturn (u, seriesIdx, idx0, idx1, filtIdxs) => {\n\t//\tlog(\"drawPoints()\", arguments);\n\n\t\treturn orient(u, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\t\tlet { pxRound, points } = series;\n\n\t\t\tlet moveTo, arc;\n\n\t\t\tif (scaleX.ori == 0) {\n\t\t\t\tmoveTo = moveToH;\n\t\t\t\tarc = arcH;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmoveTo = moveToV;\n\t\t\t\tarc = arcV;\n\t\t\t}\n\n\t\t\tconst width = roundDec(points.width * pxRatio, 3);\n\n\t\t\tlet rad = (points.size - points.width) / 2 * pxRatio;\n\t\t\tlet dia = roundDec(rad * 2, 3);\n\n\t\t\tlet fill = new Path2D();\n\t\t\tlet clip = new Path2D();\n\n\t\t\tlet { left: lft, top: top, width: wid, height: hgt } = u.bbox;\n\n\t\t\trectH(clip,\n\t\t\t\tlft - dia,\n\t\t\t\ttop - dia,\n\t\t\t\twid + dia * 2,\n\t\t\t\thgt + dia * 2,\n\t\t\t);\n\n\t\t\tconst drawPoint = pi => {\n\t\t\t\tif (dataY[pi] != null) {\n\t\t\t\t\tlet x = pxRound(valToPosX(dataX[pi], scaleX, xDim, xOff));\n\t\t\t\t\tlet y = pxRound(valToPosY(dataY[pi], scaleY, yDim, yOff));\n\n\t\t\t\t\tmoveTo(fill, x + rad, y);\n\t\t\t\t\tarc(fill, x, y, rad, 0, PI * 2);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (filtIdxs)\n\t\t\t\tfiltIdxs.forEach(drawPoint);\n\t\t\telse {\n\t\t\t\tfor (let pi = idx0; pi <= idx1; pi++)\n\t\t\t\t\tdrawPoint(pi);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tstroke: width > 0 ? fill : null,\n\t\t\t\tfill,\n\t\t\t\tclip,\n\t\t\t\tflags: BAND_CLIP_FILL | BAND_CLIP_STROKE,\n\t\t\t};\n\t\t});\n\t};\n}","import { min, max, nonNullIdx, inf, ifNull } from '../utils';\nimport { orient, clipGaps, lineToH, lineToV, clipBandLine, BAND_CLIP_FILL, bandFillClipDirs, findGaps } from './utils';\n\nfunction _drawAcc(lineTo) {\n\treturn (stroke, accX, minY, maxY, inY, outY) => {\n\t\tif (minY != maxY) {\n\t\t\tif (inY != minY && outY != minY)\n\t\t\t\tlineTo(stroke, accX, minY);\n\t\t\tif (inY != maxY && outY != maxY)\n\t\t\t\tlineTo(stroke, accX, maxY);\n\n\t\t\tlineTo(stroke, accX, outY);\n\t\t}\n\t};\n}\n\nconst drawAccH = _drawAcc(lineToH);\nconst drawAccV = _drawAcc(lineToV);\n\nexport function linear(opts) {\n\tconst alignGaps = ifNull(opts?.alignGaps, 0);\n\n\treturn (u, seriesIdx, idx0, idx1) => {\n\t\treturn orient(u, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\t\tlet pxRound = series.pxRound;\n\n\t\t\tlet pixelForX = val => pxRound(valToPosX(val, scaleX, xDim, xOff));\n\t\t\tlet pixelForY = val => pxRound(valToPosY(val, scaleY, yDim, yOff));\n\n\t\t\tlet lineTo, drawAcc;\n\n\t\t\tif (scaleX.ori == 0) {\n\t\t\t\tlineTo = lineToH;\n\t\t\t\tdrawAcc = drawAccH;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlineTo = lineToV;\n\t\t\t\tdrawAcc = drawAccV;\n\t\t\t}\n\n\t\t\tconst dir = scaleX.dir * (scaleX.ori == 0 ? 1 : -1);\n\n\t\t\tconst _paths = {stroke: new Path2D(), fill: null, clip: null, band: null, gaps: null, flags: BAND_CLIP_FILL};\n\t\t\tconst stroke = _paths.stroke;\n\n\t\t\tlet minY = inf,\n\t\t\t\tmaxY = -inf,\n\t\t\t\tinY, outY, outX, drawnAtX;\n\n\t\t\tlet accX = pixelForX(dataX[dir == 1 ? idx0 : idx1]);\n\n\t\t\t// data edges\n\t\t\tlet lftIdx = nonNullIdx(dataY, idx0, idx1,  1 * dir);\n\t\t\tlet rgtIdx = nonNullIdx(dataY, idx0, idx1, -1 * dir);\n\t\t\tlet lftX   =  pixelForX(dataX[lftIdx]);\n\t\t\tlet rgtX   =  pixelForX(dataX[rgtIdx]);\n\n\t\t\tlet hasGap = false;\n\n\t\t\tfor (let i = dir == 1 ? idx0 : idx1; i >= idx0 && i <= idx1; i += dir) {\n\t\t\t\tlet x = pixelForX(dataX[i]);\n\t\t\t\tlet yVal = dataY[i];\n\n\t\t\t\tif (x == accX) {\n\t\t\t\t\tif (yVal != null) {\n\t\t\t\t\t\toutY = pixelForY(yVal);\n\n\t\t\t\t\t\tif (minY == inf) {\n\t\t\t\t\t\t\tlineTo(stroke, x, outY);\n\t\t\t\t\t\t\tinY = outY;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tminY = min(outY, minY);\n\t\t\t\t\t\tmaxY = max(outY, maxY);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (yVal === null)\n\t\t\t\t\t\t\thasGap = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (minY != inf) {\n\t\t\t\t\t\tdrawAcc(stroke, accX, minY, maxY, inY, outY);\n\t\t\t\t\t\toutX = drawnAtX = accX;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (yVal != null) {\n\t\t\t\t\t\toutY = pixelForY(yVal);\n\t\t\t\t\t\tlineTo(stroke, x, outY);\n\t\t\t\t\t\tminY = maxY = inY = outY;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tminY = inf;\n\t\t\t\t\t\tmaxY = -inf;\n\n\t\t\t\t\t\tif (yVal === null)\n\t\t\t\t\t\t\thasGap = true;\n\t\t\t\t\t}\n\n\t\t\t\t\taccX = x;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (minY != inf && minY != maxY && drawnAtX != accX)\n\t\t\t\tdrawAcc(stroke, accX, minY, maxY, inY, outY);\n\n\t\t\tlet [ bandFillDir, bandClipDir ] = bandFillClipDirs(u, seriesIdx);\n\n\t\t\tif (series.fill != null || bandFillDir != 0) {\n\t\t\t\tlet fill = _paths.fill = new Path2D(stroke);\n\n\t\t\t\tlet fillToVal = series.fillTo(u, seriesIdx, series.min, series.max, bandFillDir);\n\t\t\t\tlet fillToY = pixelForY(fillToVal);\n\n\t\t\t\tlineTo(fill, rgtX, fillToY);\n\t\t\t\tlineTo(fill, lftX, fillToY);\n\t\t\t}\n\n\t\t\tif (!series.spanGaps) {\n\t\t\t//\tconsole.time('gaps');\n\t\t\t\tlet gaps = [];\n\n\t\t\t\thasGap && gaps.push(...findGaps(dataX, dataY, idx0, idx1, dir, pixelForX, alignGaps));\n\n\t\t\t//\tconsole.timeEnd('gaps');\n\n\t\t\t//\tconsole.log('gaps', JSON.stringify(gaps));\n\n\t\t\t\t_paths.gaps = gaps = series.gaps(u, seriesIdx, idx0, idx1, gaps);\n\n\t\t\t\t_paths.clip = clipGaps(gaps, scaleX.ori, xOff, yOff, xDim, yDim);\n\t\t\t}\n\n\t\t\tif (bandClipDir != 0) {\n\t\t\t\t_paths.band = bandClipDir == 2 ? [\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke, -1),\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke,  1),\n\t\t\t\t] : clipBandLine(u, seriesIdx, idx0, idx1, stroke, bandClipDir);\n\t\t\t}\n\n\t\t\treturn _paths;\n\t\t});\n\t};\n}","import { nonNullIdx, ifNull } from '../utils';\nimport { orient, clipGaps, lineToH, lineToV, clipBandLine, BAND_CLIP_FILL, bandFillClipDirs, findGaps } from './utils';\nimport { pxRatio } from '../dom';\n\n// BUG: align: -1 behaves like align: 1 when scale.dir: -1\nexport function stepped(opts) {\n\tconst align = ifNull(opts.align, 1);\n\t// whether to draw ascenders/descenders at null/gap bondaries\n\tconst ascDesc = ifNull(opts.ascDesc, false);\n\tconst alignGaps = ifNull(opts.alignGaps, 0);\n\tconst extend = ifNull(opts.extend, false);\n\n\treturn (u, seriesIdx, idx0, idx1) => {\n\t\treturn orient(u, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\t\tlet pxRound = series.pxRound;\n\n\t\t\tlet { left, width } = u.bbox;\n\n\t\t\tlet pixelForX = val => pxRound(valToPosX(val, scaleX, xDim, xOff));\n\t\t\tlet pixelForY = val => pxRound(valToPosY(val, scaleY, yDim, yOff));\n\n\t\t\tlet lineTo = scaleX.ori == 0 ? lineToH : lineToV;\n\n\t\t\tconst _paths = {stroke: new Path2D(), fill: null, clip: null, band: null, gaps: null, flags: BAND_CLIP_FILL};\n\t\t\tconst stroke = _paths.stroke;\n\n\t\t\tconst dir = scaleX.dir * (scaleX.ori == 0 ? 1 : -1);\n\n\t\t\tidx0 = nonNullIdx(dataY, idx0, idx1,  1);\n\t\t\tidx1 = nonNullIdx(dataY, idx0, idx1, -1);\n\n\t\t\tlet prevYPos  = pixelForY(dataY[dir == 1 ? idx0 : idx1]);\n\t\t\tlet firstXPos = pixelForX(dataX[dir == 1 ? idx0 : idx1]);\n\t\t\tlet prevXPos = firstXPos;\n\n\t\t\tlet firstXPosExt = firstXPos;\n\n\t\t\tif (extend && align == -1) {\n\t\t\t\tfirstXPosExt = left;\n\t\t\t\tlineTo(stroke, firstXPosExt, prevYPos);\n\t\t\t}\n\n\t\t\tlineTo(stroke, firstXPos, prevYPos);\n\n\t\t\tfor (let i = dir == 1 ? idx0 : idx1; i >= idx0 && i <= idx1; i += dir) {\n\t\t\t\tlet yVal1 = dataY[i];\n\n\t\t\t\tif (yVal1 == null)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tlet x1 = pixelForX(dataX[i]);\n\t\t\t\tlet y1 = pixelForY(yVal1);\n\n\t\t\t\tif (align == 1)\n\t\t\t\t\tlineTo(stroke, x1, prevYPos);\n\t\t\t\telse\n\t\t\t\t\tlineTo(stroke, prevXPos, y1);\n\n\t\t\t\tlineTo(stroke, x1, y1);\n\n\t\t\t\tprevYPos = y1;\n\t\t\t\tprevXPos = x1;\n\t\t\t}\n\n\t\t\tlet prevXPosExt = prevXPos;\n\n\t\t\tif (extend && align == 1) {\n\t\t\t\tprevXPosExt = left + width;\n\t\t\t\tlineTo(stroke, prevXPosExt, prevYPos);\n\t\t\t}\n\n\t\t\tlet [ bandFillDir, bandClipDir ] = bandFillClipDirs(u, seriesIdx);\n\n\t\t\tif (series.fill != null || bandFillDir != 0) {\n\t\t\t\tlet fill = _paths.fill = new Path2D(stroke);\n\n\t\t\t\tlet fillTo = series.fillTo(u, seriesIdx, series.min, series.max, bandFillDir);\n\t\t\t\tlet fillToY = pixelForY(fillTo);\n\n\t\t\t\tlineTo(fill, prevXPosExt, fillToY);\n\t\t\t\tlineTo(fill, firstXPosExt, fillToY);\n\t\t\t}\n\n\t\t\tif (!series.spanGaps) {\n\t\t\t//\tconsole.time('gaps');\n\t\t\t\tlet gaps = [];\n\n\t\t\t\tgaps.push(...findGaps(dataX, dataY, idx0, idx1, dir, pixelForX, alignGaps));\n\n\t\t\t//\tconsole.timeEnd('gaps');\n\n\t\t\t//\tconsole.log('gaps', JSON.stringify(gaps));\n\n\t\t\t\t// expand/contract clips for ascenders/descenders\n\t\t\t\tlet halfStroke = (series.width * pxRatio) / 2;\n\t\t\t\tlet startsOffset = (ascDesc || align ==  1) ?  halfStroke : -halfStroke;\n\t\t\t\tlet endsOffset   = (ascDesc || align == -1) ? -halfStroke :  halfStroke;\n\n\t\t\t\tgaps.forEach(g => {\n\t\t\t\t\tg[0] += startsOffset;\n\t\t\t\t\tg[1] += endsOffset;\n\t\t\t\t});\n\n\t\t\t\t_paths.gaps = gaps = series.gaps(u, seriesIdx, idx0, idx1, gaps);\n\n\t\t\t\t_paths.clip = clipGaps(gaps, scaleX.ori, xOff, yOff, xDim, yDim);\n\t\t\t}\n\n\t\t\tif (bandClipDir != 0) {\n\t\t\t\t_paths.band = bandClipDir == 2 ? [\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke, -1),\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke,  1),\n\t\t\t\t] : clipBandLine(u, seriesIdx, idx0, idx1, stroke, bandClipDir);\n\t\t\t}\n\n\t\t\treturn _paths;\n\t\t});\n\t};\n}","import { abs, floor, min, max, inf, ifNull, EMPTY_OBJ, fnOrSelf, clamp, retArg0 } from '../utils';\nimport { orient, rectV, rectH, BAND_CLIP_FILL, BAND_CLIP_STROKE, bandFillClipDirs } from './utils';\nimport { pxRatio } from '../dom';\n\nexport function bars(opts) {\n\topts = opts || EMPTY_OBJ;\n\tconst size = ifNull(opts.size, [0.6, inf, 1]);\n\tconst align = opts.align || 0;\n\tconst extraGap = (opts.gap || 0) * pxRatio;\n\n\tlet ro = opts.radius;\n\n\tro =\n\t\t// [valueRadius, baselineRadius]\n\t\tro == null ? [0, 0] :\n\t\ttypeof ro == 'number' ? [ro, 0] : ro;\n\n\tconst radiusFn = fnOrSelf(ro);\n\n\tconst gapFactor = 1 - size[0];\n\tconst maxWidth  = ifNull(size[1], inf) * pxRatio;\n\tconst minWidth  = ifNull(size[2], 1) * pxRatio;\n\n\tconst disp = ifNull(opts.disp, EMPTY_OBJ);\n\tconst _each = ifNull(opts.each, _ => {});\n\n\tconst { fill: dispFills, stroke: dispStrokes } = disp;\n\n\treturn (u, seriesIdx, idx0, idx1) => {\n\t\treturn orient(u, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\t\tlet pxRound = series.pxRound;\n\n\t\t\tlet valRadius, baseRadius;\n\n\t\t\tif (scaleX.ori == 0)\n\t\t\t\t[valRadius, baseRadius] = radiusFn(u, seriesIdx);\n\t\t\telse\n\t\t\t\t[baseRadius, valRadius] = radiusFn(u, seriesIdx);\n\n\t\t\tconst _dirX = scaleX.dir * (scaleX.ori == 0 ? 1 : -1);\n\t\t\tconst _dirY = scaleY.dir * (scaleY.ori == 1 ? 1 : -1);\n\n\t\t\tlet rect = scaleX.ori == 0 ? rectH : rectV;\n\n\t\t\tlet each = scaleX.ori == 0 ? _each : (u, seriesIdx, i, top, lft, hgt, wid) => {\n\t\t\t\t_each(u, seriesIdx, i, lft, top, wid, hgt);\n\t\t\t};\n\n\t\t\tlet [ bandFillDir, bandClipDir ] = bandFillClipDirs(u, seriesIdx);\n\n\t\t//\tlet fillToY = series.fillTo(u, seriesIdx, series.min, series.max, bandFillDir);\n\t\t\tlet fillToY = scaleY.distr == 3 ? (bandFillDir == 1 ? scaleY.max : scaleY.min) : 0;\n\n\t\t\tlet y0Pos = valToPosY(fillToY, scaleY, yDim, yOff);\n\n\t\t\t// barWid is to center of stroke\n\t\t\tlet xShift, barWid;\n\n\t\t\tlet strokeWidth = pxRound(series.width * pxRatio);\n\n\t\t\tlet multiPath = false;\n\n\t\t\tlet fillColors = null;\n\t\t\tlet fillPaths = null;\n\t\t\tlet strokeColors = null;\n\t\t\tlet strokePaths = null;\n\n\t\t\tif (dispFills != null && (strokeWidth == 0 || dispStrokes != null)) {\n\t\t\t\tmultiPath = true;\n\n\t\t\t\tfillColors = dispFills.values(u, seriesIdx, idx0, idx1);\n\t\t\t\tfillPaths = new Map();\n\t\t\t\t(new Set(fillColors)).forEach(color => {\n\t\t\t\t\tif (color != null)\n\t\t\t\t\t\tfillPaths.set(color, new Path2D());\n\t\t\t\t});\n\n\t\t\t\tif (strokeWidth > 0) {\n\t\t\t\t\tstrokeColors = dispStrokes.values(u, seriesIdx, idx0, idx1);\n\t\t\t\t\tstrokePaths = new Map();\n\t\t\t\t\t(new Set(strokeColors)).forEach(color => {\n\t\t\t\t\t\tif (color != null)\n\t\t\t\t\t\t\tstrokePaths.set(color, new Path2D());\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet { x0, size } = disp;\n\n\t\t\tlet bandClipNulls = true;\n\n\t\t\tif (x0 != null && size != null) {\n\t\t\t\tdataX = x0.values(u, seriesIdx, idx0, idx1);\n\n\t\t\t\tif (x0.unit == 2)\n\t\t\t\t\tdataX = dataX.map(pct => u.posToVal(xOff + pct * xDim, scaleX.key, true));\n\n\t\t\t\t// assumes uniform sizes, for now\n\t\t\t\tlet sizes = size.values(u, seriesIdx, idx0, idx1);\n\n\t\t\t\tif (size.unit == 2)\n\t\t\t\t\tbarWid = sizes[0] * xDim;\n\t\t\t\telse\n\t\t\t\t\tbarWid = valToPosX(sizes[0], scaleX, xDim, xOff) - valToPosX(0, scaleX, xDim, xOff); // assumes linear scale (delta from 0)\n\n\t\t\t\tif (strokeWidth >= barWid / 2)\n\t\t\t\t\tstrokeWidth = 0;\n\n\t\t\t\t// for small gaps, disable pixel snapping since gap inconsistencies become noticible and annoying\n\t\t\t//\tif (gapWid + extraGap < 5)\n\t\t\t//\t\tpxRound = retArg0;\n\n\t\t\t\tbarWid = pxRound(clamp(barWid - strokeWidth, minWidth, maxWidth)); // TODO: extraGap?\n\n\t\t\t\txShift = (_dirX == 1 ? -strokeWidth / 2 : barWid + strokeWidth / 2);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet colWid = xDim;\n\n\t\t\t\tif (dataX.length > 1) {\n\t\t\t\t\t// prior index with non-undefined y data\n\t\t\t\t\tlet prevIdx = null;\n\n\t\t\t\t\t// scan full dataset for smallest adjacent delta\n\t\t\t\t\t// will not work properly for non-linear x scales, since does not do expensive valToPosX calcs till end\n\t\t\t\t\tfor (let i = 0, minDelta = Infinity; i < dataX.length; i++) {\n\t\t\t\t\t\tif (dataY[i] !== undefined) {\n\t\t\t\t\t\t\tif (prevIdx != null) {\n\t\t\t\t\t\t\t\tlet delta = abs(dataX[i] - dataX[prevIdx]);\n\n\t\t\t\t\t\t\t\tif (delta < minDelta) {\n\t\t\t\t\t\t\t\t\tminDelta = delta;\n\t\t\t\t\t\t\t\t\tcolWid = abs(valToPosX(dataX[i], scaleX, xDim, xOff) - valToPosX(dataX[prevIdx], scaleX, xDim, xOff));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tprevIdx = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet gapWid = colWid * gapFactor;\n\n\t\t\t\tbarWid = colWid - gapWid - extraGap;\n\n\t\t\t\tif (strokeWidth >= barWid / 2)\n\t\t\t\t\tstrokeWidth = 0;\n\n\t\t\t\t// for small gaps, disable pixel snapping since gap inconsistencies become noticible and annoying\n\t\t\t\tif (gapWid + extraGap < 5)\n\t\t\t\t\tpxRound = retArg0;\n\n\t\t\t\tbarWid = pxRound(clamp(colWid - gapWid, minWidth, maxWidth) - strokeWidth - extraGap);\n\n\t\t\t\txShift = (align == 0 ? barWid / 2 : align == _dirX ? 0 : barWid) - align * _dirX * extraGap / 2;\n\n\t\t\t\t// when colWidth is smaller than [min-clamped] bar width (e.g. aligned data values are non-uniform)\n\t\t\t\t// disable clipping of null-valued band bars to avoid clip overlap / bleed into adjacent bars\n\t\t\t\t// (this could still bleed clips of adjacent band/stacked bars into each other, so is far from perfect)\n\t\t\t\tif (barWid + strokeWidth > colWid)\n\t\t\t\t\tbandClipNulls = false;\n\t\t\t}\n\n\t\t\tconst _paths = {stroke: null, fill: null, clip: null, band: null, gaps: null, flags: BAND_CLIP_FILL | BAND_CLIP_STROKE};  // disp, geom\n\n\t\t\tlet yLimit;\n\n\t\t\tif (bandClipDir != 0) {\n\t\t\t\t_paths.band = new Path2D();\n\t\t\t\tyLimit = pxRound(valToPosY(bandClipDir == 1 ? scaleY.max : scaleY.min, scaleY, yDim, yOff));\n\t\t\t}\n\n\t\t\tconst stroke = multiPath ? null : new Path2D();\n\t\t\tconst band = _paths.band;\n\n\t\t\tlet { y0, y1 } = disp;\n\n\t\t\tlet dataY0 = null;\n\n\t\t\tif (y0 != null && y1 != null) {\n\t\t\t\tdataY = y1.values(u, seriesIdx, idx0, idx1);\n\t\t\t\tdataY0 = y0.values(u, seriesIdx, idx0, idx1);\n\t\t\t}\n\n\t\t\tlet radVal = valRadius * barWid;\n\t\t\tlet radBase = baseRadius * barWid;\n\n\t\t\tfor (let i = _dirX == 1 ? idx0 : idx1; i >= idx0 && i <= idx1; i += _dirX) {\n\t\t\t\tlet yVal = dataY[i];\n\n\t\t\t\t// we can skip both, drawing and band clipping for alignment artifacts\n\t\t\t\tif (yVal === undefined)\n\t\t\t\t\tcontinue;\n\n\t\t\t/*\n\t\t\t\t// interpolate upwards band clips\n\t\t\t\tif (yVal == null) {\n\t\t\t\t//\tif (hasBands)\n\t\t\t\t//\t\tyVal = costlyLerp(i, idx0, idx1, _dirX, dataY);\n\t\t\t\t//\telse\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t*/\n\n\t\t\t\tlet xVal = scaleX.distr != 2 || disp != null ? dataX[i] : i;\n\n\t\t\t\t// TODO: all xPos can be pre-computed once for all series in aligned set\n\t\t\t\tlet xPos = valToPosX(xVal, scaleX, xDim, xOff);\n\t\t\t\tlet yPos = valToPosY(ifNull(yVal, fillToY), scaleY, yDim, yOff);\n\n\t\t\t\tif (dataY0 != null && yVal != null)\n\t\t\t\t\ty0Pos = valToPosY(dataY0[i], scaleY, yDim, yOff);\n\n\t\t\t\tlet lft = pxRound(xPos - xShift);\n\t\t\t\tlet btm = pxRound(max(yPos, y0Pos));\n\t\t\t\tlet top = pxRound(min(yPos, y0Pos));\n\t\t\t\t// this includes the stroke\n\t\t\t\tlet barHgt = btm - top;\n\n\t\t\t\tif (yVal != null) {  // && yVal != fillToY (0 height bar)\n\t\t\t\t\tlet rv = yVal < 0 ? radBase : radVal;\n\t\t\t\t\tlet rb = yVal < 0 ? radVal : radBase;\n\n\t\t\t\t\tif (multiPath) {\n\t\t\t\t\t\tif (strokeWidth > 0 && strokeColors[i] != null)\n\t\t\t\t\t\t\trect(strokePaths.get(strokeColors[i]), lft, top + floor(strokeWidth / 2), barWid, max(0, barHgt - strokeWidth), rv, rb);\n\n\t\t\t\t\t\tif (fillColors[i] != null)\n\t\t\t\t\t\t\trect(fillPaths.get(fillColors[i]), lft, top + floor(strokeWidth / 2), barWid, max(0, barHgt - strokeWidth), rv, rb);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\trect(stroke, lft, top + floor(strokeWidth / 2), barWid, max(0, barHgt - strokeWidth), rv, rb);\n\n\t\t\t\t\teach(u, seriesIdx, i,\n\t\t\t\t\t\tlft    - strokeWidth / 2,\n\t\t\t\t\t\ttop,\n\t\t\t\t\t\tbarWid + strokeWidth,\n\t\t\t\t\t\tbarHgt,\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (bandClipDir != 0 && (yVal != null || bandClipNulls)) {\n\t\t\t\t\tif (_dirY * bandClipDir == 1) {\n\t\t\t\t\t\tbtm = top;\n\t\t\t\t\t\ttop = yLimit;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttop = btm;\n\t\t\t\t\t\tbtm = yLimit;\n\t\t\t\t\t}\n\n\t\t\t\t\tbarHgt = btm - top;\n\n\t\t\t\t\trect(band, lft - strokeWidth / 2, top, barWid + strokeWidth, max(0, barHgt), 0, 0);  // radius here?\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (strokeWidth > 0)\n\t\t\t\t_paths.stroke = multiPath ? strokePaths : stroke;\n\t\t\telse if (!multiPath) {\n\t\t\t\t_paths._fill = series.width == 0 ? series._fill : series._stroke ?? series._fill;\n\t\t\t\t_paths.width = 0;\n\t\t\t}\n\n\t\t\t_paths.fill = multiPath ? fillPaths : stroke;\n\n\t\t\treturn _paths;\n\t\t});\n\t};\n}","import { ifNull, nonNullIdx } from '../utils';\nimport { orient, clipGaps, moveToH, moveToV, lineToH, lineToV, bezierCurveToH, bezierCurveToV, clipBandLine, BAND_CLIP_FILL, bandFillClipDirs, findGaps } from './utils';\n\nexport function splineInterp(interp, opts) {\n\tconst alignGaps = ifNull(opts?.alignGaps, 0);\n\n\treturn (u, seriesIdx, idx0, idx1) => {\n\t\treturn orient(u, seriesIdx, (series, dataX, dataY, scaleX, scaleY, valToPosX, valToPosY, xOff, yOff, xDim, yDim) => {\n\t\t\tlet pxRound = series.pxRound;\n\n\t\t\tlet pixelForX = val => pxRound(valToPosX(val, scaleX, xDim, xOff));\n\t\t\tlet pixelForY = val => pxRound(valToPosY(val, scaleY, yDim, yOff));\n\n\t\t\tlet moveTo, bezierCurveTo, lineTo;\n\n\t\t\tif (scaleX.ori == 0) {\n\t\t\t\tmoveTo = moveToH;\n\t\t\t\tlineTo = lineToH;\n\t\t\t\tbezierCurveTo = bezierCurveToH;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tmoveTo = moveToV;\n\t\t\t\tlineTo = lineToV;\n\t\t\t\tbezierCurveTo = bezierCurveToV;\n\t\t\t}\n\n\t\t\tconst dir = scaleX.dir * (scaleX.ori == 0 ? 1 : -1);\n\n\t\t\tidx0 = nonNullIdx(dataY, idx0, idx1,  1);\n\t\t\tidx1 = nonNullIdx(dataY, idx0, idx1, -1);\n\n\t\t\tlet firstXPos = pixelForX(dataX[dir == 1 ? idx0 : idx1]);\n\t\t\tlet prevXPos = firstXPos;\n\n\t\t\tlet xCoords = [];\n\t\t\tlet yCoords = [];\n\n\t\t\tfor (let i = dir == 1 ? idx0 : idx1; i >= idx0 && i <= idx1; i += dir) {\n\t\t\t\tlet yVal = dataY[i];\n\n\t\t\t\tif (yVal != null) {\n\t\t\t\t\tlet xVal = dataX[i];\n\t\t\t\t\tlet xPos = pixelForX(xVal);\n\n\t\t\t\t\txCoords.push(prevXPos = xPos);\n\t\t\t\t\tyCoords.push(pixelForY(dataY[i]));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst _paths = {stroke: interp(xCoords, yCoords, moveTo, lineTo, bezierCurveTo, pxRound), fill: null, clip: null, band: null, gaps: null, flags: BAND_CLIP_FILL};\n\t\t\tconst stroke = _paths.stroke;\n\n\t\t\tlet [ bandFillDir, bandClipDir ] = bandFillClipDirs(u, seriesIdx);\n\n\t\t\tif (series.fill != null || bandFillDir != 0) {\n\t\t\t\tlet fill = _paths.fill = new Path2D(stroke);\n\n\t\t\t\tlet fillTo = series.fillTo(u, seriesIdx, series.min, series.max, bandFillDir);\n\t\t\t\tlet fillToY = pixelForY(fillTo);\n\n\t\t\t\tlineTo(fill, prevXPos, fillToY);\n\t\t\t\tlineTo(fill, firstXPos, fillToY);\n\t\t\t}\n\n\t\t\tif (!series.spanGaps) {\n\t\t\t//\tconsole.time('gaps');\n\t\t\t\tlet gaps = [];\n\n\t\t\t\tgaps.push(...findGaps(dataX, dataY, idx0, idx1, dir, pixelForX, alignGaps));\n\n\t\t\t//\tconsole.timeEnd('gaps');\n\n\t\t\t//\tconsole.log('gaps', JSON.stringify(gaps));\n\n\t\t\t\t_paths.gaps = gaps = series.gaps(u, seriesIdx, idx0, idx1, gaps);\n\n\t\t\t\t_paths.clip = clipGaps(gaps, scaleX.ori, xOff, yOff, xDim, yDim);\n\t\t\t}\n\n\t\t\tif (bandClipDir != 0) {\n\t\t\t\t_paths.band = bandClipDir == 2 ? [\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke, -1),\n\t\t\t\t\tclipBandLine(u, seriesIdx, idx0, idx1, stroke,  1),\n\t\t\t\t] : clipBandLine(u, seriesIdx, idx0, idx1, stroke, bandClipDir);\n\t\t\t}\n\n\t\t\treturn _paths;\n\n\t\t\t//  if FEAT_PATHS: false in rollup.config.js\n\t\t\t//\tu.ctx.save();\n\t\t\t//\tu.ctx.beginPath();\n\t\t\t//\tu.ctx.rect(u.bbox.left, u.bbox.top, u.bbox.width, u.bbox.height);\n\t\t\t//\tu.ctx.clip();\n\t\t\t//\tu.ctx.strokeStyle = u.series[sidx].stroke;\n\t\t\t//\tu.ctx.stroke(stroke);\n\t\t\t//\tu.ctx.fillStyle = u.series[sidx].fill;\n\t\t\t//\tu.ctx.fill(fill);\n\t\t\t//\tu.ctx.restore();\n\t\t\t//\treturn null;\n\t\t});\n\t};\n}\n","import { splineInterp } from \"./spline\";\n\nexport function monotoneCubic(opts) {\n\treturn splineInterp(_monotoneCubic, opts);\n}\n\n// Monotone Cubic Spline interpolation, adapted from the Chartist.js implementation:\n// https://github.com/gionkunz/chartist-js/blob/e7e78201bffe9609915e5e53cfafa29a5d6c49f9/src/scripts/interpolation.js#L240-L369\nfunction _monotoneCubic(xs, ys, moveTo, lineTo, bezierCurveTo, pxRound) {\n\tconst n = xs.length;\n\n\tif (n < 2)\n\t\treturn null;\n\n\tconst path = new Path2D();\n\n\tmoveTo(path, xs[0], ys[0]);\n\n\tif (n == 2)\n\t\tlineTo(path, xs[1], ys[1]);\n\telse {\n\t\tlet ms  = Array(n),\n\t\t\tds  = Array(n - 1),\n\t\t\tdys = Array(n - 1),\n\t\t\tdxs = Array(n - 1);\n\n\t\t// calc deltas and derivative\n\t\tfor (let i = 0; i < n - 1; i++) {\n\t\t\tdys[i] = ys[i + 1] - ys[i];\n\t\t\tdxs[i] = xs[i + 1] - xs[i];\n\t\t\tds[i]  = dys[i] / dxs[i];\n\t\t}\n\n\t\t// determine desired slope (m) at each point using Fritsch-Carlson method\n\t\t// http://math.stackexchange.com/questions/45218/implementation-of-monotone-cubic-interpolation\n\t\tms[0] = ds[0];\n\n\t\tfor (let i = 1; i < n - 1; i++) {\n\t\t\tif (ds[i] === 0 || ds[i - 1] === 0 || (ds[i - 1] > 0) !== (ds[i] > 0))\n\t\t\t\tms[i] = 0;\n\t\t\telse {\n\t\t\t\tms[i] = 3 * (dxs[i - 1] + dxs[i]) / (\n\t\t\t\t\t(2 * dxs[i] + dxs[i - 1]) / ds[i - 1] +\n\t\t\t\t\t(dxs[i] + 2 * dxs[i - 1]) / ds[i]\n\t\t\t\t);\n\n\t\t\t\tif (!isFinite(ms[i]))\n\t\t\t\t\tms[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\tms[n - 1] = ds[n - 2];\n\n\t\tfor (let i = 0; i < n - 1; i++) {\n\t\t\tbezierCurveTo(\n\t\t\t\tpath,\n\t\t\t\txs[i] + dxs[i] / 3,\n\t\t\t\tys[i] + ms[i] * dxs[i] / 3,\n\t\t\t\txs[i + 1] - dxs[i] / 3,\n\t\t\t\tys[i + 1] - ms[i + 1] * dxs[i] / 3,\n\t\t\t\txs[i + 1],\n\t\t\t\tys[i + 1],\n\t\t\t);\n\t\t}\n\t}\n\n\treturn path;\n}","import {\n\tFEAT_TIME,\n\tFEAT_LEGEND,\n\n\tFEAT_POINTS,\n\n\tFEAT_PATHS,\n\tFEAT_PATHS_LINEAR,\n\tFEAT_PATHS_SPLINE,\n\tFEAT_PATHS_SPLINE2,\n\tFEAT_PATHS_STEPPED,\n\tFEAT_PATHS_BARS,\n\n\tFEAT_JOIN,\n} from './feats';\n\nimport {\n\tcopy,\n\tassign,\n\tPI,\n\tinf,\n\tabs,\n\tfloor,\n\tround,\n\troundDec,\n\tceil,\n\tmin,\n\tmax,\n\tclamp,\n\tpow,\n\tasinh,\n\tsinh,\n\tlog10,\n\tclosestIdx,\n\tgetMinMax,\n\tgetMinMaxLog,\n\trangeNum,\n\trangeLog,\n\trangeAsinh,\n\tincrRound,\n\tincrRoundUp,\n\tisArr,\n\tisObj,\n\tfastIsObj,\n\tisStr,\n\tfnOrSelf,\n\tfmtNum,\n\tfixedDec,\n\tifNull,\n\tjoin,\n\tmicroTask,\n\tretArg0,\n\tretArg1,\n\tretNull,\n\tretTrue,\n\tEMPTY_OBJ,\n\tEMPTY_ARR,\n\tnullNullTuple,\n\tretEq,\n\tautoRangePart,\n\trangePad,\n\thasData,\n\tnumIntDigits,\n\tisUndef,\n\tguessDec,\n\tcmpObj,\n} from './utils';\n\nimport {\n\tWIDTH,\n\tHEIGHT,\n\tTOP,\n\tBOTTOM,\n\tLEFT,\n\tRIGHT,\n\ttransparent,\n\n\tmousemove,\n\tmousedown,\n\tmouseup,\n\tmouseleave,\n\tmouseenter,\n\tdblclick,\n\tresize,\n\tscroll,\n\n\tdppxchange,\n\tLEGEND_DISP\n} from './strings';\n\nimport {\n\tUPLOT,\n\tORI_HZ,\n\tORI_VT,\n\tTITLE,\n\tWRAP,\n\tUNDER,\n\tOVER,\n\tAXIS,\n\tOFF,\n\tSELECT,\n\tCURSOR_X,\n\tCURSOR_Y,\n\tCURSOR_PT,\n\tLEGEND,\n\tLEGEND_LIVE,\n\tLEGEND_INLINE,\n\tLEGEND_SERIES,\n\tLEGEND_MARKER,\n\tLEGEND_LABEL,\n\tLEGEND_VALUE,\n} from './domClasses';\n\nimport {\n\tdomEnv,\n\tdoc,\n\twin,\n\tpxRatio,\n\n\taddClass,\n\tremClass,\n\tsetStylePx,\n\tplaceTag,\n\tplaceDiv,\n\telTrans,\n\telColor,\n\telSize,\n\ton,\n\toff,\n} from './dom';\n\nimport {\n\tfmtDate,\n\ttzDate,\n} from './fmtDate';\n\nimport {\n\tptDia,\n\tcursorOpts,\n\n\txAxisOpts,\n\tyAxisOpts,\n\txSeriesOpts,\n\tySeriesOpts,\n\txScaleOpts,\n\tyScaleOpts,\n\n\txySeriesOpts,\n\n\tclampScale,\n\n\ttimeIncrsMs,\n\ttimeIncrsS,\n\n\twholeIncrs,\n\tnumIncrs,\n\ttimeAxisVal,\n\ttimeAxisVals,\n\tnumAxisVals,\n\n\tlog2AxisValsFilt,\n\tlog10AxisValsFilt,\n\n\ttimeSeriesVal,\n\tnumSeriesVal,\n\n\ttimeSeriesLabel,\n\tnumSeriesLabel,\n\n\ttimeAxisSplitsMs,\n\ttimeAxisSplitsS,\n\n\tnumAxisSplits,\n\tlogAxisSplits,\n\tasinhAxisSplits,\n\n\ttimeAxisStamps,\n\n\t_timeAxisStampsMs,\n\t_timeAxisStampsS,\n\n\ttimeSeriesStamp,\n\t_timeSeriesStamp,\n\n\tlegendOpts,\n} from './opts';\n\nimport { _sync } from './sync';\n\nimport { points   } from './paths/points';\nimport { linear   } from './paths/linear';\nimport { stepped  } from './paths/stepped';\nimport { bars     } from './paths/bars';\nimport { monotoneCubic     as spline  } from './paths/monotoneCubic';\nimport { catmullRomCentrip as spline2 } from './paths/catmullRomCentrip';\n\nimport { addGap, clipGaps, moveToH, moveToV, arcH, arcV, orient, pxRoundGen, seriesFillTo, BAND_CLIP_FILL, BAND_CLIP_STROKE } from './paths/utils';\n\nfunction log(name, args) {\n\tconsole.log.apply(console, [name].concat(Array.prototype.slice.call(args)));\n}\n\nconst cursorPlots = new Set();\n\nfunction invalidateRects() {\n\tfor (let u of cursorPlots)\n\t\tu.syncRect(true);\n}\n\nif (domEnv) {\n\ton(resize, win, invalidateRects);\n\ton(scroll, win, invalidateRects, true);\n\ton(dppxchange, win, () => { uPlot.pxRatio = pxRatio; });\n}\n\nconst linearPath = FEAT_PATHS && FEAT_PATHS_LINEAR ? linear() : null;\nconst pointsPath = FEAT_POINTS ? points() : null;\n\nfunction setDefaults(d, xo, yo, initY) {\n\tlet d2 = initY ? [d[0], d[1]].concat(d.slice(2)) : [d[0]].concat(d.slice(1));\n\treturn d2.map((o, i) => setDefault(o, i, xo, yo));\n}\n\nfunction setDefaults2(d, xyo) {\n\treturn d.map((o, i) => i == 0 ? null : assign({}, xyo, o));  // todo: assign() will not merge facet arrays\n}\n\nfunction setDefault(o, i, xo, yo) {\n\treturn assign({}, (i == 0 ? xo : yo), o);\n}\n\nfunction snapNumX(self, dataMin, dataMax) {\n\treturn dataMin == null ? nullNullTuple : [dataMin, dataMax];\n}\n\nconst snapTimeX = snapNumX;\n\n// this ensures that non-temporal/numeric y-axes get multiple-snapped padding added above/below\n// TODO: also account for incrs when snapping to ensure top of axis gets a tick & value\nfunction snapNumY(self, dataMin, dataMax) {\n\treturn dataMin == null ? nullNullTuple : rangeNum(dataMin, dataMax, rangePad, true);\n}\n\nfunction snapLogY(self, dataMin, dataMax, scale) {\n\treturn dataMin == null ? nullNullTuple : rangeLog(dataMin, dataMax, self.scales[scale].log, false);\n}\n\nconst snapLogX = snapLogY;\n\nfunction snapAsinhY(self, dataMin, dataMax, scale) {\n\treturn dataMin == null ? nullNullTuple : rangeAsinh(dataMin, dataMax, self.scales[scale].log, false);\n}\n\nconst snapAsinhX = snapAsinhY;\n\n// dim is logical (getClientBoundingRect) pixels, not canvas pixels\nfunction findIncr(minVal, maxVal, incrs, dim, minSpace) {\n\tlet intDigits = max(numIntDigits(minVal), numIntDigits(maxVal));\n\n\tlet delta = maxVal - minVal;\n\n\tlet incrIdx = closestIdx((minSpace / dim) * delta, incrs);\n\n\tdo {\n\t\tlet foundIncr = incrs[incrIdx];\n\t\tlet foundSpace = dim * foundIncr / delta;\n\n\t\tif (foundSpace >= minSpace && intDigits + (foundIncr < 5 ? fixedDec.get(foundIncr) : 0) <= 17)\n\t\t\treturn [foundIncr, foundSpace];\n\t} while (++incrIdx < incrs.length);\n\n\treturn [0, 0];\n}\n\nfunction pxRatioFont(font) {\n\tlet fontSize, fontSizeCss;\n\tfont = font.replace(/(\\d+)px/, (m, p1) => (fontSize = round((fontSizeCss = +p1) * pxRatio)) + 'px');\n\treturn [font, fontSize, fontSizeCss];\n}\n\nfunction syncFontSize(axis) {\n\tif (axis.show) {\n\t\t[axis.font, axis.labelFont].forEach(f => {\n\t\t\tlet size = roundDec(f[2] * pxRatio, 1);\n\t\t\tf[0] = f[0].replace(/[0-9.]+px/, size + 'px');\n\t\t\tf[1] = size;\n\t\t});\n\t}\n}\n\nexport default function uPlot(opts, data, then) {\n\tconst self = {\n\t\tmode: ifNull(opts.mode, 1),\n\t};\n\n\tconst mode = self.mode;\n\n\t// TODO: cache denoms & mins scale.cache = {r, min, }\n\tfunction getValPct(val, scale) {\n\t\tlet _val = (\n\t\t\tscale.distr == 3 ? log10(val > 0 ? val : scale.clamp(self, val, scale.min, scale.max, scale.key)) :\n\t\t\tscale.distr == 4 ? asinh(val, scale.asinh) :\n\t\t\tval\n\t\t);\n\n\t\treturn (_val - scale._min) / (scale._max - scale._min);\n\t}\n\n\tfunction getHPos(val, scale, dim, off) {\n\t\tlet pct = getValPct(val, scale);\n\t\treturn off + dim * (scale.dir == -1 ? (1 - pct) : pct);\n\t}\n\n\tfunction getVPos(val, scale, dim, off) {\n\t\tlet pct = getValPct(val, scale);\n\t\treturn off + dim * (scale.dir == -1 ? pct : (1 - pct));\n\t}\n\n\tfunction getPos(val, scale, dim, off) {\n\t\treturn scale.ori == 0 ? getHPos(val, scale, dim, off) : getVPos(val, scale, dim, off);\n\t}\n\n\tself.valToPosH = getHPos;\n\tself.valToPosV = getVPos\n\n\tlet ready = false;\n\tself.status = 0;\n\n\tconst root = self.root = placeDiv(UPLOT);\n\n\tif (opts.id != null)\n\t\troot.id = opts.id;\n\n\taddClass(root, opts.class);\n\n\tif (opts.title) {\n\t\tlet title = placeDiv(TITLE, root);\n\t\ttitle.textContent = opts.title;\n\t}\n\n\tconst can = placeTag(\"canvas\");\n\tconst ctx = self.ctx = can.getContext(\"2d\");\n\n\tconst wrap = placeDiv(WRAP, root);\n\n\ton(\"click\", wrap, e => {\n\t\tif (e.target === over) {\n\t\t\tlet didDrag = mouseLeft1 != mouseLeft0 || mouseTop1 != mouseTop0;\n\t\t\tdidDrag && drag.click(self, e);\n\t\t}\n\t}, true);\n\n\tconst under = self.under = placeDiv(UNDER, wrap);\n\twrap.appendChild(can);\n\tconst over = self.over = placeDiv(OVER, wrap);\n\n\topts = copy(opts);\n\n\tconst pxAlign = +ifNull(opts.pxAlign, 1);\n\n\tconst pxRound = pxRoundGen(pxAlign);\n\n\t(opts.plugins || []).forEach(p => {\n\t\tif (p.opts)\n\t\t\topts = p.opts(self, opts) || opts;\n\t});\n\n\tconst ms = opts.ms || 1e-3;\n\n\tconst series  = self.series = mode == 1 ?\n\t\tsetDefaults(opts.series || [], xSeriesOpts, ySeriesOpts, false) :\n\t\tsetDefaults2(opts.series || [null], xySeriesOpts);\n\tconst axes    = self.axes   = setDefaults(opts.axes   || [], xAxisOpts,   yAxisOpts,    true);\n\tconst scales  = self.scales = {};\n\tconst bands   = self.bands  = opts.bands || [];\n\n\tbands.forEach(b => {\n\t\tb.fill = fnOrSelf(b.fill || null);\n\t\tb.dir = ifNull(b.dir, -1);\n\t});\n\n\tconst xScaleKey = mode == 2 ? series[1].facets[0].scale : series[0].scale;\n\n\tconst drawOrderMap = {\n\t\taxes: drawAxesGrid,\n\t\tseries: drawSeries,\n\t};\n\n\tconst drawOrder = (opts.drawOrder || [\"axes\", \"series\"]).map(key => drawOrderMap[key]);\n\n\tfunction initScale(scaleKey) {\n\t\tlet sc = scales[scaleKey];\n\n\t\tif (sc == null) {\n\t\t\tlet scaleOpts = (opts.scales || EMPTY_OBJ)[scaleKey] || EMPTY_OBJ;\n\n\t\t\tif (scaleOpts.from != null) {\n\t\t\t\t// ensure parent is initialized\n\t\t\t\tinitScale(scaleOpts.from);\n\t\t\t\t// dependent scales inherit\n\t\t\t\tscales[scaleKey] = assign({}, scales[scaleOpts.from], scaleOpts, {key: scaleKey});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsc = scales[scaleKey] = assign({}, (scaleKey == xScaleKey ? xScaleOpts : yScaleOpts), scaleOpts);\n\n\t\t\t\tsc.key = scaleKey;\n\n\t\t\t\tlet isTime = FEAT_TIME && sc.time;\n\n\t\t\t\tlet rn = sc.range;\n\n\t\t\t\tlet rangeIsArr = isArr(rn);\n\n\t\t\t\tif (scaleKey != xScaleKey || (mode == 2 && !isTime)) {\n\t\t\t\t\t// if range array has null limits, it should be auto\n\t\t\t\t\tif (rangeIsArr && (rn[0] == null || rn[1] == null)) {\n\t\t\t\t\t\trn = {\n\t\t\t\t\t\t\tmin: rn[0] == null ? autoRangePart : {\n\t\t\t\t\t\t\t\tmode: 1,\n\t\t\t\t\t\t\t\thard: rn[0],\n\t\t\t\t\t\t\t\tsoft: rn[0],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmax: rn[1] == null ? autoRangePart : {\n\t\t\t\t\t\t\t\tmode: 1,\n\t\t\t\t\t\t\t\thard: rn[1],\n\t\t\t\t\t\t\t\tsoft: rn[1],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t};\n\t\t\t\t\t\trangeIsArr = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!rangeIsArr && isObj(rn)) {\n\t\t\t\t\t\tlet cfg = rn;\n\t\t\t\t\t\t// this is similar to snapNumY\n\t\t\t\t\t\trn = (self, dataMin, dataMax) => dataMin == null ? nullNullTuple : rangeNum(dataMin, dataMax, cfg);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tsc.range = fnOrSelf(rn || (isTime ? snapTimeX : scaleKey == xScaleKey ?\n\t\t\t\t\t(sc.distr == 3 ? snapLogX : sc.distr == 4 ? snapAsinhX : snapNumX) :\n\t\t\t\t\t(sc.distr == 3 ? snapLogY : sc.distr == 4 ? snapAsinhY : snapNumY)\n\t\t\t\t));\n\n\t\t\t\tsc.auto = fnOrSelf(rangeIsArr ? false : sc.auto);\n\n\t\t\t\tsc.clamp = fnOrSelf(sc.clamp || clampScale);\n\n\t\t\t\t// caches for expensive ops like asinh() & log()\n\t\t\t\tsc._min = sc._max = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tinitScale(\"x\");\n\tinitScale(\"y\");\n\n\t// TODO: init scales from facets in mode: 2\n\tif (mode == 1) {\n\t\tseries.forEach(s => {\n\t\t\tinitScale(s.scale);\n\t\t});\n\t}\n\n\taxes.forEach(a => {\n\t\tinitScale(a.scale);\n\t});\n\n\tfor (let k in opts.scales)\n\t\tinitScale(k);\n\n\tconst scaleX = scales[xScaleKey];\n\n\tconst xScaleDistr = scaleX.distr;\n\n\tlet valToPosX, valToPosY, moveTo, arc, xDimCan, xOffCan, yDimCan, yOffCan, xDimCss, xOffCss, yDimCss, yOffCss, updOriDims;\n\n\tif (scaleX.ori == 0) {\n\t\taddClass(root, ORI_HZ);\n\t\tvalToPosX = getHPos;\n\t\tvalToPosY = getVPos;\n\t\tmoveTo    = moveToH;\n\t\tarc       = arcH;\n\t\t/*\n\t\tupdOriDims = () => {\n\t\t\txDimCan = plotWid;\n\t\t\txOffCan = plotLft;\n\t\t\tyDimCan = plotHgt;\n\t\t\tyOffCan = plotTop;\n\n\t\t\txDimCss = plotWidCss;\n\t\t\txOffCss = plotLftCss;\n\t\t\tyDimCss = plotHgtCss;\n\t\t\tyOffCss = plotTopCss;\n\t\t};\n\t\t*/\n\t}\n\telse {\n\t\taddClass(root, ORI_VT);\n\t\tvalToPosX = getVPos;\n\t\tvalToPosY = getHPos;\n\t\tmoveTo    = moveToV;\n\t\tarc       = arcV;\n\t\t/*\n\t\tupdOriDims = () => {\n\t\t\txDimCan = plotHgt;\n\t\t\txOffCan = plotTop;\n\t\t\tyDimCan = plotWid;\n\t\t\tyOffCan = plotLft;\n\n\t\t\txDimCss = plotHgtCss;\n\t\t\txOffCss = plotTopCss;\n\t\t\tyDimCss = plotWidCss;\n\t\t\tyOffCss = plotLftCss;\n\t\t};\n\t\t*/\n\t}\n\n\tconst pendScales = {};\n\n\t// explicitly-set initial scales\n\tfor (let k in scales) {\n\t\tlet sc = scales[k];\n\n\t\tif (sc.min != null || sc.max != null) {\n\t\t\tpendScales[k] = {min: sc.min, max: sc.max};\n\t\t\tsc.min = sc.max = null;\n\t\t}\n\t}\n\n//\tself.tz = opts.tz || Intl.DateTimeFormat().resolvedOptions().timeZone;\n\tconst _tzDate  = FEAT_TIME && (opts.tzDate || (ts => new Date(round(ts / ms))));\n\tconst _fmtDate = FEAT_TIME && (opts.fmtDate || fmtDate);\n\n\tconst _timeAxisSplits = FEAT_TIME && (ms == 1 ? timeAxisSplitsMs(_tzDate) : timeAxisSplitsS(_tzDate));\n\tconst _timeAxisVals   = FEAT_TIME && timeAxisVals(_tzDate, timeAxisStamps((ms == 1 ? _timeAxisStampsMs : _timeAxisStampsS), _fmtDate));\n\tconst _timeSeriesVal  = FEAT_TIME && timeSeriesVal(_tzDate, timeSeriesStamp(_timeSeriesStamp, _fmtDate));\n\n\tconst activeIdxs = [];\n\n\tconst legend     = FEAT_LEGEND && (self.legend = assign({}, legendOpts, opts.legend));\n\tconst showLegend = FEAT_LEGEND && legend.show;\n\tconst markers    = FEAT_LEGEND && legend.markers;\n\n\tif (FEAT_LEGEND) {\n\t\tlegend.idxs = activeIdxs;\n\n\t\tmarkers.width  = fnOrSelf(markers.width);\n\t\tmarkers.dash   = fnOrSelf(markers.dash);\n\t\tmarkers.stroke = fnOrSelf(markers.stroke);\n\t\tmarkers.fill   = fnOrSelf(markers.fill);\n\t}\n\n\tlet legendTable;\n\tlet legendHead;\n\tlet legendBody;\n\tlet legendRows = [];\n\tlet legendCells = [];\n\tlet legendCols;\n\tlet multiValLegend = false;\n\tlet NULL_LEGEND_VALUES = {};\n\n\tif (FEAT_LEGEND && legend.live) {\n\t\tconst getMultiVals = series[1] ? series[1].values : null;\n\t\tmultiValLegend = getMultiVals != null;\n\t\tlegendCols = multiValLegend ? getMultiVals(self, 1, 0) : {_: 0};\n\n\t\tfor (let k in legendCols)\n\t\t\tNULL_LEGEND_VALUES[k] = LEGEND_DISP;\n\t}\n\n\tif (showLegend) {\n\t\tlegendTable = placeTag(\"table\", LEGEND, root);\n\t\tlegendBody = placeTag(\"tbody\", null, legendTable);\n\n\t\t// allows legend to be moved out of root\n\t\tlegend.mount(self, legendTable);\n\n\t\tif (multiValLegend) {\n\t\t\tlegendHead = placeTag(\"thead\", null, legendTable, legendBody);\n\n\t\t\tlet head = placeTag(\"tr\", null, legendHead);\n\t\t\tplaceTag(\"th\", null, head);\n\n\t\t\tfor (var key in legendCols)\n\t\t\t\tplaceTag(\"th\", LEGEND_LABEL, head).textContent = key;\n\t\t}\n\t\telse {\n\t\t\taddClass(legendTable, LEGEND_INLINE);\n\t\t\tlegend.live && addClass(legendTable, LEGEND_LIVE);\n\t\t}\n\t}\n\n\tconst son  = {show: true};\n\tconst soff = {show: false};\n\n\tfunction initLegendRow(s, i) {\n\t\tif (i == 0 && (multiValLegend || !legend.live || mode == 2))\n\t\t\treturn nullNullTuple;\n\n\t\tlet cells = [];\n\n\t\tlet row = placeTag(\"tr\", LEGEND_SERIES, legendBody, legendBody.childNodes[i]);\n\n\t\taddClass(row, s.class);\n\n\t\tif (!s.show)\n\t\t\taddClass(row, OFF);\n\n\t\tlet label = placeTag(\"th\", null, row);\n\n\t\tif (markers.show) {\n\t\t\tlet indic = placeDiv(LEGEND_MARKER, label);\n\n\t\t\tif (i > 0) {\n\t\t\t\tlet width  = markers.width(self, i);\n\n\t\t\t\tif (width)\n\t\t\t\t\tindic.style.border = width + \"px \" + markers.dash(self, i) + \" \" + markers.stroke(self, i);\n\n\t\t\t\tindic.style.background = markers.fill(self, i);\n\t\t\t}\n\t\t}\n\n\t\tlet text = placeDiv(LEGEND_LABEL, label);\n\t\ttext.textContent = s.label;\n\n\t\tif (i > 0) {\n\t\t\tif (!markers.show)\n\t\t\t\ttext.style.color = s.width > 0 ? markers.stroke(self, i) : markers.fill(self, i);\n\n\t\t\tonMouse(\"click\", label, e => {\n\t\t\t\tif (cursor._lock)\n\t\t\t\t\treturn;\n\n\t\t\t\tsetCursorEvent(e);\n\n\t\t\t\tlet seriesIdx = series.indexOf(s);\n\n\t\t\t\tif ((e.ctrlKey || e.metaKey) != legend.isolate) {\n\t\t\t\t\t// if any other series is shown, isolate this one. else show all\n\t\t\t\t\tlet isolate = series.some((s, i) => i > 0 && i != seriesIdx && s.show);\n\n\t\t\t\t\tseries.forEach((s, i) => {\n\t\t\t\t\t\ti > 0 && setSeries(i, isolate ? (i == seriesIdx ? son : soff) : son, true, syncOpts.setSeries);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tsetSeries(seriesIdx, {show: !s.show}, true, syncOpts.setSeries);\n\t\t\t}, false);\n\n\t\t\tif (cursorFocus) {\n\t\t\t\tonMouse(mouseenter, label, e => {\n\t\t\t\t\tif (cursor._lock)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tsetCursorEvent(e);\n\n\t\t\t\t\tsetSeries(series.indexOf(s), FOCUS_TRUE, true, syncOpts.setSeries);\n\t\t\t\t}, false);\n\t\t\t}\n\t\t}\n\n\t\tfor (var key in legendCols) {\n\t\t\tlet v = placeTag(\"td\", LEGEND_VALUE, row);\n\t\t\tv.textContent = \"--\";\n\t\t\tcells.push(v);\n\t\t}\n\n\t\treturn [row, cells];\n\t}\n\n\tconst mouseListeners = new Map();\n\n\tfunction onMouse(ev, targ, fn, onlyTarg = true) {\n\t\tconst targListeners = mouseListeners.get(targ) || {};\n\t\tconst listener = cursor.bind[ev](self, targ, fn, onlyTarg);\n\n\t\tif (listener) {\n\t\t\ton(ev, targ, targListeners[ev] = listener);\n\t\t\tmouseListeners.set(targ, targListeners);\n\t\t}\n\t}\n\n\tfunction offMouse(ev, targ, fn) {\n\t\tconst targListeners = mouseListeners.get(targ) || {};\n\n\t\tfor (let k in targListeners) {\n\t\t\tif (ev == null || k == ev) {\n\t\t\t\toff(k, targ, targListeners[k]);\n\t\t\t\tdelete targListeners[k];\n\t\t\t}\n\t\t}\n\n\t\tif (ev == null)\n\t\t\tmouseListeners.delete(targ);\n\t}\n\n\tlet fullWidCss = 0;\n\tlet fullHgtCss = 0;\n\n\tlet plotWidCss = 0;\n\tlet plotHgtCss = 0;\n\n\t// plot margins to account for axes\n\tlet plotLftCss = 0;\n\tlet plotTopCss = 0;\n\n\tlet plotLft = 0;\n\tlet plotTop = 0;\n\tlet plotWid = 0;\n\tlet plotHgt = 0;\n\n\tself.bbox = {};\n\n\tlet shouldSetScales = false;\n\tlet shouldSetSize = false;\n\tlet shouldConvergeSize = false;\n\tlet shouldSetCursor = false;\n\tlet shouldSetSelect = false;\n\tlet shouldSetLegend = false;\n\n\tfunction _setSize(width, height, force) {\n\t\tif (force || (width != self.width || height != self.height))\n\t\t\tcalcSize(width, height);\n\n\t\tresetYSeries(false);\n\n\t\tshouldConvergeSize = true;\n\t\tshouldSetSize = true;\n\n\t\tif (cursor.left >= 0)\n\t\t\tshouldSetCursor = shouldSetLegend = true;\n\n\t\tcommit();\n\t}\n\n\tfunction calcSize(width, height) {\n\t//\tlog(\"calcSize()\", arguments);\n\n\t\tself.width  = fullWidCss = plotWidCss = width;\n\t\tself.height = fullHgtCss = plotHgtCss = height;\n\t\tplotLftCss  = plotTopCss = 0;\n\n\t\tcalcPlotRect();\n\t\tcalcAxesRects();\n\n\t\tlet bb = self.bbox;\n\n\t\tplotLft = bb.left   = incrRound(plotLftCss * pxRatio, 0.5);\n\t\tplotTop = bb.top    = incrRound(plotTopCss * pxRatio, 0.5);\n\t\tplotWid = bb.width  = incrRound(plotWidCss * pxRatio, 0.5);\n\t\tplotHgt = bb.height = incrRound(plotHgtCss * pxRatio, 0.5);\n\n\t//\tupdOriDims();\n\t}\n\n\t// ensures size calc convergence\n\tconst CYCLE_LIMIT = 3;\n\n\tfunction convergeSize() {\n\t\tlet converged = false;\n\n\t\tlet cycleNum = 0;\n\n\t\twhile (!converged) {\n\t\t\tcycleNum++;\n\n\t\t\tlet axesConverged = axesCalc(cycleNum);\n\t\t\tlet paddingConverged = paddingCalc(cycleNum);\n\n\t\t\tconverged = cycleNum == CYCLE_LIMIT || (axesConverged && paddingConverged);\n\n\t\t\tif (!converged) {\n\t\t\t\tcalcSize(self.width, self.height);\n\t\t\t\tshouldSetSize = true;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setSize({width, height}) {\n\t\t_setSize(width, height);\n\t}\n\n\tself.setSize = setSize;\n\n\t// accumulate axis offsets, reduce canvas width\n\tfunction calcPlotRect() {\n\t\t// easements for edge labels\n\t\tlet hasTopAxis = false;\n\t\tlet hasBtmAxis = false;\n\t\tlet hasRgtAxis = false;\n\t\tlet hasLftAxis = false;\n\n\t\taxes.forEach((axis, i) => {\n\t\t\tif (axis.show && axis._show) {\n\t\t\t\tlet {side, _size} = axis;\n\t\t\t\tlet isVt = side % 2;\n\t\t\t\tlet labelSize = axis.label != null ? axis.labelSize : 0;\n\n\t\t\t\tlet fullSize = _size + labelSize;\n\n\t\t\t\tif (fullSize > 0) {\n\t\t\t\t\tif (isVt) {\n\t\t\t\t\t\tplotWidCss -= fullSize;\n\n\t\t\t\t\t\tif (side == 3) {\n\t\t\t\t\t\t\tplotLftCss += fullSize;\n\t\t\t\t\t\t\thasLftAxis = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\thasRgtAxis = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tplotHgtCss -= fullSize;\n\n\t\t\t\t\t\tif (side == 0) {\n\t\t\t\t\t\t\tplotTopCss += fullSize;\n\t\t\t\t\t\t\thasTopAxis = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\thasBtmAxis = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tsidesWithAxes[0] = hasTopAxis;\n\t\tsidesWithAxes[1] = hasRgtAxis;\n\t\tsidesWithAxes[2] = hasBtmAxis;\n\t\tsidesWithAxes[3] = hasLftAxis;\n\n\t\t// hz padding\n\t\tplotWidCss -= _padding[1] + _padding[3];\n\t\tplotLftCss += _padding[3];\n\n\t\t// vt padding\n\t\tplotHgtCss -= _padding[2] + _padding[0];\n\t\tplotTopCss += _padding[0];\n\t}\n\n\tfunction calcAxesRects() {\n\t\t// will accum +\n\t\tlet off1 = plotLftCss + plotWidCss;\n\t\tlet off2 = plotTopCss + plotHgtCss;\n\t\t// will accum -\n\t\tlet off3 = plotLftCss;\n\t\tlet off0 = plotTopCss;\n\n\t\tfunction incrOffset(side, size) {\n\t\t\tswitch (side) {\n\t\t\t\tcase 1: off1 += size; return off1 - size;\n\t\t\t\tcase 2: off2 += size; return off2 - size;\n\t\t\t\tcase 3: off3 -= size; return off3 + size;\n\t\t\t\tcase 0: off0 -= size; return off0 + size;\n\t\t\t}\n\t\t}\n\n\t\taxes.forEach((axis, i) => {\n\t\t\tif (axis.show && axis._show) {\n\t\t\t\tlet side = axis.side;\n\n\t\t\t\taxis._pos = incrOffset(side, axis._size);\n\n\t\t\t\tif (axis.label != null)\n\t\t\t\t\taxis._lpos = incrOffset(side, axis.labelSize);\n\t\t\t}\n\t\t});\n\t}\n\n\tconst cursor = self.cursor = assign({}, cursorOpts, {drag: {y: mode == 2}}, opts.cursor);\n\tconst setCursorEvent = e => { cursor.event = e; };\n\n\tcursor.idxs = activeIdxs;\n\n\tcursor._lock = false;\n\n\tlet points = cursor.points;\n\n\tpoints.show   = fnOrSelf(points.show);\n\tpoints.size   = fnOrSelf(points.size);\n\tpoints.stroke = fnOrSelf(points.stroke);\n\tpoints.width  = fnOrSelf(points.width);\n\tpoints.fill   = fnOrSelf(points.fill);\n\n\tconst focus = self.focus = assign({}, opts.focus || {alpha: 0.3}, cursor.focus);\n\n\tconst cursorFocus = focus.prox >= 0;\n\n\t// series-intersection markers\n\tlet cursorPts = [null];\n\n\tfunction initCursorPt(s, si) {\n\t\tif (si > 0) {\n\t\t\tlet pt = cursor.points.show(self, si);\n\n\t\t\tif (pt) {\n\t\t\t\taddClass(pt, CURSOR_PT);\n\t\t\t\taddClass(pt, s.class);\n\t\t\t\telTrans(pt, -10, -10, plotWidCss, plotHgtCss);\n\t\t\t\tover.insertBefore(pt, cursorPts[si]);\n\n\t\t\t\treturn pt;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction initSeries(s, i) {\n\t\tif (mode == 1 || i > 0) {\n\t\t\tlet isTime = FEAT_TIME && mode == 1 && scales[s.scale].time;\n\n\t\t\tlet sv = s.value;\n\t\t\ts.value = isTime ? (isStr(sv) ? timeSeriesVal(_tzDate, timeSeriesStamp(sv, _fmtDate)) : sv || _timeSeriesVal) : sv || numSeriesVal;\n\t\t\ts.label = s.label || (isTime ? timeSeriesLabel : numSeriesLabel);\n\t\t}\n\n\t\tif (i > 0) {\n\t\t\ts.width  = s.width == null ? 1 : s.width;\n\t\t\ts.paths  = s.paths || linearPath || retNull;\n\t\t\ts.fillTo = fnOrSelf(s.fillTo || seriesFillTo);\n\t\t\ts.pxAlign = +ifNull(s.pxAlign, pxAlign);\n\t\t\ts.pxRound = pxRoundGen(s.pxAlign);\n\n\t\t\ts.stroke = fnOrSelf(s.stroke || null);\n\t\t\ts.fill   = fnOrSelf(s.fill || null);\n\t\t\ts._stroke = s._fill = s._paths = s._focus = null;\n\n\t\t\tlet _ptDia = ptDia(max(1, s.width), 1);\n\t\t\tlet points = s.points = assign({}, {\n\t\t\t\tsize: _ptDia,\n\t\t\t\twidth: max(1, _ptDia * .2),\n\t\t\t\tstroke: s.stroke,\n\t\t\t\tspace: _ptDia * 2,\n\t\t\t\tpaths: pointsPath,\n\t\t\t\t_stroke: null,\n\t\t\t\t_fill: null,\n\t\t\t}, s.points);\n\t\t\tpoints.show   = fnOrSelf(points.show);\n\t\t\tpoints.filter = fnOrSelf(points.filter);\n\t\t\tpoints.fill   = fnOrSelf(points.fill);\n\t\t\tpoints.stroke = fnOrSelf(points.stroke);\n\t\t\tpoints.paths  = fnOrSelf(points.paths);\n\t\t\tpoints.pxAlign = s.pxAlign;\n\t\t}\n\n\t\tif (showLegend) {\n\t\t\tlet rowCells = initLegendRow(s, i);\n\t\t\tlegendRows.splice(i, 0, rowCells[0]);\n\t\t\tlegendCells.splice(i, 0, rowCells[1]);\n\t\t\tlegend.values.push(null);\t// NULL_LEGEND_VALS not yet avil here :(\n\t\t}\n\n\t\tif (cursor.show) {\n\t\t\tactiveIdxs.splice(i, 0, null);\n\n\t\t\tlet pt = initCursorPt(s, i);\n\t\t\tpt && cursorPts.splice(i, 0, pt);\n\t\t}\n\n\t\tfire(\"addSeries\", i);\n\t}\n\n\tfunction addSeries(opts, si) {\n\t\tsi = si == null ? series.length : si;\n\n\t\topts = mode == 1 ? setDefault(opts, si, xSeriesOpts, ySeriesOpts) : setDefault(opts, si, null, xySeriesOpts);\n\n\t\tseries.splice(si, 0, opts);\n\t\tinitSeries(series[si], si);\n\t}\n\n\tself.addSeries = addSeries;\n\n\tfunction delSeries(i) {\n\t\tseries.splice(i, 1);\n\n\t\tif (showLegend) {\n\t\t\tlegend.values.splice(i, 1);\n\n\t\t\tlegendCells.splice(i, 1);\n\t\t\tlet tr = legendRows.splice(i, 1)[0];\n\t\t\toffMouse(null, tr.firstChild);\n\t\t\ttr.remove();\n\t\t}\n\n\t\tif (cursor.show) {\n\t\t\tactiveIdxs.splice(i, 1);\n\n\t\t\tcursorPts.length > 1 && cursorPts.splice(i, 1)[0].remove();\n\t\t}\n\n\t\t// TODO: de-init no-longer-needed scales?\n\n\t\tfire(\"delSeries\", i);\n\t}\n\n\tself.delSeries = delSeries;\n\n\tconst sidesWithAxes = [false, false, false, false];\n\n\tfunction initAxis(axis, i) {\n\t\taxis._show = axis.show;\n\n\t\tif (axis.show) {\n\t\t\tlet isVt = axis.side % 2;\n\n\t\t\tlet sc = scales[axis.scale];\n\n\t\t\t// this can occur if all series specify non-default scales\n\t\t\tif (sc == null) {\n\t\t\t\taxis.scale = isVt ? series[1].scale : xScaleKey;\n\t\t\t\tsc = scales[axis.scale];\n\t\t\t}\n\n\t\t\t// also set defaults for incrs & values based on axis distr\n\t\t\tlet isTime = FEAT_TIME && sc.time;\n\n\t\t\taxis.size   = fnOrSelf(axis.size);\n\t\t\taxis.space  = fnOrSelf(axis.space);\n\t\t\taxis.rotate = fnOrSelf(axis.rotate);\n\n\t\t\tif (isArr(axis.incrs)) {\n\t\t\t\taxis.incrs.forEach(incr => {\n\t\t\t\t\t!fixedDec.has(incr) && fixedDec.set(incr, guessDec(incr));\n\t\t\t\t});\n\t\t\t}\n\n\t\t\taxis.incrs  = fnOrSelf(axis.incrs  || (          sc.distr == 2 ? wholeIncrs : (isTime ? (ms == 1 ? timeIncrsMs : timeIncrsS) : numIncrs)));\n\t\t\taxis.splits = fnOrSelf(axis.splits || (isTime && sc.distr == 1 ? _timeAxisSplits : sc.distr == 3 ? logAxisSplits : sc.distr == 4 ? asinhAxisSplits : numAxisSplits));\n\n\t\t\taxis.stroke        = fnOrSelf(axis.stroke);\n\t\t\taxis.grid.stroke   = fnOrSelf(axis.grid.stroke);\n\t\t\taxis.ticks.stroke  = fnOrSelf(axis.ticks.stroke);\n\t\t\taxis.border.stroke = fnOrSelf(axis.border.stroke);\n\n\t\t\tlet av = axis.values;\n\n\t\t\taxis.values = (\n\t\t\t\t// static array of tick values\n\t\t\t\tisArr(av) && !isArr(av[0]) ? fnOrSelf(av) :\n\t\t\t\t// temporal\n\t\t\t\tisTime ? (\n\t\t\t\t\t// config array of fmtDate string tpls\n\t\t\t\t\tisArr(av) ?\n\t\t\t\t\t\ttimeAxisVals(_tzDate, timeAxisStamps(av, _fmtDate)) :\n\t\t\t\t\t// fmtDate string tpl\n\t\t\t\t\tisStr(av) ?\n\t\t\t\t\t\ttimeAxisVal(_tzDate, av) :\n\t\t\t\t\tav || _timeAxisVals\n\t\t\t\t) : av || numAxisVals\n\t\t\t);\n\n\t\t\taxis.filter = fnOrSelf(axis.filter || (          sc.distr >= 3 && sc.log == 10 ? log10AxisValsFilt : sc.distr == 3 && sc.log == 2 ? log2AxisValsFilt : retArg1));\n\n\t\t\taxis.font      = pxRatioFont(axis.font);\n\t\t\taxis.labelFont = pxRatioFont(axis.labelFont);\n\n\t\t\taxis._size   = axis.size(self, null, i, 0);\n\n\t\t\taxis._space  =\n\t\t\taxis._rotate =\n\t\t\taxis._incrs  =\n\t\t\taxis._found  =\t// foundIncrSpace\n\t\t\taxis._splits =\n\t\t\taxis._values = null;\n\n\t\t\tif (axis._size > 0) {\n\t\t\t\tsidesWithAxes[i] = true;\n\t\t\t\taxis._el = placeDiv(AXIS, wrap);\n\t\t\t}\n\n\t\t\t// debug\n\t\t//\taxis._el.style.background = \"#\"  + Math.floor(Math.random()*16777215).toString(16) + '80';\n\t\t}\n\t}\n\n\tfunction autoPadSide(self, side, sidesWithAxes, cycleNum) {\n\t\tlet [hasTopAxis, hasRgtAxis, hasBtmAxis, hasLftAxis] = sidesWithAxes;\n\n\t\tlet ori = side % 2;\n\t\tlet size = 0;\n\n\t\tif (ori == 0 && (hasLftAxis || hasRgtAxis))\n\t\t\tsize = (side == 0 && !hasTopAxis || side == 2 && !hasBtmAxis ? round(xAxisOpts.size / 3) : 0);\n\t\tif (ori == 1 && (hasTopAxis || hasBtmAxis))\n\t\t\tsize = (side == 1 && !hasRgtAxis || side == 3 && !hasLftAxis ? round(yAxisOpts.size / 2) : 0);\n\n\t\treturn size;\n\t}\n\n\tconst padding = self.padding = (opts.padding || [autoPadSide,autoPadSide,autoPadSide,autoPadSide]).map(p => fnOrSelf(ifNull(p, autoPadSide)));\n\tconst _padding = self._padding = padding.map((p, i) => p(self, i, sidesWithAxes, 0));\n\n\tlet dataLen;\n\n\t// rendered data window\n\tlet i0 = null;\n\tlet i1 = null;\n\tconst idxs = mode == 1 ? series[0].idxs : null;\n\n\tlet data0 = null;\n\n\tlet viaAutoScaleX = false;\n\n\tfunction setData(_data, _resetScales) {\n\t\tdata = _data == null ? [] : _data;\n\n\t\tif (mode == 2) {\n\t\t\tdataLen = 0;\n\t\t\tfor (let i = 1; i < series.length; i++)\n\t\t\t\tdataLen += data[i][0].length;\n\n\t\t\tself._data = data;\n\t\t}\n\t\telse {\n\t\t\tif (data.length == 0)\n\t\t\t\tdata = [[]];\n\n\t\t\tdata0 = data[0];\n\t\t\tdataLen = data0.length;\n\n\t\t\tlet scaleData = data;\n\n\t\t\tif (xScaleDistr == 2) {\n\t\t\t\tscaleData = data.slice();\n\n\t\t\t\tlet _data0 = scaleData[0] = Array(dataLen);\n\t\t\t\tfor (let i = 0; i < dataLen; i++)\n\t\t\t\t\t_data0[i] = i;\n\t\t\t}\n\n\t\t\tself._data = data = scaleData;\n\t\t}\n\n\t\tself.data = data;\n\n\t\tresetYSeries(true);\n\n\t\tfire(\"setData\");\n\n\t\t// forces x axis tick values to re-generate when neither x scale nor y scale changes\n\t\t// in ordinal mode, scale range is by index, so will not change if new data has same length, but tick values are from data\n\t\tif (xScaleDistr == 2) {\n\t\t\tshouldConvergeSize = true;\n\n\t\t\t/* or somewhat cheaper, and uglier:\n\t\t\tif (ready) {\n\t\t\t\t// logic extracted from axesCalc()\n\t\t\t\tlet i = 0;\n\t\t\t\tlet axis = axes[i];\n\t\t\t\tlet _splits = axis._splits.map(i => data0[i]);\n\t\t\t\tlet [_incr, _space] = axis._found;\n\t\t\t\tlet incr = data0[_splits[1]] - data0[_splits[0]];\n\t\t\t\taxis._values = axis.values(self, axis.filter(self, _splits, i, _space, incr), i, _space, incr);\n\t\t\t}\n\t\t\t*/\n\t\t}\n\n\t\tif (_resetScales !== false) {\n\t\t\tlet xsc = scaleX;\n\n\t\t\tif (xsc.auto(self, viaAutoScaleX))\n\t\t\t\tautoScaleX();\n\t\t\telse\n\t\t\t\t_setScale(xScaleKey, xsc.min, xsc.max);\n\n\t\t\tshouldSetCursor = shouldSetCursor || cursor.left >= 0;\n\t\t\tshouldSetLegend = true;\n\t\t\tcommit();\n\t\t}\n\t}\n\n\tself.setData = setData;\n\n\tfunction autoScaleX() {\n\t\tviaAutoScaleX = true;\n\n\t\tlet _min, _max;\n\n\t\tif (mode == 1) {\n\t\t\tif (dataLen > 0) {\n\t\t\t\ti0 = idxs[0] = 0;\n\t\t\t\ti1 = idxs[1] = dataLen - 1;\n\n\t\t\t\t_min = data[0][i0];\n\t\t\t\t_max = data[0][i1];\n\n\t\t\t\tif (xScaleDistr == 2) {\n\t\t\t\t\t_min = i0;\n\t\t\t\t\t_max = i1;\n\t\t\t\t}\n\t\t\t\telse if (_min == _max) {\n\t\t\t\t\tif (xScaleDistr == 3)\n\t\t\t\t\t\t[_min, _max] = rangeLog(_min, _min, scaleX.log, false);\n\t\t\t\t\telse if (xScaleDistr == 4)\n\t\t\t\t\t\t[_min, _max] = rangeAsinh(_min, _min, scaleX.log, false);\n\t\t\t\t\telse if (scaleX.time)\n\t\t\t\t\t\t_max = _min + round(86400 / ms);\n\t\t\t\t\telse\n\t\t\t\t\t\t[_min, _max] = rangeNum(_min, _max, rangePad, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ti0 = idxs[0] = _min = null;\n\t\t\t\ti1 = idxs[1] = _max = null;\n\t\t\t}\n\t\t}\n\n\t\t_setScale(xScaleKey, _min, _max);\n\t}\n\n\tlet ctxStroke, ctxFill, ctxWidth, ctxDash, ctxJoin, ctxCap, ctxFont, ctxAlign, ctxBaseline;\n\tlet ctxAlpha;\n\n\tfunction setCtxStyle(stroke, width, dash, cap, fill, join) {\n\t\tstroke ??= transparent;\n\t\tdash   ??= EMPTY_ARR;\n\t\tcap    ??= \"butt\"; // (‿|‿)\n\t\tfill   ??= transparent;\n\t\tjoin   ??= \"round\";\n\n\t\tif (stroke != ctxStroke)\n\t\t\tctx.strokeStyle = ctxStroke = stroke;\n\t\tif (fill != ctxFill)\n\t\t\tctx.fillStyle = ctxFill = fill;\n\t\tif (width != ctxWidth)\n\t\t\tctx.lineWidth = ctxWidth = width;\n\t\tif (join != ctxJoin)\n\t\t\tctx.lineJoin = ctxJoin = join;\n\t\tif (cap != ctxCap)\n\t\t\tctx.lineCap = ctxCap = cap;\n\t\tif (dash != ctxDash)\n\t\t\tctx.setLineDash(ctxDash = dash);\n\t}\n\n\tfunction setFontStyle(font, fill, align, baseline) {\n\t\tif (fill != ctxFill)\n\t\t\tctx.fillStyle = ctxFill = fill;\n\t\tif (font != ctxFont)\n\t\t\tctx.font = ctxFont = font;\n\t\tif (align != ctxAlign)\n\t\t\tctx.textAlign = ctxAlign = align;\n\t\tif (baseline != ctxBaseline)\n\t\t\tctx.textBaseline = ctxBaseline = baseline;\n\t}\n\n\tfunction accScale(wsc, psc, facet, data, sorted = 0) {\n\t\tif (data.length > 0 && wsc.auto(self, viaAutoScaleX) && (psc == null || psc.min == null)) {\n\t\t\tlet _i0 = ifNull(i0, 0);\n\t\t\tlet _i1 = ifNull(i1, data.length - 1);\n\n\t\t\t// only run getMinMax() for invalidated series data, else reuse\n\t\t\tlet minMax = facet.min == null ? (wsc.distr == 3 ? getMinMaxLog(data, _i0, _i1) : getMinMax(data, _i0, _i1, sorted)) : [facet.min, facet.max];\n\n\t\t\t// initial min/max\n\t\t\twsc.min = min(wsc.min, facet.min = minMax[0]);\n\t\t\twsc.max = max(wsc.max, facet.max = minMax[1]);\n\t\t}\n\t}\n\n\tfunction setScales() {\n\t//\tlog(\"setScales()\", arguments);\n\n\t\t// wip scales\n\t\tlet wipScales = copy(scales, fastIsObj);\n\n\t\tfor (let k in wipScales) {\n\t\t\tlet wsc = wipScales[k];\n\t\t\tlet psc = pendScales[k];\n\n\t\t\tif (psc != null && psc.min != null) {\n\t\t\t\tassign(wsc, psc);\n\n\t\t\t\t// explicitly setting the x-scale invalidates everything (acts as redraw)\n\t\t\t\tif (k == xScaleKey)\n\t\t\t\t\tresetYSeries(true);\n\t\t\t}\n\t\t\telse if (k != xScaleKey || mode == 2) {\n\t\t\t\tif (dataLen == 0 && wsc.from == null) {\n\t\t\t\t\tlet minMax = wsc.range(self, null, null, k);\n\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\twsc.max = minMax[1];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twsc.min = inf;\n\t\t\t\t\twsc.max = -inf;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (dataLen > 0) {\n\t\t\t// pre-range y-scales from y series' data values\n\t\t\tseries.forEach((s, i) => {\n\t\t\t\tif (mode == 1) {\n\t\t\t\t\tlet k = s.scale;\n\t\t\t\t\tlet wsc = wipScales[k];\n\t\t\t\t\tlet psc = pendScales[k];\n\n\t\t\t\t\tif (i == 0) {\n\t\t\t\t\t\tlet minMax = wsc.range(self, wsc.min, wsc.max, k);\n\n\t\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\t\twsc.max = minMax[1];\n\n\t\t\t\t\t\ti0 = closestIdx(wsc.min, data[0]);\n\t\t\t\t\t\ti1 = closestIdx(wsc.max, data[0]);\n\n\t\t\t\t\t\t// don't try to contract same or adjacent idxs\n\t\t\t\t\t\tif (i1 - i0 > 1) {\n\t\t\t\t\t\t\t// closest indices can be outside of view\n\t\t\t\t\t\t\tif (data[0][i0] < wsc.min)\n\t\t\t\t\t\t\t\ti0++;\n\t\t\t\t\t\t\tif (data[0][i1] > wsc.max)\n\t\t\t\t\t\t\t\ti1--;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ts.min = data0[i0];\n\t\t\t\t\t\ts.max = data0[i1];\n\t\t\t\t\t}\n\t\t\t\t\telse if (s.show && s.auto)\n\t\t\t\t\t\taccScale(wsc, psc, s, data[i], s.sorted);\n\n\t\t\t\t\ts.idxs[0] = i0;\n\t\t\t\t\ts.idxs[1] = i1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tif (s.show && s.auto) {\n\t\t\t\t\t\t\t// TODO: only handles, assumes and requires facets[0] / 'x' scale, and facets[1] / 'y' scale\n\t\t\t\t\t\t\tlet [ xFacet, yFacet ] = s.facets;\n\t\t\t\t\t\t\tlet xScaleKey = xFacet.scale;\n\t\t\t\t\t\t\tlet yScaleKey = yFacet.scale;\n\t\t\t\t\t\t\tlet [ xData, yData ] = data[i];\n\n\t\t\t\t\t\t\taccScale(wipScales[xScaleKey], pendScales[xScaleKey], xFacet, xData, xFacet.sorted);\n\t\t\t\t\t\t\taccScale(wipScales[yScaleKey], pendScales[yScaleKey], yFacet, yData, yFacet.sorted);\n\n\t\t\t\t\t\t\t// temp\n\t\t\t\t\t\t\ts.min = yFacet.min;\n\t\t\t\t\t\t\ts.max = yFacet.max;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// range independent scales\n\t\t\tfor (let k in wipScales) {\n\t\t\t\tlet wsc = wipScales[k];\n\t\t\t\tlet psc = pendScales[k];\n\n\t\t\t\tif (wsc.from == null && (psc == null || psc.min == null)) {\n\t\t\t\t\tlet minMax = wsc.range(\n\t\t\t\t\t\tself,\n\t\t\t\t\t\twsc.min ==  inf ? null : wsc.min,\n\t\t\t\t\t\twsc.max == -inf ? null : wsc.max,\n\t\t\t\t\t\tk\n\t\t\t\t\t);\n\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\twsc.max = minMax[1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// range dependent scales\n\t\tfor (let k in wipScales) {\n\t\t\tlet wsc = wipScales[k];\n\n\t\t\tif (wsc.from != null) {\n\t\t\t\tlet base = wipScales[wsc.from];\n\n\t\t\t\tif (base.min == null)\n\t\t\t\t\twsc.min = wsc.max = null;\n\t\t\t\telse {\n\t\t\t\t\tlet minMax = wsc.range(self, base.min, base.max, k);\n\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\twsc.max = minMax[1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet changed = {};\n\t\tlet anyChanged = false;\n\n\t\tfor (let k in wipScales) {\n\t\t\tlet wsc = wipScales[k];\n\t\t\tlet sc = scales[k];\n\n\t\t\tif (sc.min != wsc.min || sc.max != wsc.max) {\n\t\t\t\tsc.min = wsc.min;\n\t\t\t\tsc.max = wsc.max;\n\n\t\t\t\tlet distr = sc.distr;\n\n\t\t\t\tsc._min = distr == 3 ? log10(sc.min) : distr == 4 ? asinh(sc.min, sc.asinh) : sc.min;\n\t\t\t\tsc._max = distr == 3 ? log10(sc.max) : distr == 4 ? asinh(sc.max, sc.asinh) : sc.max;\n\n\t\t\t\tchanged[k] = anyChanged = true;\n\t\t\t}\n\t\t}\n\n\t\tif (anyChanged) {\n\t\t\t// invalidate paths of all series on changed scales\n\t\t\tseries.forEach((s, i) => {\n\t\t\t\tif (mode == 2) {\n\t\t\t\t\tif (i > 0 && changed.y)\n\t\t\t\t\t\ts._paths = null;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (changed[s.scale])\n\t\t\t\t\t\ts._paths = null;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfor (let k in changed) {\n\t\t\t\tshouldConvergeSize = true;\n\t\t\t\tfire(\"setScale\", k);\n\t\t\t}\n\n\t\t\tif (cursor.show && cursor.left >= 0)\n\t\t\t\tshouldSetCursor = shouldSetLegend = true;\n\t\t}\n\n\t\tfor (let k in pendScales)\n\t\t\tpendScales[k] = null;\n\t}\n\n\t// grabs the nearest indices with y data outside of x-scale limits\n\tfunction getOuterIdxs(ydata) {\n\t\tlet _i0 = clamp(i0 - 1, 0, dataLen - 1);\n\t\tlet _i1 = clamp(i1 + 1, 0, dataLen - 1);\n\n\t\twhile (ydata[_i0] == null && _i0 > 0)\n\t\t\t_i0--;\n\n\t\twhile (ydata[_i1] == null && _i1 < dataLen - 1)\n\t\t\t_i1++;\n\n\t\treturn [_i0, _i1];\n\t}\n\n\tfunction drawSeries() {\n\t\tif (dataLen > 0) {\n\t\t\tseries.forEach((s, i) => {\n\t\t\t\tif (i > 0 && s.show) {\n\t\t\t\t\tFEAT_PATHS && cacheStrokeFill(i, false);\n\t\t\t\t\tFEAT_POINTS && cacheStrokeFill(i, true);\n\n\t\t\t\t\tif (s._paths == null) {\n\t\t\t\t\t\tlet _idxs = mode == 2 ? [0, data[i][0].length - 1] : getOuterIdxs(data[i]);\n\t\t\t\t\t\ts._paths = s.paths(self, i, _idxs[0], _idxs[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tseries.forEach((s, i) => {\n\t\t\t\tif (i > 0 && s.show) {\n\t\t\t\t\tif (ctxAlpha != s.alpha)\n\t\t\t\t\t\tctx.globalAlpha = ctxAlpha = s.alpha;\n\n\t\t\t\t\tFEAT_PATHS && s._paths != null && drawPath(i, false);\n\n\t\t\t\t\tif (FEAT_POINTS) {\n\t\t\t\t\t\tlet _gaps = s._paths != null ? s._paths.gaps : null;\n\n\t\t\t\t\t\tlet show = s.points.show(self, i, i0, i1, _gaps);\n\t\t\t\t\t\tlet idxs = s.points.filter(self, i, show, _gaps);\n\n\t\t\t\t\t\tif (show || idxs) {\n\t\t\t\t\t\t\ts.points._paths = s.points.paths(self, i, i0, i1, idxs);\n\t\t\t\t\t\t\tdrawPath(i, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ctxAlpha != 1)\n\t\t\t\t\t\tctx.globalAlpha = ctxAlpha = 1;\n\n\t\t\t\t\tfire(\"drawSeries\", i);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction cacheStrokeFill(si, _points) {\n\t\tlet s = _points ? series[si].points : series[si];\n\n\t\ts._stroke = s.stroke(self, si);\n\t\ts._fill   = s.fill(self, si);\n\t}\n\n\tfunction drawPath(si, _points) {\n\t\tlet s = _points ? series[si].points : series[si];\n\n\t\tlet {\n\t\t\tstroke,\n\t\t\tfill,\n\t\t\tclip: gapsClip,\n\t\t\tflags,\n\n\t\t\t_stroke: strokeStyle = s._stroke,\n\t\t\t_fill:   fillStyle   = s._fill,\n\t\t\t_width:  width       = s.width,\n\t\t} = s._paths;\n\n\t\twidth = roundDec(width * pxRatio, 3);\n\n\t\tlet boundsClip = null;\n\t\tlet offset = (width % 2) / 2;\n\n\t\tif (_points && fillStyle == null)\n\t\t\tfillStyle = width > 0 ? \"#fff\" : strokeStyle;\n\n\t\tlet _pxAlign = s.pxAlign == 1 && offset > 0;\n\n\t\t_pxAlign && ctx.translate(offset, offset);\n\n\t\tif (!_points) {\n\t\t\tlet lft = plotLft - width / 2,\n\t\t\t\ttop = plotTop - width / 2,\n\t\t\t\twid = plotWid + width,\n\t\t\t\thgt = plotHgt + width;\n\n\t\t\tboundsClip = new Path2D();\n\t\t\tboundsClip.rect(lft, top, wid, hgt);\n\t\t}\n\n\t\t// the points pathbuilder's gapsClip is its boundsClip, since points dont need gaps clipping, and bounds depend on point size\n\t\tif (_points)\n\t\t\tstrokeFill(strokeStyle, width, s.dash, s.cap, fillStyle, stroke, fill, flags, gapsClip);\n\t\telse\n\t\t\tfillStroke(si, strokeStyle, width, s.dash, s.cap, fillStyle, stroke, fill, flags, boundsClip, gapsClip);\n\n\t\t_pxAlign && ctx.translate(-offset, -offset);\n\t}\n\n\tfunction fillStroke(si, strokeStyle, lineWidth, lineDash, lineCap, fillStyle, strokePath, fillPath, flags, boundsClip, gapsClip) {\n\t\tlet didStrokeFill = false;\n\n\t\t// for all bands where this series is the top edge, create upwards clips using the bottom edges\n\t\t// and apply clips + fill with band fill or dfltFill\n\t\tbands.forEach((b, bi) => {\n\t\t\t// isUpperEdge?\n\t\t\tif (b.series[0] == si) {\n\t\t\t\tlet lowerEdge = series[b.series[1]];\n\t\t\t\tlet lowerData = data[b.series[1]];\n\n\t\t\t\tlet bandClip = (lowerEdge._paths || EMPTY_OBJ).band;\n\n\t\t\t\tif (isArr(bandClip))\n\t\t\t\t\tbandClip = b.dir == 1 ? bandClip[0] : bandClip[1];\n\n\t\t\t\tlet gapsClip2;\n\n\t\t\t\tlet _fillStyle = null;\n\n\t\t\t\t// hasLowerEdge?\n\t\t\t\tif (lowerEdge.show && bandClip && hasData(lowerData, i0, i1)) {\n\t\t\t\t\t_fillStyle = b.fill(self, bi) || fillStyle;\n\t\t\t\t\tgapsClip2 = lowerEdge._paths.clip;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbandClip = null;\n\n\t\t\t\tstrokeFill(strokeStyle, lineWidth, lineDash, lineCap, _fillStyle, strokePath, fillPath, flags, boundsClip, gapsClip, gapsClip2, bandClip);\n\n\t\t\t\tdidStrokeFill = true;\n\t\t\t}\n\t\t});\n\n\t\tif (!didStrokeFill)\n\t\t\tstrokeFill(strokeStyle, lineWidth, lineDash, lineCap, fillStyle, strokePath, fillPath, flags, boundsClip, gapsClip);\n\t}\n\n\tconst CLIP_FILL_STROKE = BAND_CLIP_FILL | BAND_CLIP_STROKE;\n\n\tfunction strokeFill(strokeStyle, lineWidth, lineDash, lineCap, fillStyle, strokePath, fillPath, flags, boundsClip, gapsClip, gapsClip2, bandClip) {\n\t\tsetCtxStyle(strokeStyle, lineWidth, lineDash, lineCap, fillStyle);\n\n\t\tif (boundsClip || gapsClip || bandClip) {\n\t\t\tctx.save();\n\t\t\tboundsClip && ctx.clip(boundsClip);\n\t\t\tgapsClip && ctx.clip(gapsClip);\n\t\t}\n\n\t\tif (bandClip) {\n\t\t\tif ((flags & CLIP_FILL_STROKE) == CLIP_FILL_STROKE) {\n\t\t\t\tctx.clip(bandClip);\n\t\t\t\tgapsClip2 && ctx.clip(gapsClip2);\n\t\t\t\tdoFill(fillStyle, fillPath);\n\t\t\t\tdoStroke(strokeStyle, strokePath, lineWidth);\n\t\t\t}\n\t\t\telse if (flags & BAND_CLIP_STROKE) {\n\t\t\t\tdoFill(fillStyle, fillPath);\n\t\t\t\tctx.clip(bandClip);\n\t\t\t\tdoStroke(strokeStyle, strokePath, lineWidth);\n\t\t\t}\n\t\t\telse if (flags & BAND_CLIP_FILL) {\n\t\t\t\tctx.save();\n\t\t\t\tctx.clip(bandClip);\n\t\t\t\tgapsClip2 && ctx.clip(gapsClip2);\n\t\t\t\tdoFill(fillStyle, fillPath);\n\t\t\t\tctx.restore();\n\t\t\t\tdoStroke(strokeStyle, strokePath, lineWidth);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdoFill(fillStyle, fillPath);\n\t\t\tdoStroke(strokeStyle, strokePath, lineWidth);\n\t\t}\n\n\t\tif (boundsClip || gapsClip || bandClip)\n\t\t\tctx.restore();\n\t}\n\n\tfunction doStroke(strokeStyle, strokePath, lineWidth) {\n\t\tif (lineWidth > 0) {\n\t\t\tif (strokePath instanceof Map) {\n\t\t\t\tstrokePath.forEach((strokePath, strokeStyle) => {\n\t\t\t\t\tctx.strokeStyle = ctxStroke = strokeStyle;\n\t\t\t\t\tctx.stroke(strokePath);\n\t\t\t\t});\n\t\t\t}\n\t\t\telse\n\t\t\t\tstrokePath != null && strokeStyle && ctx.stroke(strokePath);\n\t\t}\n\t}\n\n\tfunction doFill(fillStyle, fillPath) {\n\t\tif (fillPath instanceof Map) {\n\t\t\tfillPath.forEach((fillPath, fillStyle) => {\n\t\t\t\tctx.fillStyle = ctxFill = fillStyle;\n\t\t\t\tctx.fill(fillPath);\n\t\t\t});\n\t\t}\n\t\telse\n\t\t\tfillPath != null && fillStyle && ctx.fill(fillPath);\n\t}\n\n\tfunction getIncrSpace(axisIdx, min, max, fullDim) {\n\t\tlet axis = axes[axisIdx];\n\n\t\tlet incrSpace;\n\n\t\tif (fullDim <= 0)\n\t\t\tincrSpace = [0, 0];\n\t\telse {\n\t\t\tlet minSpace = axis._space = axis.space(self, axisIdx, min, max, fullDim);\n\t\t\tlet incrs    = axis._incrs = axis.incrs(self, axisIdx, min, max, fullDim, minSpace);\n\t\t\tincrSpace    = findIncr(min, max, incrs, fullDim, minSpace);\n\t\t}\n\n\t\treturn (axis._found = incrSpace);\n\t}\n\n\tfunction drawOrthoLines(offs, filts, ori, side, pos0, len, width, stroke, dash, cap) {\n\t\tlet offset = (width % 2) / 2;\n\n\t\tpxAlign == 1 && ctx.translate(offset, offset);\n\n\t\tsetCtxStyle(stroke, width, dash, cap, stroke);\n\n\t\tctx.beginPath();\n\n\t\tlet x0, y0, x1, y1, pos1 = pos0 + (side == 0 || side == 3 ? -len : len);\n\n\t\tif (ori == 0) {\n\t\t\ty0 = pos0;\n\t\t\ty1 = pos1;\n\t\t}\n\t\telse {\n\t\t\tx0 = pos0;\n\t\t\tx1 = pos1;\n\t\t}\n\n\t\tfor (let i = 0; i < offs.length; i++) {\n\t\t\tif (filts[i] != null) {\n\t\t\t\tif (ori == 0)\n\t\t\t\t\tx0 = x1 = offs[i];\n\t\t\t\telse\n\t\t\t\t\ty0 = y1 = offs[i];\n\n\t\t\t\tctx.moveTo(x0, y0);\n\t\t\t\tctx.lineTo(x1, y1);\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\n\t\tpxAlign == 1 && ctx.translate(-offset, -offset);\n\t}\n\n\tfunction axesCalc(cycleNum) {\n\t//\tlog(\"axesCalc()\", arguments);\n\n\t\tlet converged = true;\n\n\t\taxes.forEach((axis, i) => {\n\t\t\tif (!axis.show)\n\t\t\t\treturn;\n\n\t\t\tlet scale = scales[axis.scale];\n\n\t\t\tif (scale.min == null) {\n\t\t\t\tif (axis._show) {\n\t\t\t\t\tconverged = false;\n\t\t\t\t\taxis._show = false;\n\t\t\t\t\tresetYSeries(false);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!axis._show) {\n\t\t\t\t\tconverged = false;\n\t\t\t\t\taxis._show = true;\n\t\t\t\t\tresetYSeries(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet side = axis.side;\n\t\t\tlet ori = side % 2;\n\n\t\t\tlet {min, max} = scale;\t\t// \t\t// should this toggle them ._show = false\n\n\t\t\tlet [_incr, _space] = getIncrSpace(i, min, max, ori == 0 ? plotWidCss : plotHgtCss);\n\n\t\t\tif (_space == 0)\n\t\t\t\treturn;\n\n\t\t\t// if we're using index positions, force first tick to match passed index\n\t\t\tlet forceMin = scale.distr == 2;\n\n\t\t\tlet _splits = axis._splits = axis.splits(self, i, min, max, _incr, _space, forceMin);\n\n\t\t\t// tick labels\n\t\t\t// BOO this assumes a specific data/series\n\t\t\tlet splits = scale.distr == 2 ? _splits.map(i => data0[i]) : _splits;\n\t\t\tlet incr   = scale.distr == 2 ? data0[_splits[1]] - data0[_splits[0]] : _incr;\n\n\t\t\tlet values = axis._values = axis.values(self, axis.filter(self, splits, i, _space, incr), i, _space, incr);\n\n\t\t\t// rotating of labels only supported on bottom x axis\n\t\t\taxis._rotate = side == 2 ? axis.rotate(self, values, i, _space) : 0;\n\n\t\t\tlet oldSize = axis._size;\n\n\t\t\taxis._size = ceil(axis.size(self, values, i, cycleNum));\n\n\t\t\tif (oldSize != null && axis._size != oldSize)\t\t\t// ready && ?\n\t\t\t\tconverged = false;\n\t\t});\n\n\t\treturn converged;\n\t}\n\n\tfunction paddingCalc(cycleNum) {\n\t\tlet converged = true;\n\n\t\tpadding.forEach((p, i) => {\n\t\t\tlet _p = p(self, i, sidesWithAxes, cycleNum);\n\n\t\t\tif (_p != _padding[i])\n\t\t\t\tconverged = false;\n\n\t\t\t_padding[i] = _p;\n\t\t});\n\n\t\treturn converged;\n\t}\n\n\tfunction drawAxesGrid() {\n\t\tfor (let i = 0; i < axes.length; i++) {\n\t\t\tlet axis = axes[i];\n\n\t\t\tif (!axis.show || !axis._show)\n\t\t\t\tcontinue;\n\n\t\t\tlet side = axis.side;\n\t\t\tlet ori = side % 2;\n\n\t\t\tlet x, y;\n\n\t\t\tlet fillStyle = axis.stroke(self, i);\n\n\t\t\tlet shiftDir = side == 0 || side == 3 ? -1 : 1;\n\n\t\t\t// axis label\n\t\t\tif (axis.label) {\n\t\t\t\tlet shiftAmt = axis.labelGap * shiftDir;\n\t\t\t\tlet baseLpos = round((axis._lpos + shiftAmt) * pxRatio);\n\n\t\t\t\tsetFontStyle(axis.labelFont[0], fillStyle, \"center\", side == 2 ? TOP : BOTTOM);\n\n\t\t\t\tctx.save();\n\n\t\t\t\tif (ori == 1) {\n\t\t\t\t\tx = y = 0;\n\n\t\t\t\t\tctx.translate(\n\t\t\t\t\t\tbaseLpos,\n\t\t\t\t\t\tround(plotTop + plotHgt / 2),\n\t\t\t\t\t);\n\t\t\t\t\tctx.rotate((side == 3 ? -PI : PI) / 2);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx = round(plotLft + plotWid / 2);\n\t\t\t\t\ty = baseLpos;\n\t\t\t\t}\n\n\t\t\t\tctx.fillText(axis.label, x, y);\n\n\t\t\t\tctx.restore();\n\t\t\t}\n\n\t\t\tlet [_incr, _space] = axis._found;\n\n\t\t\tif (_space == 0)\n\t\t\t\tcontinue;\n\n\t\t\tlet scale = scales[axis.scale];\n\n\t\t\tlet plotDim = ori == 0 ? plotWid : plotHgt;\n\t\t\tlet plotOff = ori == 0 ? plotLft : plotTop;\n\n\t\t\tlet axisGap = round(axis.gap * pxRatio);\n\n\t\t\tlet _splits = axis._splits;\n\n\t\t\t// tick labels\n\t\t\t// BOO this assumes a specific data/series\n\t\t\tlet splits = scale.distr == 2 ? _splits.map(i => data0[i]) : _splits;\n\t\t\tlet incr   = scale.distr == 2 ? data0[_splits[1]] - data0[_splits[0]] : _incr;\n\n\t\t\tlet ticks = axis.ticks;\n\t\t\tlet border = axis.border;\n\t\t\tlet tickSize = ticks.show ? round(ticks.size * pxRatio) : 0;\n\n\t\t\t// rotating of labels only supported on bottom x axis\n\t\t\tlet angle = axis._rotate * -PI/180;\n\n\t\t\tlet basePos  = pxRound(axis._pos * pxRatio);\n\t\t\tlet shiftAmt = (tickSize + axisGap) * shiftDir;\n\t\t\tlet finalPos = basePos + shiftAmt;\n\t\t\t    y        = ori == 0 ? finalPos : 0;\n\t\t\t    x        = ori == 1 ? finalPos : 0;\n\n\t\t\tlet font         = axis.font[0];\n\t\t\tlet textAlign    = axis.align == 1 ? LEFT :\n\t\t\t                   axis.align == 2 ? RIGHT :\n\t\t\t                   angle > 0 ? LEFT :\n\t\t\t                   angle < 0 ? RIGHT :\n\t\t\t                   ori == 0 ? \"center\" : side == 3 ? RIGHT : LEFT;\n\t\t\tlet textBaseline = angle ||\n\t\t\t                   ori == 1 ? \"middle\" : side == 2 ? TOP   : BOTTOM;\n\n\t\t\tsetFontStyle(font, fillStyle, textAlign, textBaseline);\n\n\t\t\tlet lineHeight = axis.font[1] * axis.lineGap;\n\n\t\t\tlet canOffs = _splits.map(val => pxRound(getPos(val, scale, plotDim, plotOff)));\n\n\t\t\tlet _values = axis._values;\n\n\t\t\tfor (let i = 0; i < _values.length; i++) {\n\t\t\t\tlet val = _values[i];\n\n\t\t\t\tif (val != null) {\n\t\t\t\t\tif (ori == 0)\n\t\t\t\t\t\tx = canOffs[i];\n\t\t\t\t\telse\n\t\t\t\t\t\ty = canOffs[i];\n\n\t\t\t\t\tval = \"\" + val;\n\n\t\t\t\t\tlet _parts = val.indexOf(\"\\n\") == -1 ? [val] : val.split(/\\n/gm);\n\n\t\t\t\t\tfor (let j = 0; j < _parts.length; j++) {\n\t\t\t\t\t\tlet text = _parts[j];\n\n\t\t\t\t\t\tif (angle) {\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(x, y + j * lineHeight); // can this be replaced with position math?\n\t\t\t\t\t\t\tctx.rotate(angle); // can this be done once?\n\t\t\t\t\t\t\tctx.fillText(text, 0, 0);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tctx.fillText(text, x, y + j * lineHeight);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// ticks\n\t\t\tif (ticks.show) {\n\t\t\t\tdrawOrthoLines(\n\t\t\t\t\tcanOffs,\n\t\t\t\t\tticks.filter(self, splits, i, _space, incr),\n\t\t\t\t\tori,\n\t\t\t\t\tside,\n\t\t\t\t\tbasePos,\n\t\t\t\t\ttickSize,\n\t\t\t\t\troundDec(ticks.width * pxRatio, 3),\n\t\t\t\t\tticks.stroke(self, i),\n\t\t\t\t\tticks.dash,\n\t\t\t\t\tticks.cap,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// grid\n\t\t\tlet grid = axis.grid;\n\n\t\t\tif (grid.show) {\n\t\t\t\tdrawOrthoLines(\n\t\t\t\t\tcanOffs,\n\t\t\t\t\tgrid.filter(self, splits, i, _space, incr),\n\t\t\t\t\tori,\n\t\t\t\t\tori == 0 ? 2 : 1,\n\t\t\t\t\tori == 0 ? plotTop : plotLft,\n\t\t\t\t\tori == 0 ? plotHgt : plotWid,\n\t\t\t\t\troundDec(grid.width * pxRatio, 3),\n\t\t\t\t\tgrid.stroke(self, i),\n\t\t\t\t\tgrid.dash,\n\t\t\t\t\tgrid.cap,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (border.show) {\n\t\t\t\tdrawOrthoLines(\n\t\t\t\t\t[basePos],\n\t\t\t\t\t[1],\n\t\t\t\t\tori == 0 ? 1 : 0,\n\t\t\t\t\tori == 0 ? 1 : 2,\n\t\t\t\t\tori == 1 ? plotTop : plotLft,\n\t\t\t\t\tori == 1 ? plotHgt : plotWid,\n\t\t\t\t\troundDec(border.width * pxRatio, 3),\n\t\t\t\t\tborder.stroke(self, i),\n\t\t\t\t\tborder.dash,\n\t\t\t\t\tborder.cap,\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tfire(\"drawAxes\");\n\t}\n\n\tfunction resetYSeries(minMax) {\n\t//\tlog(\"resetYSeries()\", arguments);\n\n\t\tseries.forEach((s, i) => {\n\t\t\tif (i > 0) {\n\t\t\t\ts._paths = null;\n\n\t\t\t\tif (minMax) {\n\t\t\t\t\tif (mode == 1) {\n\t\t\t\t\t\ts.min = null;\n\t\t\t\t\t\ts.max = null;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ts.facets.forEach(f => {\n\t\t\t\t\t\t\tf.min = null;\n\t\t\t\t\t\t\tf.max = null;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tlet queuedCommit = false;\n\n\tfunction commit() {\n\t\tif (!queuedCommit) {\n\t\t\tmicroTask(_commit);\n\t\t\tqueuedCommit = true;\n\t\t}\n\t}\n\n\tfunction _commit() {\n\t//\tlog(\"_commit()\", arguments);\n\n\t\tif (shouldSetScales) {\n\t\t\tsetScales();\n\t\t\tshouldSetScales = false;\n\t\t}\n\n\t\tif (shouldConvergeSize) {\n\t\t\tconvergeSize();\n\t\t\tshouldConvergeSize = false;\n\t\t}\n\n\t\tif (shouldSetSize) {\n\t\t\tsetStylePx(under, LEFT,   plotLftCss);\n\t\t\tsetStylePx(under, TOP,    plotTopCss);\n\t\t\tsetStylePx(under, WIDTH,  plotWidCss);\n\t\t\tsetStylePx(under, HEIGHT, plotHgtCss);\n\n\t\t\tsetStylePx(over, LEFT,    plotLftCss);\n\t\t\tsetStylePx(over, TOP,     plotTopCss);\n\t\t\tsetStylePx(over, WIDTH,   plotWidCss);\n\t\t\tsetStylePx(over, HEIGHT,  plotHgtCss);\n\n\t\t\tsetStylePx(wrap, WIDTH,   fullWidCss);\n\t\t\tsetStylePx(wrap, HEIGHT,  fullHgtCss);\n\n\t\t\t// NOTE: mutating this during print preview in Chrome forces transparent\n\t\t\t// canvas pixels to white, even when followed up with clearRect() below\n\t\t\tcan.width  = round(fullWidCss * pxRatio);\n\t\t\tcan.height = round(fullHgtCss * pxRatio);\n\n\t\t\taxes.forEach(({ _el, _show, _size, _pos, side }) => {\n\t\t\t\tif (_el != null) {\n\t\t\t\t\tif (_show) {\n\t\t\t\t\t\tlet posOffset = (side === 3 || side === 0 ? _size : 0);\n\t\t\t\t\t\tlet isVt = side % 2 == 1;\n\n\t\t\t\t\t\tsetStylePx(_el, isVt ? \"left\"   : \"top\",    _pos - posOffset);\n\t\t\t\t\t\tsetStylePx(_el, isVt ? \"width\"  : \"height\", _size);\n\t\t\t\t\t\tsetStylePx(_el, isVt ? \"top\"    : \"left\",   isVt ? plotTopCss : plotLftCss);\n\t\t\t\t\t\tsetStylePx(_el, isVt ? \"height\" : \"width\",  isVt ? plotHgtCss : plotWidCss);\n\n\t\t\t\t\t\tremClass(_el, OFF);\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\taddClass(_el, OFF);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// invalidate ctx style cache\n\t\t\tctxStroke = ctxFill = ctxWidth = ctxJoin = ctxCap = ctxFont = ctxAlign = ctxBaseline = ctxDash = null;\n\t\t\tctxAlpha = 1;\n\n\t\t\tsyncRect(true);\n\n\t\t\tfire(\"setSize\");\n\n\t\t\tshouldSetSize = false;\n\t\t}\n\n\t\tif (fullWidCss > 0 && fullHgtCss > 0) {\n\t\t\tctx.clearRect(0, 0, can.width, can.height);\n\t\t\tfire(\"drawClear\");\n\t\t\tdrawOrder.forEach(fn => fn());\n\t\t\tfire(\"draw\");\n\t\t}\n\n\t\tif (select.show && shouldSetSelect) {\n\t\t\tsetSelect(select);\n\t\t\tshouldSetSelect = false;\n\t\t}\n\n\t\tif (cursor.show && shouldSetCursor) {\n\t\t\tupdateCursor(null, true, false);\n\t\t\tshouldSetCursor = false;\n\t\t}\n\n\t\tif (FEAT_LEGEND && legend.show && legend.live && shouldSetLegend) {\n\t\t\tsetLegend();\n\t\t\tshouldSetLegend = false; // redundant currently\n\t\t}\n\n\t\tif (!ready) {\n\t\t\tready = true;\n\t\t\tself.status = 1;\n\n\t\t\tfire(\"ready\");\n\t\t}\n\n\t\tviaAutoScaleX = false;\n\n\t\tqueuedCommit = false;\n\t}\n\n\tself.redraw = (rebuildPaths, recalcAxes) => {\n\t\tshouldConvergeSize = recalcAxes || false;\n\n\t\tif (rebuildPaths !== false)\n\t\t\t_setScale(xScaleKey, scaleX.min, scaleX.max);\n\t\telse\n\t\t\tcommit();\n\t};\n\n\t// redraw() => setScale('x', scales.x.min, scales.x.max);\n\n\t// explicit, never re-ranged (is this actually true? for x and y)\n\tfunction setScale(key, opts) {\n\t\tlet sc = scales[key];\n\n\t\tif (sc.from == null) {\n\t\t\tif (dataLen == 0) {\n\t\t\t\tlet minMax = sc.range(self, opts.min, opts.max, key);\n\t\t\t\topts.min = minMax[0];\n\t\t\t\topts.max = minMax[1];\n\t\t\t}\n\n\t\t\tif (opts.min > opts.max) {\n\t\t\t\tlet _min = opts.min;\n\t\t\t\topts.min = opts.max;\n\t\t\t\topts.max = _min;\n\t\t\t}\n\n\t\t\tif (dataLen > 1 && opts.min != null && opts.max != null && opts.max - opts.min < 1e-16)\n\t\t\t\treturn;\n\n\t\t\tif (key == xScaleKey) {\n\t\t\t\tif (sc.distr == 2 && dataLen > 0) {\n\t\t\t\t\topts.min = closestIdx(opts.min, data[0]);\n\t\t\t\t\topts.max = closestIdx(opts.max, data[0]);\n\n\t\t\t\t\tif (opts.min == opts.max)\n\t\t\t\t\t\topts.max++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t//\tlog(\"setScale()\", arguments);\n\n\t\t\tpendScales[key] = opts;\n\n\t\t\tshouldSetScales = true;\n\t\t\tcommit();\n\t\t}\n\t}\n\n\tself.setScale = setScale;\n\n//\tINTERACTION\n\n\tlet xCursor;\n\tlet yCursor;\n\tlet vCursor;\n\tlet hCursor;\n\n\t// starting position before cursor.move\n\tlet rawMouseLeft0;\n\tlet rawMouseTop0;\n\n\t// starting position\n\tlet mouseLeft0;\n\tlet mouseTop0;\n\n\t// current position before cursor.move\n\tlet rawMouseLeft1;\n\tlet rawMouseTop1;\n\n\t// current position\n\tlet mouseLeft1;\n\tlet mouseTop1;\n\n\tlet dragging = false;\n\n\tconst drag = cursor.drag;\n\n\tlet dragX = drag.x;\n\tlet dragY = drag.y;\n\n\tif (cursor.show) {\n\t\tif (cursor.x)\n\t\t\txCursor = placeDiv(CURSOR_X, over);\n\t\tif (cursor.y)\n\t\t\tyCursor = placeDiv(CURSOR_Y, over);\n\n\t\tif (scaleX.ori == 0) {\n\t\t\tvCursor = xCursor;\n\t\t\thCursor = yCursor;\n\t\t}\n\t\telse {\n\t\t\tvCursor = yCursor;\n\t\t\thCursor = xCursor;\n\t\t}\n\n\t\tmouseLeft1 = cursor.left;\n\t\tmouseTop1 = cursor.top;\n\t}\n\n\tconst select = self.select = assign({\n\t\tshow:   true,\n\t\tover:   true,\n\t\tleft:   0,\n\t\twidth:  0,\n\t\ttop:    0,\n\t\theight: 0,\n\t}, opts.select);\n\n\tconst selectDiv = select.show ? placeDiv(SELECT, select.over ? over : under) : null;\n\n\tfunction setSelect(opts, _fire) {\n\t\tif (select.show) {\n\t\t\tfor (let prop in opts) {\n\t\t\t\tselect[prop] = opts[prop];\n\n\t\t\t\tif (prop in _hideProps)\n\t\t\t\t\tsetStylePx(selectDiv, prop, opts[prop]);\n\t\t\t}\n\n\t\t\t_fire !== false && fire(\"setSelect\");\n\t\t}\n\t}\n\n\tself.setSelect = setSelect;\n\n\tfunction toggleDOM(i, onOff) {\n\t\tlet s = series[i];\n\t\tlet label = showLegend ? legendRows[i] : null;\n\n\t\tif (s.show)\n\t\t\tlabel && remClass(label, OFF);\n\t\telse {\n\t\t\tlabel && addClass(label, OFF);\n\t\t\tcursorPts.length > 1 && elTrans(cursorPts[i], -10, -10, plotWidCss, plotHgtCss);\n\t\t}\n\t}\n\n\tfunction _setScale(key, min, max) {\n\t\tsetScale(key, {min, max});\n\t}\n\n\tfunction setSeries(i, opts, _fire, _pub) {\n\t//\tlog(\"setSeries()\", arguments);\n\n\t\tif (opts.focus != null)\n\t\t\tsetFocus(i);\n\n\t\tif (opts.show != null) {\n\t\t\tseries.forEach((s, si) => {\n\t\t\t\tif (si > 0 && (i == si || i == null)) {\n\t\t\t\t\ts.show = opts.show;\n\t\t\t\t\tFEAT_LEGEND && toggleDOM(si, opts.show);\n\n\t\t\t\t\t_setScale(mode == 2 ? s.facets[1].scale : s.scale, null, null);\n\t\t\t\t\tcommit();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t_fire !== false && fire(\"setSeries\", i, opts);\n\n\t\t_pub && pubSync(\"setSeries\", self, i, opts);\n\t}\n\n\tself.setSeries = setSeries;\n\n\tfunction setBand(bi, opts) {\n\t\tassign(bands[bi], opts);\n\t}\n\n\tfunction addBand(opts, bi) {\n\t\topts.fill = fnOrSelf(opts.fill || null);\n\t\topts.dir = ifNull(opts.dir, -1);\n\t\tbi = bi == null ? bands.length : bi;\n\t\tbands.splice(bi, 0, opts);\n\t}\n\n\tfunction delBand(bi) {\n\t\tif (bi == null)\n\t\t\tbands.length = 0;\n\t\telse\n\t\t\tbands.splice(bi, 1);\n\t}\n\n\tself.addBand = addBand;\n\tself.setBand = setBand;\n\tself.delBand = delBand;\n\n\tfunction setAlpha(i, value) {\n\t\tseries[i].alpha = value;\n\n\t\tif (cursor.show && cursorPts[i])\n\t\t\tcursorPts[i].style.opacity = value;\n\n\t\tif (FEAT_LEGEND && showLegend && legendRows[i])\n\t\t\tlegendRows[i].style.opacity = value;\n\t}\n\n\t// y-distance\n\tlet closestDist;\n\tlet closestSeries;\n\tlet focusedSeries;\n\tconst FOCUS_TRUE  = {focus: true};\n\n\tfunction setFocus(i) {\n\t\tif (i != focusedSeries) {\n\t\t//\tlog(\"setFocus()\", arguments);\n\n\t\t\tlet allFocused = i == null;\n\n\t\t\tlet _setAlpha = focus.alpha != 1;\n\n\t\t\tseries.forEach((s, i2) => {\n\t\t\t\tlet isFocused = allFocused || i2 == 0 || i2 == i;\n\t\t\t\ts._focus = allFocused ? null : isFocused;\n\t\t\t\t_setAlpha && setAlpha(i2, isFocused ? 1 : focus.alpha);\n\t\t\t});\n\n\t\t\tfocusedSeries = i;\n\t\t\t_setAlpha && commit();\n\t\t}\n\t}\n\n\tif (showLegend && cursorFocus) {\n\t\tonMouse(mouseleave, legendTable, e => {\n\t\t\tif (cursor._lock)\n\t\t\t\treturn;\n\n\t\t\tsetCursorEvent(e);\n\n\t\t\tif (focusedSeries != null)\n\t\t\t\tsetSeries(null, FOCUS_TRUE, true, syncOpts.setSeries);\n\t\t});\n\t}\n\n\tfunction posToVal(pos, scale, can) {\n\t\tlet sc = scales[scale];\n\n\t\tif (can)\n\t\t\tpos = pos / pxRatio - (sc.ori == 1 ? plotTopCss : plotLftCss);\n\n\t\tlet dim = plotWidCss;\n\n\t\tif (sc.ori == 1) {\n\t\t\tdim = plotHgtCss;\n\t\t\tpos = dim - pos;\n\t\t}\n\n\t\tif (sc.dir == -1)\n\t\t\tpos = dim - pos;\n\n\t\tlet _min = sc._min,\n\t\t\t_max = sc._max,\n\t\t\tpct = pos / dim;\n\n\t\tlet sv = _min + (_max - _min) * pct;\n\n\t\tlet distr = sc.distr;\n\n\t\treturn (\n\t\t\tdistr == 3 ? pow(10, sv) :\n\t\t\tdistr == 4 ? sinh(sv, sc.asinh) :\n\t\t\tsv\n\t\t);\n\t}\n\n\tfunction closestIdxFromXpos(pos, can) {\n\t\tlet v = posToVal(pos, xScaleKey, can);\n\t\treturn closestIdx(v, data[0], i0, i1);\n\t}\n\n\tself.valToIdx = val => closestIdx(val, data[0]);\n\tself.posToIdx = closestIdxFromXpos;\n\tself.posToVal = posToVal;\n\tself.valToPos = (val, scale, can) => (\n\t\tscales[scale].ori == 0 ?\n\t\tgetHPos(val, scales[scale],\n\t\t\tcan ? plotWid : plotWidCss,\n\t\t\tcan ? plotLft : 0,\n\t\t) :\n\t\tgetVPos(val, scales[scale],\n\t\t\tcan ? plotHgt : plotHgtCss,\n\t\t\tcan ? plotTop : 0,\n\t\t)\n\t);\n\n\t// defers calling expensive functions\n\tfunction batch(fn) {\n\t\tfn(self);\n\t\tcommit();\n\t}\n\n\tself.batch = batch;\n\n\tself.setCursor = (opts, _fire, _pub) => {\n\t\tmouseLeft1 = opts.left;\n\t\tmouseTop1 = opts.top;\n\t//\tassign(cursor, opts);\n\t\tupdateCursor(null, _fire, _pub);\n\t};\n\n\tfunction setSelH(off, dim) {\n\t\tsetStylePx(selectDiv, LEFT,  select.left = off);\n\t\tsetStylePx(selectDiv, WIDTH, select.width = dim);\n\t}\n\n\tfunction setSelV(off, dim) {\n\t\tsetStylePx(selectDiv, TOP,    select.top = off);\n\t\tsetStylePx(selectDiv, HEIGHT, select.height = dim);\n\t}\n\n\tlet setSelX = scaleX.ori == 0 ? setSelH : setSelV;\n\tlet setSelY = scaleX.ori == 1 ? setSelH : setSelV;\n\n\tfunction syncLegend() {\n\t\tif (showLegend && legend.live) {\n\t\t\tfor (let i = mode == 2 ? 1 : 0; i < series.length; i++) {\n\t\t\t\tif (i == 0 && multiValLegend)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tlet vals = legend.values[i];\n\n\t\t\t\tlet j = 0;\n\n\t\t\t\tfor (let k in vals)\n\t\t\t\t\tlegendCells[i][j++].firstChild.nodeValue = vals[k];\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setLegend(opts, _fire) {\n\t\tif (opts != null) {\n\t\t\tif (opts.idxs) {\n\t\t\t\topts.idxs.forEach((didx, sidx) => {\n\t\t\t\t\tactiveIdxs[sidx] = didx;\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (!isUndef(opts.idx))\n\t\t\t\tactiveIdxs.fill(opts.idx);\n\n\t\t\tlegend.idx = activeIdxs[0];\n\t\t}\n\n\t\tfor (let sidx = 0; sidx < series.length; sidx++) {\n\t\t\tif (sidx > 0 || mode == 1 && !multiValLegend)\n\t\t\t\tsetLegendValues(sidx, activeIdxs[sidx]);\n\t\t}\n\n\t\tif (showLegend && legend.live)\n\t\t\tsyncLegend();\n\n\t\tshouldSetLegend = false;\n\n\t\t_fire !== false && fire(\"setLegend\");\n\t}\n\n\tself.setLegend = setLegend;\n\n\tfunction setLegendValues(sidx, idx) {\n\t\tlet s = series[sidx];\n\t\tlet src = sidx == 0 && xScaleDistr == 2 ? data0 : data[sidx];\n\t\tlet val;\n\n\t\tif (multiValLegend)\n\t\t\tval = s.values(self, sidx, idx) ?? NULL_LEGEND_VALUES;\n\t\telse {\n\t\t\tval = s.value(self, idx == null ? null : src[idx], sidx, idx);\n\t\t\tval = val == null ? NULL_LEGEND_VALUES : {_: val};\n\t\t}\n\n\t\tlegend.values[sidx] = val;\n\t}\n\n\tfunction updateCursor(src, _fire, _pub) {\n\t//\tts == null && log(\"updateCursor()\", arguments);\n\n\t\trawMouseLeft1 = mouseLeft1;\n\t\trawMouseTop1 = mouseTop1;\n\n\t\t[mouseLeft1, mouseTop1] = cursor.move(self, mouseLeft1, mouseTop1);\n\n\t\tif (cursor.show) {\n\t\t\tvCursor && elTrans(vCursor, round(mouseLeft1), 0, plotWidCss, plotHgtCss);\n\t\t\thCursor && elTrans(hCursor, 0, round(mouseTop1), plotWidCss, plotHgtCss);\n\t\t}\n\n\t\tlet idx;\n\n\t\t// when zooming to an x scale range between datapoints the binary search\n\t\t// for nearest min/max indices results in this condition. cheap hack :D\n\t\tlet noDataInRange = i0 > i1; // works for mode 1 only\n\n\t\tclosestDist = inf;\n\n\t\t// TODO: extract\n\t\tlet xDim = scaleX.ori == 0 ? plotWidCss : plotHgtCss;\n\t\tlet yDim = scaleX.ori == 1 ? plotWidCss : plotHgtCss;\n\n\t\t// if cursor hidden, hide points & clear legend vals\n\t\tif (mouseLeft1 < 0 || dataLen == 0 || noDataInRange) {\n\t\t\tidx = null;\n\n\t\t\tfor (let i = 0; i < series.length; i++) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tcursorPts.length > 1 && elTrans(cursorPts[i], -10, -10, plotWidCss, plotHgtCss);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cursorFocus)\n\t\t\t\tsetSeries(null, FOCUS_TRUE, true, src == null && syncOpts.setSeries);\n\n\t\t\tif (FEAT_LEGEND && legend.live) {\n\t\t\t\tactiveIdxs.fill(idx);\n\t\t\t\tshouldSetLegend = true;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t//\tlet pctY = 1 - (y / rect.height);\n\n\t\t\tlet mouseXPos, valAtPosX, xPos;\n\n\t\t\tif (mode == 1) {\n\t\t\t\tmouseXPos = scaleX.ori == 0 ? mouseLeft1 : mouseTop1;\n\t\t\t\tvalAtPosX = posToVal(mouseXPos, xScaleKey);\n\t\t\t\tidx = closestIdx(valAtPosX, data[0], i0, i1);\n\t\t\t\txPos = valToPosX(data[0][idx], scaleX, xDim, 0);\n\t\t\t}\n\n\t\t\tfor (let i = mode == 2 ? 1 : 0; i < series.length; i++) {\n\t\t\t\tlet s = series[i];\n\n\t\t\t\tlet idx1  = activeIdxs[i];\n\t\t\t\tlet yVal1 = mode == 1 ? data[i][idx1] : data[i][1][idx1];\n\n\t\t\t\tlet idx2  = cursor.dataIdx(self, i, idx, valAtPosX);\n\t\t\t\tlet yVal2 = mode == 1 ? data[i][idx2] : data[i][1][idx2];\n\n\t\t\t\tshouldSetLegend = shouldSetLegend || yVal2 != yVal1 || idx2 != idx1;\n\n\t\t\t\tactiveIdxs[i] = idx2;\n\n\t\t\t\tlet xPos2 = incrRoundUp(idx2 == idx ? xPos : valToPosX(mode == 1 ? data[0][idx2] : data[i][0][idx2], scaleX, xDim, 0), 1);\n\n\t\t\t\tif (i > 0 && s.show) {\n\t\t\t\t\tlet yPos = yVal2 == null ? -10 : incrRoundUp(valToPosY(yVal2, mode == 1 ? scales[s.scale] : scales[s.facets[1].scale], yDim, 0), 1);\n\n\t\t\t\t\tif (cursorFocus && yPos >= 0 && mode == 1) {\n\t\t\t\t\t\tlet dist = abs(yPos - mouseTop1);\n\n\t\t\t\t\t\tif (dist < closestDist) {\n\t\t\t\t\t\t\tlet bias = focus.bias;\n\n\t\t\t\t\t\t\tif (bias != 0) {\n\t\t\t\t\t\t\t\tlet mouseYPos = scaleX.ori == 1 ? mouseLeft1 : mouseTop1;\n\t\t\t\t\t\t\t\tlet mouseYVal = posToVal(mouseYPos, s.scale);\n\n\t\t\t\t\t\t\t\tlet seriesYValSign = yVal2     >= 0 ? 1 : -1;\n\t\t\t\t\t\t\t\tlet mouseYValSign  = mouseYVal >= 0 ? 1 : -1;\n\n\t\t\t\t\t\t\t\t// with a focus bias, we will never cross zero when prox testing\n\t\t\t\t\t\t\t\t// it's either closest towards zero, or closest away from zero\n\t\t\t\t\t\t\t\tif (mouseYValSign == seriesYValSign && (\n\t\t\t\t\t\t\t\t\tmouseYValSign == 1 ?\n\t\t\t\t\t\t\t\t\t\t(bias == 1 ? yVal2 >= mouseYVal : yVal2 <= mouseYVal) :  // >= 0\n\t\t\t\t\t\t\t\t\t\t(bias == 1 ? yVal2 <= mouseYVal : yVal2 >= mouseYVal)    //  < 0\n\t\t\t\t\t\t\t\t)) {\n\t\t\t\t\t\t\t\t\tclosestDist = dist;\n\t\t\t\t\t\t\t\t\tclosestSeries = i;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tclosestDist = dist;\n\t\t\t\t\t\t\t\tclosestSeries = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet hPos, vPos;\n\n\t\t\t\t\tif (scaleX.ori == 0) {\n\t\t\t\t\t\thPos = xPos2;\n\t\t\t\t\t\tvPos = yPos;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\thPos = yPos;\n\t\t\t\t\t\tvPos = xPos2;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (shouldSetLegend && cursorPts.length > 1) {\n\t\t\t\t\t\telColor(cursorPts[i], cursor.points.fill(self, i), cursor.points.stroke(self, i));\n\n\t\t\t\t\t\tlet ptWid, ptHgt, ptLft, ptTop,\n\t\t\t\t\t\t\tcentered = true,\n\t\t\t\t\t\t\tgetBBox = cursor.points.bbox;\n\n\t\t\t\t\t\tif (getBBox != null) {\n\t\t\t\t\t\t\tcentered = false;\n\n\t\t\t\t\t\t\tlet bbox = getBBox(self, i);\n\n\t\t\t\t\t\t\tptLft = bbox.left;\n\t\t\t\t\t\t\tptTop = bbox.top;\n\t\t\t\t\t\t\tptWid = bbox.width;\n\t\t\t\t\t\t\tptHgt = bbox.height;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tptLft = hPos;\n\t\t\t\t\t\t\tptTop = vPos;\n\t\t\t\t\t\t\tptWid = ptHgt = cursor.points.size(self, i);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\telSize(cursorPts[i], ptWid, ptHgt, centered);\n\t\t\t\t\t\telTrans(cursorPts[i], ptLft, ptTop, plotWidCss, plotHgtCss);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcursor.idx = idx;\n\t\tcursor.left = mouseLeft1;\n\t\tcursor.top = mouseTop1;\n\n\t\tif (shouldSetLegend) {\n\t\t\tlegend.idx = idx;\n\t\t\tsetLegend();\n\t\t}\n\n\t\t// nit: cursor.drag.setSelect is assumed always true\n\t\tif (select.show && dragging) {\n\t\t\tif (src != null) {\n\t\t\t\tlet [xKey, yKey] = syncOpts.scales;\n\t\t\t\tlet [matchXKeys, matchYKeys] = syncOpts.match;\n\t\t\t\tlet [xKeySrc, yKeySrc] = src.cursor.sync.scales;\n\n\t\t\t\t// match the dragX/dragY implicitness/explicitness of src\n\t\t\t\tlet sdrag = src.cursor.drag;\n\t\t\t\tdragX = sdrag._x;\n\t\t\t\tdragY = sdrag._y;\n\n\t\t\t\tif (dragX || dragY) {\n\t\t\t\t\tlet { left, top, width, height } = src.select;\n\n\t\t\t\t\tlet sori = src.scales[xKey].ori;\n\t\t\t\t\tlet sPosToVal = src.posToVal;\n\n\t\t\t\t\tlet sOff, sDim, sc, a, b;\n\n\t\t\t\t\tlet matchingX = xKey != null && matchXKeys(xKey, xKeySrc);\n\t\t\t\t\tlet matchingY = yKey != null && matchYKeys(yKey, yKeySrc);\n\n\t\t\t\t\tif (matchingX && dragX) {\n\t\t\t\t\t\tif (sori == 0) {\n\t\t\t\t\t\t\tsOff = left;\n\t\t\t\t\t\t\tsDim = width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsOff = top;\n\t\t\t\t\t\t\tsDim = height;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsc = scales[xKey];\n\n\t\t\t\t\t\ta = valToPosX(sPosToVal(sOff, xKeySrc),        sc, xDim, 0);\n\t\t\t\t\t\tb = valToPosX(sPosToVal(sOff + sDim, xKeySrc), sc, xDim, 0);\n\n\t\t\t\t\t\tsetSelX(min(a,b), abs(b-a));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tsetSelX(0, xDim);\n\n\t\t\t\t\tif (matchingY && dragY) {\n\t\t\t\t\t\tif (sori == 1) {\n\t\t\t\t\t\t\tsOff = left;\n\t\t\t\t\t\t\tsDim = width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsOff = top;\n\t\t\t\t\t\t\tsDim = height;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsc = scales[yKey];\n\n\t\t\t\t\t\ta = valToPosY(sPosToVal(sOff, yKeySrc),        sc, yDim, 0);\n\t\t\t\t\t\tb = valToPosY(sPosToVal(sOff + sDim, yKeySrc), sc, yDim, 0);\n\n\t\t\t\t\t\tsetSelY(min(a,b), abs(b-a));\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tsetSelY(0, yDim);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\thideSelect();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet rawDX = abs(rawMouseLeft1 - rawMouseLeft0);\n\t\t\t\tlet rawDY = abs(rawMouseTop1 - rawMouseTop0);\n\n\t\t\t\tif (scaleX.ori == 1) {\n\t\t\t\t\tlet _rawDX = rawDX;\n\t\t\t\t\trawDX = rawDY;\n\t\t\t\t\trawDY = _rawDX;\n\t\t\t\t}\n\n\t\t\t\tdragX = drag.x && rawDX >= drag.dist;\n\t\t\t\tdragY = drag.y && rawDY >= drag.dist;\n\n\t\t\t\tlet uni = drag.uni;\n\n\t\t\t\tif (uni != null) {\n\t\t\t\t\t// only calc drag status if they pass the dist thresh\n\t\t\t\t\tif (dragX && dragY) {\n\t\t\t\t\t\tdragX = rawDX >= uni;\n\t\t\t\t\t\tdragY = rawDY >= uni;\n\n\t\t\t\t\t\t// force unidirectionality when both are under uni limit\n\t\t\t\t\t\tif (!dragX && !dragY) {\n\t\t\t\t\t\t\tif (rawDY > rawDX)\n\t\t\t\t\t\t\t\tdragY = true;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tdragX = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (drag.x && drag.y && (dragX || dragY))\n\t\t\t\t\t// if omni with no uni then both dragX / dragY should be true if either is true\n\t\t\t\t\tdragX = dragY = true;\n\n\t\t\t\tlet p0, p1;\n\n\t\t\t\tif (dragX) {\n\t\t\t\t\tif (scaleX.ori == 0) {\n\t\t\t\t\t\tp0 = mouseLeft0;\n\t\t\t\t\t\tp1 = mouseLeft1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tp0 = mouseTop0;\n\t\t\t\t\t\tp1 = mouseTop1;\n\t\t\t\t\t}\n\n\t\t\t\t\tsetSelX(min(p0, p1), abs(p1 - p0));\n\n\t\t\t\t\tif (!dragY)\n\t\t\t\t\t\tsetSelY(0, yDim);\n\t\t\t\t}\n\n\t\t\t\tif (dragY) {\n\t\t\t\t\tif (scaleX.ori == 1) {\n\t\t\t\t\t\tp0 = mouseLeft0;\n\t\t\t\t\t\tp1 = mouseLeft1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tp0 = mouseTop0;\n\t\t\t\t\t\tp1 = mouseTop1;\n\t\t\t\t\t}\n\n\t\t\t\t\tsetSelY(min(p0, p1), abs(p1 - p0));\n\n\t\t\t\t\tif (!dragX)\n\t\t\t\t\t\tsetSelX(0, xDim);\n\t\t\t\t}\n\n\t\t\t\t// the drag didn't pass the dist requirement\n\t\t\t\tif (!dragX && !dragY) {\n\t\t\t\t\tsetSelX(0, 0);\n\t\t\t\t\tsetSelY(0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdrag._x = dragX;\n\t\tdrag._y = dragY;\n\n\t\tif (src == null) {\n\t\t\tif (_pub) {\n\t\t\t\tif (syncKey != null) {\n\t\t\t\t\tlet [xSyncKey, ySyncKey] = syncOpts.scales;\n\n\t\t\t\t\tsyncOpts.values[0] = xSyncKey != null ? posToVal(scaleX.ori == 0 ? mouseLeft1 : mouseTop1, xSyncKey) : null;\n\t\t\t\t\tsyncOpts.values[1] = ySyncKey != null ? posToVal(scaleX.ori == 1 ? mouseLeft1 : mouseTop1, ySyncKey) : null;\n\t\t\t\t}\n\n\t\t\t\tpubSync(mousemove, self, mouseLeft1, mouseTop1, plotWidCss, plotHgtCss, idx);\n\t\t\t}\n\n\t\t\tif (cursorFocus) {\n\t\t\t\tlet shouldPub = _pub && syncOpts.setSeries;\n\t\t\t\tlet p = focus.prox;\n\n\t\t\t\tif (focusedSeries == null) {\n\t\t\t\t\tif (closestDist <= p)\n\t\t\t\t\t\tsetSeries(closestSeries, FOCUS_TRUE, true, shouldPub);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (closestDist > p)\n\t\t\t\t\t\tsetSeries(null, FOCUS_TRUE, true, shouldPub);\n\t\t\t\t\telse if (closestSeries != focusedSeries)\n\t\t\t\t\t\tsetSeries(closestSeries, FOCUS_TRUE, true, shouldPub);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_fire !== false && fire(\"setCursor\");\n\t}\n\n\tlet rect = null;\n\n\tObject.defineProperty(self, 'rect', {\n\t\tget() {\n\t\t\tif (rect == null)\n\t\t\t\tsyncRect(false);\n\n\t\t\treturn rect;\n\t\t},\n\t});\n\n\tfunction syncRect(defer = false) {\n\t\tif (defer)\n\t\t\trect = null;\n\t\telse {\n\t\t\trect = over.getBoundingClientRect();\n\t\t\tfire(\"syncRect\", rect);\n\t\t}\n\t}\n\n\tfunction mouseMove(e, src, _l, _t, _w, _h, _i) {\n\t\tif (cursor._lock)\n\t\t\treturn;\n\n\t\t// Chrome on Windows has a bug which triggers a stray mousemove event after an initial mousedown event\n\t\t// when clicking into a plot as part of re-focusing the browser window.\n\t\t// we gotta ignore it to avoid triggering a phantom drag / setSelect\n\t\t// However, on touch-only devices Chrome-based browsers trigger a 0-distance mousemove before mousedown\n\t\t// so we don't ignore it when mousedown has set the dragging flag\n\t\tif (dragging && e != null && e.movementX == 0 && e.movementY == 0)\n\t\t\treturn;\n\n\t\tcacheMouse(e, src, _l, _t, _w, _h, _i, false, e != null);\n\n\t\tif (e != null)\n\t\t\tupdateCursor(null, true, true);\n\t\telse\n\t\t\tupdateCursor(src, true, false);\n\t}\n\n\tfunction cacheMouse(e, src, _l, _t, _w, _h, _i, initial, snap) {\n\t\tif (rect == null)\n\t\t\tsyncRect(false);\n\n\t\tsetCursorEvent(e);\n\n\t\tif (e != null) {\n\t\t\t_l = e.clientX - rect.left;\n\t\t\t_t = e.clientY - rect.top;\n\t\t}\n\t\telse {\n\t\t\tif (_l < 0 || _t < 0) {\n\t\t\t\tmouseLeft1 = -10;\n\t\t\t\tmouseTop1 = -10;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet [xKey, yKey] = syncOpts.scales;\n\n\t\t\tlet syncOptsSrc = src.cursor.sync;\n\t\t\tlet [xValSrc, yValSrc] = syncOptsSrc.values;\n\t\t\tlet [xKeySrc, yKeySrc] = syncOptsSrc.scales;\n\t\t\tlet [matchXKeys, matchYKeys] = syncOpts.match;\n\n\t\t\tlet rotSrc = src.axes[0].side % 2 == 1;\n\n\t\t\tlet xDim = scaleX.ori == 0 ? plotWidCss : plotHgtCss,\n\t\t\t\tyDim = scaleX.ori == 1 ? plotWidCss : plotHgtCss,\n\t\t\t\t_xDim = rotSrc ? _h : _w,\n\t\t\t\t_yDim = rotSrc ? _w : _h,\n\t\t\t\t_xPos = rotSrc ? _t : _l,\n\t\t\t\t_yPos = rotSrc ? _l : _t;\n\n\t\t\tif (xKeySrc != null)\n\t\t\t\t_l = matchXKeys(xKey, xKeySrc) ? getPos(xValSrc, scales[xKey], xDim, 0) : -10;\n\t\t\telse\n\t\t\t\t_l = xDim * (_xPos/_xDim);\n\n\t\t\tif (yKeySrc != null)\n\t\t\t\t_t = matchYKeys(yKey, yKeySrc) ? getPos(yValSrc, scales[yKey], yDim, 0) : -10;\n\t\t\telse\n\t\t\t\t_t = yDim * (_yPos/_yDim);\n\n\t\t\tif (scaleX.ori == 1) {\n\t\t\t\tlet __l = _l;\n\t\t\t\t_l = _t;\n\t\t\t\t_t = __l;\n\t\t\t}\n\t\t}\n\n\t\tif (snap) {\n\t\t\tif (_l <= 1 || _l >= plotWidCss - 1)\n\t\t\t\t_l = incrRound(_l, plotWidCss);\n\n\t\t\tif (_t <= 1 || _t >= plotHgtCss - 1)\n\t\t\t\t_t = incrRound(_t, plotHgtCss);\n\t\t}\n\n\t\tif (initial) {\n\t\t\trawMouseLeft0 = _l;\n\t\t\trawMouseTop0 = _t;\n\n\t\t\t[mouseLeft0, mouseTop0] = cursor.move(self, _l, _t);\n\t\t}\n\t\telse {\n\t\t\tmouseLeft1 = _l;\n\t\t\tmouseTop1 = _t;\n\t\t}\n\t}\n\n\tconst _hideProps = {\n\t\twidth: 0,\n\t\theight: 0,\n\t\tleft: 0,\n\t\ttop: 0,\n\t};\n\n\tfunction hideSelect() {\n\t\tsetSelect(_hideProps, false);\n\t}\n\n\tlet downSelectLeft;\n\tlet downSelectTop;\n\tlet downSelectWidth;\n\tlet downSelectHeight;\n\n\tfunction mouseDown(e, src, _l, _t, _w, _h, _i) {\n\t\tdragging = true;\n\t\tdragX = dragY = drag._x = drag._y = false;\n\n\t\tcacheMouse(e, src, _l, _t, _w, _h, _i, true, false);\n\n\t\tif (e != null) {\n\t\t\tonMouse(mouseup, doc, mouseUp, false);\n\t\t\tpubSync(mousedown, self, mouseLeft0, mouseTop0, plotWidCss, plotHgtCss, null);\n\t\t}\n\n\t\tlet { left, top, width, height } = select;\n\n\t\tdownSelectLeft   = left;\n\t\tdownSelectTop    = top;\n\t\tdownSelectWidth  = width;\n\t\tdownSelectHeight = height;\n\n\t\thideSelect();\n\t}\n\n\tfunction mouseUp(e, src, _l, _t, _w, _h, _i) {\n\t\tdragging = drag._x = drag._y = false;\n\n\t\tcacheMouse(e, src, _l, _t, _w, _h, _i, false, true);\n\n\t\tlet { left, top, width, height } = select;\n\n\t\tlet hasSelect = width > 0 || height > 0;\n\t\tlet chgSelect = (\n\t\t\tdownSelectLeft   != left   ||\n\t\t\tdownSelectTop    != top    ||\n\t\t\tdownSelectWidth  != width  ||\n\t\t\tdownSelectHeight != height\n\t\t);\n\n\t\thasSelect && chgSelect && setSelect(select);\n\n\t\tif (drag.setScale && hasSelect && chgSelect) {\n\t\t//\tif (syncKey != null) {\n\t\t//\t\tdragX = drag.x;\n\t\t//\t\tdragY = drag.y;\n\t\t//\t}\n\n\t\t\tlet xOff = left,\n\t\t\t\txDim = width,\n\t\t\t\tyOff = top,\n\t\t\t\tyDim = height;\n\n\t\t\tif (scaleX.ori == 1) {\n\t\t\t\txOff = top,\n\t\t\t\txDim = height,\n\t\t\t\tyOff = left,\n\t\t\t\tyDim = width;\n\t\t\t}\n\n\t\t\tif (dragX) {\n\t\t\t\t_setScale(xScaleKey,\n\t\t\t\t\tposToVal(xOff, xScaleKey),\n\t\t\t\t\tposToVal(xOff + xDim, xScaleKey)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (dragY) {\n\t\t\t\tfor (let k in scales) {\n\t\t\t\t\tlet sc = scales[k];\n\n\t\t\t\t\tif (k != xScaleKey && sc.from == null && sc.min != inf) {\n\t\t\t\t\t\t_setScale(k,\n\t\t\t\t\t\t\tposToVal(yOff + yDim, k),\n\t\t\t\t\t\t\tposToVal(yOff, k)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thideSelect();\n\t\t}\n\t\telse if (cursor.lock) {\n\t\t\tcursor._lock = !cursor._lock;\n\n\t\t\tif (!cursor._lock)\n\t\t\t\tupdateCursor(null, true, false);\n\t\t}\n\n\t\tif (e != null) {\n\t\t\toffMouse(mouseup, doc, mouseUp);\n\t\t\tpubSync(mouseup, self, mouseLeft1, mouseTop1, plotWidCss, plotHgtCss, null);\n\t\t}\n\t}\n\n\tfunction mouseLeave(e, src, _l, _t, _w, _h, _i) {\n\t\tif (cursor._lock)\n\t\t\treturn;\n\n\t\tsetCursorEvent(e);\n\n\t\tlet _dragging = dragging;\n\n\t\tif (dragging) {\n\t\t\t// handle case when mousemove aren't fired all the way to edges by browser\n\t\t\tlet snapH = true;\n\t\t\tlet snapV = true;\n\t\t\tlet snapProx = 10;\n\n\t\t\tlet dragH, dragV;\n\n\t\t\tif (scaleX.ori == 0) {\n\t\t\t\tdragH = dragX;\n\t\t\t\tdragV = dragY;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdragH = dragY;\n\t\t\t\tdragV = dragX;\n\t\t\t}\n\n\t\t\tif (dragH && dragV) {\n\t\t\t\t// maybe omni corner snap\n\t\t\t\tsnapH = mouseLeft1 <= snapProx || mouseLeft1 >= plotWidCss - snapProx;\n\t\t\t\tsnapV = mouseTop1  <= snapProx || mouseTop1  >= plotHgtCss - snapProx;\n\t\t\t}\n\n\t\t\tif (dragH && snapH)\n\t\t\t\tmouseLeft1 = mouseLeft1 < mouseLeft0 ? 0 : plotWidCss;\n\n\t\t\tif (dragV && snapV)\n\t\t\t\tmouseTop1 = mouseTop1 < mouseTop0 ? 0 : plotHgtCss;\n\n\t\t\tupdateCursor(null, true, true);\n\n\t\t\tdragging = false;\n\t\t}\n\n\t\tmouseLeft1 = -10;\n\t\tmouseTop1 = -10;\n\n\t\t// passing a non-null timestamp to force sync/mousemove event\n\t\tupdateCursor(null, true, true);\n\n\t\tif (_dragging)\n\t\t\tdragging = _dragging;\n\t}\n\n\tfunction dblClick(e, src, _l, _t, _w, _h, _i) {\n\t\tif (cursor._lock)\n\t\t\treturn;\n\n\t\tsetCursorEvent(e);\n\n\t\tautoScaleX();\n\n\t\thideSelect();\n\n\t\tif (e != null)\n\t\t\tpubSync(dblclick, self, mouseLeft1, mouseTop1, plotWidCss, plotHgtCss, null);\n\t}\n\n\tfunction syncPxRatio() {\n\t\taxes.forEach(syncFontSize);\n\t\t_setSize(self.width, self.height, true);\n\t}\n\n\ton(dppxchange, win, syncPxRatio);\n\n\t// internal pub/sub\n\tconst events = {};\n\n\tevents.mousedown = mouseDown;\n\tevents.mousemove = mouseMove;\n\tevents.mouseup = mouseUp;\n\tevents.dblclick = dblClick;\n\tevents[\"setSeries\"] = (e, src, idx, opts) => {\n\t\tlet seriesIdxMatcher = syncOpts.match[2];\n\t\tidx = seriesIdxMatcher(self, src, idx);\n\t\tidx != -1 && setSeries(idx, opts, true, false);\n\t};\n\n\tif (cursor.show) {\n\t\tonMouse(mousedown,  over, mouseDown);\n\t\tonMouse(mousemove,  over, mouseMove);\n\t\tonMouse(mouseenter, over, e => {\n\t\t\tsetCursorEvent(e);\n\t\t\tsyncRect(false);\n\t\t});\n\t\tonMouse(mouseleave, over, mouseLeave);\n\n\t\tonMouse(dblclick, over, dblClick);\n\n\t\tcursorPlots.add(self);\n\n\t\tself.syncRect = syncRect;\n\t}\n\n\t// external on/off\n\tconst hooks = self.hooks = opts.hooks || {};\n\n\tfunction fire(evName, a1, a2) {\n\t\tif (evName in hooks) {\n\t\t\thooks[evName].forEach(fn => {\n\t\t\t\tfn.call(null, self, a1, a2);\n\t\t\t});\n\t\t}\n\t}\n\n\t(opts.plugins || []).forEach(p => {\n\t\tfor (let evName in p.hooks)\n\t\t\thooks[evName] = (hooks[evName] || []).concat(p.hooks[evName]);\n\t});\n\n\tconst seriesIdxMatcher = (self, src, srcSeriesIdx) => srcSeriesIdx;\n\n\tconst syncOpts = assign({\n\t\tkey: null,\n\t\tsetSeries: false,\n\t\tfilters: {\n\t\t\tpub: retTrue,\n\t\t\tsub: retTrue,\n\t\t},\n\t\tscales: [xScaleKey, series[1] ? series[1].scale : null],\n\t\tmatch: [retEq, retEq, seriesIdxMatcher],\n\t\tvalues: [null, null],\n\t}, cursor.sync);\n\n\tif (syncOpts.match.length == 2)\n\t\tsyncOpts.match.push(seriesIdxMatcher);\n\n\tcursor.sync = syncOpts;\n\n\tconst syncKey = syncOpts.key;\n\n\tconst sync = _sync(syncKey);\n\n\tfunction pubSync(type, src, x, y, w, h, i) {\n\t\tif (syncOpts.filters.pub(type, src, x, y, w, h, i))\n\t\t\tsync.pub(type, src, x, y, w, h, i);\n\t}\n\n\tsync.sub(self);\n\n\tfunction pub(type, src, x, y, w, h, i) {\n\t\tif (syncOpts.filters.sub(type, src, x, y, w, h, i))\n\t\t\tevents[type](null, src, x, y, w, h, i);\n\t}\n\n\tself.pub = pub;\n\n\tfunction destroy() {\n\t\tsync.unsub(self);\n\t\tcursorPlots.delete(self);\n\t\tmouseListeners.clear();\n\t\toff(dppxchange, win, syncPxRatio);\n\t\troot.remove();\n\t\tFEAT_LEGEND && legendTable?.remove(); // in case mounted outside of root\n\t\tfire(\"destroy\");\n\t}\n\n\tself.destroy = destroy;\n\n\tfunction _init() {\n\t\tfire(\"init\", opts, data);\n\n\t\tsetData(data || opts.data, false);\n\n\t\tif (pendScales[xScaleKey])\n\t\t\tsetScale(xScaleKey, pendScales[xScaleKey]);\n\t\telse\n\t\t\tautoScaleX();\n\n\t\tshouldSetSelect = select.show && (select.width > 0 || select.height > 0);\n\t\tshouldSetCursor = shouldSetLegend = true;\n\n\t\t_setSize(opts.width, opts.height);\n\t}\n\n\tseries.forEach(initSeries);\n\n\taxes.forEach(initAxis);\n\n\tif (then) {\n\t\tif (then instanceof HTMLElement) {\n\t\t\tthen.appendChild(root);\n\t\t\t_init();\n\t\t}\n\t\telse\n\t\t\tthen(self, _init);\n\t}\n\telse\n\t\t_init();\n\n\treturn self;\n}\n\nuPlot.assign = assign;\nuPlot.fmtNum = fmtNum;\nuPlot.rangeNum = rangeNum;\nuPlot.rangeLog = rangeLog;\nuPlot.rangeAsinh = rangeAsinh;\nuPlot.orient   = orient;\nuPlot.pxRatio = pxRatio;\n\nif (FEAT_JOIN) {\n\tuPlot.join = join;\n}\n\nif (FEAT_TIME) {\n\tuPlot.fmtDate = fmtDate;\n\tuPlot.tzDate  = tzDate;\n}\n\nuPlot.sync = _sync;\n\nif (FEAT_PATHS) {\n\tuPlot.addGap = addGap;\n\tuPlot.clipGaps = clipGaps;\n\n\tlet paths = uPlot.paths = {\n\t\tpoints,\n\t};\n\n\tFEAT_PATHS_LINEAR  && (paths.linear  = linear);\n\tFEAT_PATHS_STEPPED && (paths.stepped = stepped);\n\tFEAT_PATHS_BARS    && (paths.bars    = bars);\n\tFEAT_PATHS_SPLINE  && (paths.spline  = spline);\n\tFEAT_PATHS_SPLINE2 && (paths.spline2 = spline2);\n}\n"],"names":["spline"],"mappings":";;;;;;;;;AAAO,MAAM,SAAS,YAAY,IAAI;;ACAtC,MAAM,GAAG,GAAG,IAAI,CAAC;AACjB;AACO,MAAM,KAAK,kBAAkB,OAAO,CAAC;AACrC,MAAM,MAAM,WAAW,GAAG,GAAG,IAAI,CAAC;AAClC,MAAM,MAAM,WAAW,GAAG,GAAG,IAAI,CAAC;AAClC,MAAM,KAAK,YAAY,GAAG,GAAG,OAAO,CAAC;AACrC,MAAM,IAAI,aAAa,GAAG,GAAG,MAAM,CAAC;AACpC,MAAM,KAAK,YAAY,GAAG,GAAG,OAAO,CAAC;AACrC,MAAM,IAAI,aAAa,GAAG,GAAG,MAAM,CAAC;AACpC,MAAM,IAAI,aAAa,GAAG,GAAG,MAAM,CAAC;AACpC,MAAM,GAAG,cAAc,GAAG,GAAG,KAAK,CAAC;AACnC,MAAM,MAAM,WAAW,GAAG,GAAG,QAAQ,CAAC;AACtC,MAAM,QAAQ,SAAS,GAAG,GAAG,UAAU,CAAC;AACxC,MAAM,QAAQ,SAAS,GAAG,GAAG,UAAU,CAAC;AACxC,MAAM,SAAS,QAAQ,GAAG,GAAG,WAAW,CAAC;AACzC,MAAM,MAAM,WAAW,GAAG,GAAG,SAAQ;AACrC,MAAM,WAAW,MAAM,GAAG,GAAG,MAAM,CAAC;AACpC,MAAM,aAAa,IAAI,GAAG,GAAG,QAAQ,CAAC;AACtC,MAAM,aAAa,IAAI,GAAG,GAAG,QAAQ,CAAC;AACtC,MAAM,aAAa,IAAI,GAAG,GAAG,QAAQ,CAAC;AACtC,MAAM,YAAY,KAAK,GAAG,GAAG,OAAO,CAAC;AACrC,MAAM,YAAY,KAAK,GAAG,GAAG,OAAO;;ACrBpC,MAAM,KAAK,SAAS,OAAO,CAAC;AAC5B,MAAM,MAAM,QAAQ,QAAQ,CAAC;AAC7B,MAAM,GAAG,WAAW,KAAK,CAAC;AAC1B,MAAM,MAAM,QAAQ,QAAQ,CAAC;AAC7B,MAAM,IAAI,UAAU,MAAM,CAAC;AAC3B,MAAM,KAAK,SAAS,OAAO,CAAC;AAC5B,MAAM,QAAQ,MAAM,MAAM,CAAC;AAC3B,MAAM,WAAW,GAAG,QAAQ,GAAG,GAAG,CAAC;AAC1C;AACO,MAAM,SAAS,KAAK,WAAW,CAAC;AAChC,MAAM,SAAS,KAAK,WAAW,CAAC;AAChC,MAAM,OAAO,OAAO,SAAS,CAAC;AAC9B,MAAM,UAAU,IAAI,YAAY,CAAC;AACjC,MAAM,UAAU,IAAI,YAAY,CAAC;AACjC,MAAM,QAAQ,MAAM,UAAU,CAAC;AAC/B,MAAM,MAAM,QAAQ,QAAQ,CAAC;AAC7B,MAAM,MAAM,QAAQ,QAAQ,CAAC;AACpC;AACO,MAAM,MAAM,QAAQ,QAAQ,CAAC;AAC7B,MAAM,UAAU,IAAI,YAAY,CAAC;AACxC;AACO,MAAM,WAAW,GAAG,IAAI;;ACZxB,MAAM,MAAM,GAAG,OAAO,MAAM,IAAI,WAAW,CAAC;AACnD;AACO,MAAM,GAAG,GAAG,MAAM,GAAG,QAAQ,IAAI,IAAI,CAAC;AACtC,MAAM,GAAG,GAAG,MAAM,GAAG,MAAM,MAAM,IAAI,CAAC;AACtC,MAAM,GAAG,GAAG,MAAM,GAAG,SAAS,GAAG,IAAI,CAAC;AAC7C;AACO,IAAI,OAAO,CAAC;AACnB;AACA;AACA;AACA,IAAI,KAAK,CAAC;AACV;AACA,SAAS,UAAU,GAAG;AACtB,CAAC,IAAI,QAAQ,GAAG,gBAAgB,CAAC;AACjC;AACA;AACA,CAAC,IAAI,OAAO,IAAI,QAAQ,EAAE;AAC1B,EAAE,OAAO,GAAG,QAAQ,CAAC;AACrB;AACA,EAAE,KAAK,IAAI,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;AAC1C,EAAE,KAAK,GAAG,UAAU,CAAC,CAAC,iBAAiB,EAAE,OAAO,GAAG,KAAK,CAAC,2BAA2B,EAAE,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AAC9G,EAAE,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC;AAChC;AACA,EAAE,GAAG,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;AACjD,EAAE;AACF,CAAC;AACD;AACO,SAAS,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE;AAChC,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE;AAChB,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC;AACxB,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/B,EAAE;AACF,CAAC;AACD;AACO,SAAS,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE;AAChC,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,SAAS,CAAC;AACvB,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC;AACD;AACO,SAAS,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;AAC5C,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;AAC/B,CAAC;AACD;AACO,SAAS,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE;AAChD,CAAC,IAAI,EAAE,GAAG,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AACjC;AACA,CAAC,IAAI,GAAG,IAAI,IAAI;AAChB,EAAE,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;AACpB;AACA,CAAC,IAAI,IAAI,IAAI,IAAI;AACjB,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AAC/B;AACA,CAAC,OAAO,EAAE,CAAC;AACX,CAAC;AACD;AACO,SAAS,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE;AACpC,CAAC,OAAO,QAAQ,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AACnC,CAAC;AACD;AACA,MAAM,UAAU,GAAG,IAAI,OAAO,EAAE,CAAC;AACjC;AACO,SAAS,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;AACpD,CAAC,IAAI,KAAK,GAAG,YAAY,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,CAAC;AACxD,CAAC,IAAI,QAAQ,GAAG,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AACnC;AACA,CAAC,IAAI,KAAK,IAAI,QAAQ,EAAE;AACxB,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;AAC7B,EAAE,UAAU,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AAC5B;AACA,EAAE,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI;AACxD,GAAG,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;AACrB;AACA,GAAG,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;AACrB,EAAE;AACF,CAAC;AACD;AACA,MAAM,UAAU,GAAG,IAAI,OAAO,EAAE,CAAC;AACjC;AACO,SAAS,OAAO,CAAC,EAAE,EAAE,UAAU,EAAE,WAAW,EAAE;AACrD,CAAC,IAAI,QAAQ,GAAG,UAAU,GAAG,WAAW,CAAC;AACzC,CAAC,IAAI,QAAQ,GAAG,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AACnC;AACA,CAAC,IAAI,QAAQ,IAAI,QAAQ,EAAE;AAC3B,EAAE,UAAU,CAAC,GAAG,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;AAC/B,EAAE,EAAE,CAAC,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC;AACnC,EAAE,EAAE,CAAC,KAAK,CAAC,WAAW,GAAG,WAAW,CAAC;AACrC,EAAE;AACF,CAAC;AACD;AACA,MAAM,SAAS,GAAG,IAAI,OAAO,EAAE,CAAC;AAChC;AACO,SAAS,MAAM,CAAC,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE;AACrD,CAAC,IAAI,OAAO,GAAG,MAAM,GAAG,EAAE,GAAG,MAAM,CAAC;AACpC,CAAC,IAAI,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;AACjC;AACA,CAAC,IAAI,OAAO,IAAI,OAAO,EAAE;AACzB,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;AAC7B,EAAE,EAAE,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC;AAClC,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,GAAG,IAAI,CAAC;AACjC,EAAE,EAAE,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;AACxD,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,GAAG,QAAQ,GAAG,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;AACvD,EAAE;AACF,CAAC;AACD;AACA,MAAM,MAAM,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AAC/B,MAAM,OAAO,GAAG,CAAC,GAAG,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;AAC3C;AACO,SAAS,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE;AACrC,CAAC,EAAE,CAAC,gBAAgB,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,OAAO,GAAG,MAAM,CAAC,CAAC;AACtD,CAAC;AACD;AACO,SAAS,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE;AACtC,CAAC,EAAE,CAAC,mBAAmB,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,OAAO,GAAG,MAAM,CAAC,CAAC;AACzD,CAAC;AACD;AACA,MAAM,IAAI,UAAU,EAAE;;AC1HtB;AACO,SAAS,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE;AAC7C,CAAC,IAAI,GAAG,CAAC;AACT,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AACd,CAAC,EAAE,GAAG,EAAE,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;AAC3B,CAAC,IAAI,OAAO,GAAG,EAAE,IAAI,UAAU,CAAC;AAChC;AACA,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;AACrB,EAAE,GAAG,GAAG,OAAO,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;AACxD;AACA,EAAE,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG;AACpB,GAAG,EAAE,GAAG,GAAG,CAAC;AACZ;AACA,GAAG,EAAE,GAAG,GAAG,CAAC;AACZ,EAAE;AACF;AACA,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG;AACnC,EAAE,OAAO,EAAE,CAAC;AACZ;AACA,CAAC,OAAO,EAAE,CAAC;AACX,CAAC;AACD;AACO,SAAS,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AAChD,CAAC,KAAK,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE;AACpE,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI;AACrB,GAAG,OAAO,CAAC,CAAC;AACZ,EAAE;AACF;AACA,CAAC,OAAO,CAAC,CAAC,CAAC;AACX,CAAC;AACD;AACO,SAAS,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE;AAClD;AACA;AACA,CAAC,IAAI,IAAI,GAAG,GAAG,CAAC;AAChB,CAAC,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC;AACjB;AACA,CAAC,IAAI,MAAM,IAAI,CAAC,EAAE;AAClB,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AACnB,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AACnB,EAAE;AACF,MAAM,IAAI,MAAM,IAAI,CAAC,CAAC,EAAE;AACxB,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AACnB,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AACnB,EAAE;AACF,MAAM;AACN,EAAE,KAAK,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,EAAE;AACnC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACnB;AACA,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE;AAClB,IAAI,IAAI,CAAC,GAAG,IAAI;AAChB,KAAK,IAAI,GAAG,CAAC,CAAC;AACd,IAAI,IAAI,CAAC,GAAG,IAAI;AAChB,KAAK,IAAI,GAAG,CAAC,CAAC;AACd,IAAI;AACJ,GAAG;AACH,EAAE;AACF;AACA,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACrB,CAAC;AACD;AACO,SAAS,YAAY,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE;AAC7C;AACA;AACA,CAAC,IAAI,IAAI,GAAG,GAAG,CAAC;AAChB,CAAC,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC;AACjB;AACA,CAAC,KAAK,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,EAAE;AAClC,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB;AACA,EAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;AAC1B,GAAG,IAAI,CAAC,GAAG,IAAI;AACf,IAAI,IAAI,GAAG,CAAC,CAAC;AACb,GAAG,IAAI,CAAC,GAAG,IAAI;AACf,IAAI,IAAI,GAAG,CAAC,CAAC;AACb,GAAG;AACH,EAAE;AACF;AACA,CAAC,OAAO;AACR,EAAE,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,IAAI;AAC1B,EAAE,IAAI,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,IAAI;AAC1B,EAAE,CAAC;AACH,CAAC;AACD;AACO,SAAS,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE;AACnD,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AACzB,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AACzB;AACA,CAAC,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC;AACvC;AACA,CAAC,IAAI,GAAG,IAAI,GAAG,EAAE;AACjB,EAAE,IAAI,OAAO,IAAI,CAAC,CAAC,EAAE;AACrB,GAAG,GAAG,IAAI,IAAI,CAAC;AACf,GAAG,GAAG,IAAI,IAAI,CAAC;AACf,GAAG;AACH,OAAO;AACP,GAAG,GAAG,IAAI,IAAI,CAAC;AACf,GAAG,GAAG,IAAI,IAAI,CAAC;AACf,GAAG;AACH,EAAE;AACF;AACA,CAAC,IAAI,UAAU,GAAG,OAAO,IAAI,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;AAC9C,CAAC,IAAI,UAAU,GAAG,OAAO,IAAI,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;AAC9C;AACA,CAAC,IAAI,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,IAAI,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC1C;AACA,CAAC,IAAI,OAAO,GAAG,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACjC,CAAC,IAAI,OAAO,GAAG,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACjC;AACA;AACA,CAAC,IAAI,IAAI,IAAI,EAAE,EAAE;AACjB,EAAE,IAAI,MAAM,GAAG,CAAC;AAChB,GAAG,OAAO,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC;AACxC,EAAE,IAAI,MAAM,GAAG,CAAC;AAChB,GAAG,OAAO,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,CAAC;AACxC,EAAE;AACF;AACA,CAAC,IAAI,QAAQ,IAAI,IAAI,IAAI,CAAC,EAAE;AAC5B,EAAE,GAAG,GAAG,OAAO,GAAG,OAAO,CAAC;AAC1B,EAAE,GAAG,GAAG,OAAO,GAAG,OAAO,CAAC;AAC1B,EAAE;AACF,MAAM;AACN,EAAE,GAAG,GAAG,WAAW,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;AAClC,EAAE,GAAG,GAAG,WAAW,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;AAClC,EAAE;AACF;AACA,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACnB,CAAC;AACD;AACO,SAAS,UAAU,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE;AACrD,CAAC,IAAI,MAAM,GAAG,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AACjD;AACA,CAAC,IAAI,GAAG,IAAI,CAAC;AACb,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAChB;AACA,CAAC,IAAI,GAAG,IAAI,CAAC;AACb,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAChB;AACA,CAAC,OAAO,MAAM,CAAC;AACf,CAAC;AACD;AACO,MAAM,QAAQ,GAAG,GAAG,CAAC;AAC5B;AACO,MAAM,aAAa,GAAG;AAC7B,CAAC,IAAI,EAAE,CAAC;AACR,CAAC,GAAG,EAAE,QAAQ;AACd,CAAC,CAAC;AACF;AACA,MAAM,YAAY,GAAG;AACrB,CAAC,GAAG,GAAG,CAAC;AACR,CAAC,IAAI,EAAE,IAAI;AACX,CAAC,IAAI,EAAE,CAAC;AACR,CAAC,CAAC;AACF;AACA,MAAM,QAAQ,GAAG;AACjB,CAAC,GAAG,EAAE,YAAY;AAClB,CAAC,GAAG,EAAE,YAAY;AAClB,CAAC,CAAC;AACF;AACA;AACA;AACO,SAAS,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AAClD,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC;AAChB,EAAE,OAAO,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACrC;AACA,CAAC,YAAY,CAAC,GAAG,IAAI,IAAI,CAAC;AAC1B,CAAC,YAAY,CAAC,IAAI,GAAG,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC;AACtC,CAAC,YAAY,CAAC,IAAI,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;AACnC;AACA,CAAC,OAAO,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AACxC,CAAC;AACD;AACA;AACO,SAAS,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE;AAC/B,CAAC,OAAO,EAAE,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;AAC7B,CAAC;AACD;AACA;AACA;AACO,SAAS,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;AAC1C,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACxB,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACtC;AACA,CAAC,OAAO,IAAI,IAAI,IAAI,EAAE;AACtB,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;AACxB,GAAG,OAAO,IAAI,CAAC;AACf,EAAE,IAAI,EAAE,CAAC;AACT,EAAE;AACF;AACA,CAAC,OAAO,KAAK,CAAC;AACd,CAAC;AACD;AACA,SAAS,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE;AACpC,CAAC,IAAI,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC;AACpB,CAAC,IAAI,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC;AACpB;AACA,CAAC,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAClC,CAAC,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAClC;AACA,CAAC,IAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC;AACvC,CAAC,IAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;AACvC;AACA,CAAC,IAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;AACvC,CAAC,IAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC;AACvC;AACA,CAAC,IAAI,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACxC,CAAC,IAAI,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACxC;AACA,CAAC,IAAI,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC;AACzB,CAAC,IAAI,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AAC7B;AACA,CAAC,IAAI,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3C,CAAC,IAAI,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;AAClC;AACA,CAAC,IAAI,cAAc,GAAG,GAAG,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,IAAI,KAAK,GAAG,IAAI,IAAI,cAAc,GAAG,EAAE,EAAE;AAC1C,EAAE,KAAK,GAAG,CAAC,CAAC;AACZ;AACA;AACA;AACA,EAAE,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE;AAC9B,GAAG,KAAK,GAAG,IAAI,CAAC;AAChB;AACA,GAAG,IAAI,WAAW,IAAI,CAAC,IAAI,OAAO,IAAI,GAAG;AACzC,IAAI,MAAM,GAAG,CAAC,CAAC;AACf;AACA,GAAG,IAAI,WAAW,IAAI,CAAC,IAAI,OAAO,IAAI,CAAC,GAAG;AAC1C,IAAI,MAAM,GAAG,CAAC,CAAC;AACf,GAAG;AACH,EAAE;AACF;AACA,CAAC,IAAI,YAAY,GAAG,KAAK,IAAI,SAAS,IAAI,GAAG,CAAC;AAC9C,CAAC,IAAI,GAAG,YAAY,KAAK,CAAC,YAAY,CAAC,CAAC;AACxC,CAAC,IAAI,IAAI,WAAW,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;AACxC;AACA,CAAC,IAAI,OAAO,IAAI,YAAY,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC;AAC5E,CAAC,IAAI,OAAO,IAAI,QAAQ,CAAC,WAAW,CAAC,IAAI,GAAG,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAClE,CAAC,IAAI,QAAQ,GAAG,IAAI,IAAI,OAAO,KAAK,WAAW,IAAI,CAAC,IAAI,WAAW,IAAI,CAAC,IAAI,OAAO,IAAI,OAAO,IAAI,WAAW,IAAI,CAAC,IAAI,OAAO,IAAI,OAAO,CAAC,GAAG,OAAO,GAAG,GAAG,CAAC;AAC1J,CAAC,IAAI,MAAM,KAAK,GAAG,CAAC,OAAO,EAAE,OAAO,GAAG,QAAQ,IAAI,IAAI,IAAI,QAAQ,GAAG,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;AACzG;AACA,CAAC,IAAI,OAAO,IAAI,YAAY,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC;AAC5E,CAAC,IAAI,OAAO,IAAI,QAAQ,CAAC,WAAW,CAAC,IAAI,GAAG,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAClE,CAAC,IAAI,QAAQ,GAAG,IAAI,IAAI,OAAO,KAAK,WAAW,IAAI,CAAC,IAAI,WAAW,IAAI,CAAC,IAAI,OAAO,IAAI,OAAO,IAAI,WAAW,IAAI,CAAC,IAAI,OAAO,IAAI,OAAO,CAAC,GAAG,OAAO,GAAG,CAAC,GAAG,CAAC;AAC3J,CAAC,IAAI,MAAM,KAAK,GAAG,CAAC,OAAO,EAAE,OAAO,GAAG,QAAQ,IAAI,IAAI,IAAI,QAAQ,GAAG,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;AACzG;AACA,CAAC,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,CAAC;AACpC,EAAE,MAAM,GAAG,GAAG,CAAC;AACf;AACA,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACzB,CAAC;AACD;AACA;AACA,MAAM,YAAY,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,GAAG,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC;AACrE,MAAM,MAAM,GAAG,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACtD;AACA,MAAM,CAAC,GAAG,IAAI,CAAC;AACf;AACO,MAAM,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;AAChB,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;AAClB,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;AACtB,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;AACtB,MAAM,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;AACpB,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;AAClB,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;AAClB,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;AAElB,MAAM,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;AACpB,MAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;AACtB,MAAM,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;AAC3B;AACO,MAAM,IAAI,IAAI,CAAC,CAAC,EAAE,SAAS,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;AAC1D,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,SAAS,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;AAClE;AACO,MAAM,GAAG,GAAG,QAAQ,CAAC;AAC5B;AACO,SAAS,YAAY,CAAC,CAAC,EAAE;AAChC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACrD,CAAC;AACD;AACO,SAAS,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE;AACvC,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;AAClC,CAAC;AACD;AACO,SAAS,QAAQ,CAAC,CAAC,EAAE;AAC5B,CAAC,OAAO,OAAO,CAAC,IAAI,UAAU,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC;AAC7C,CAAC;AACD;AACO,MAAM,IAAI,GAAG,MAAM,EAAE,CAAC;AAC7B;AACO,MAAM,OAAO,GAAG,EAAE,IAAI,EAAE,CAAC;AAChC;AACO,MAAM,OAAO,GAAG,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC;AACtC;AACO,MAAM,OAAO,GAAG,CAAC,IAAI,IAAI,CAAC;AACjC;AACO,MAAM,OAAO,GAAG,CAAC,IAAI,IAAI,CAAC;AACjC;AACO,MAAM,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACtC;AACA;AACA;AACA,MAAM,QAAQ,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;AACtC;AACO,SAAS,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE;AACrC,CAAC,OAAO,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACpD,CAAC;AACD;AACO,SAAS,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE;AACvC,CAAC,OAAO,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAChD,CAAC;AACD;AACO,SAAS,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE;AACvC,CAAC,OAAO,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AACjD,CAAC;AACD;AACA;AACA;AACO,SAAS,QAAQ,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE;AACvC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC;AACf,EAAE,OAAO,GAAG,CAAC;AACb;AACA;AACA;AACA,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC;AACnB,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;AAC1C,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACrB,CAAC;AAMD;AACO,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;AAClC;AACO,SAAS,QAAQ,CAAC,GAAG,EAAE;AAC9B,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC;AAC9C,CAAC;AACD;AACO,SAAS,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;AACtD,CAAC,IAAI,KAAK,GAAG,EAAE,CAAC;AAChB;AACA,CAAC,IAAI,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACnC;AACA,CAAC,KAAK,IAAI,GAAG,GAAG,MAAM,EAAE,GAAG,GAAG,MAAM,EAAE,GAAG,EAAE,EAAE;AAC7C,EAAE,IAAI,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;AACtB,EAAE,IAAI,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;AAC3C;AACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzC,GAAG,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AAC9B,GAAG,IAAI,GAAG,GAAG,CAAC,KAAK,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,KAAK,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACxF,GAAG,IAAI,IAAI,GAAG,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACnC,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AAC3B,GAAG;AACH,EAAE;AACF;AACA,CAAC,OAAO,KAAK,CAAC;AACd,CAAC;AACD;AACA;AACA;AACO,MAAM,SAAS,GAAG,EAAE,CAAC;AACrB,MAAM,SAAS,GAAG,EAAE,CAAC;AAC5B;AACO,MAAM,aAAa,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC1C;AACO,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;AAC5B,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC;AAC/B,MAAM,OAAO,GAAG,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC;AACzC;AACO,SAAS,KAAK,CAAC,CAAC,EAAE;AACzB,CAAC,OAAO,OAAO,CAAC,IAAI,QAAQ,CAAC;AAC7B,CAAC;AAUD;AACO,SAAS,KAAK,CAAC,CAAC,EAAE;AACzB,CAAC,IAAI,EAAE,GAAG,KAAK,CAAC;AAChB;AACA,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE;AAChB,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC;AACxB,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,MAAM,CAAC;AAChC,EAAE;AACF;AACA,CAAC,OAAO,EAAE,CAAC;AACX,CAAC;AACD;AACO,SAAS,SAAS,CAAC,CAAC,EAAE;AAC7B,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,OAAO,CAAC,IAAI,QAAQ,CAAC;AAC1C,CAAC;AACD;AACA,MAAM,UAAU,GAAG,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;AACrD;AACO,SAAS,IAAI,CAAC,CAAC,EAAE,MAAM,GAAG,KAAK,EAAE;AACxC,CAAC,IAAI,GAAG,CAAC;AACT;AACA,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;AACf,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC;AACnC;AACA,EAAE,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,EAAE;AACjC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;AACzB,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE;AACpC,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AAChC,GAAG;AACH;AACA,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;AACnB,EAAE;AACF,MAAM,IAAI,CAAC,YAAY,UAAU;AACjC,EAAE,GAAG,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;AAClB,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE;AACrB,EAAE,GAAG,GAAG,EAAE,CAAC;AACX,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC;AACjB,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AAC/B,EAAE;AACF;AACA,EAAE,GAAG,GAAG,CAAC,CAAC;AACV;AACA,CAAC,OAAO,GAAG,CAAC;AACZ,CAAC;AACD;AACO,SAAS,MAAM,CAAC,IAAI,EAAE;AAC7B,CAAC,IAAI,IAAI,GAAG,SAAS,CAAC;AACtB;AACA,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvC,EAAE,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB;AACA,EAAE,KAAK,IAAI,GAAG,IAAI,GAAG,EAAE;AACvB,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACvB,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACtC;AACA,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC/B,GAAG;AACH,EAAE;AACF;AACA,CAAC,OAAO,IAAI,CAAC;AACb,CAAC;AACD;AACA;AACA,MAAM,WAAW,GAAG,CAAC,CAAC;AACtB,MAAM,WAAW,GAAG,CAAC,CAAC;AACtB,MAAM,WAAW,GAAG,CAAC,CAAC;AACtB;AACA;AACA,SAAS,UAAU,CAAC,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE;AACjD,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjE,EAAE,IAAI,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC5B;AACA,EAAE,IAAI,OAAO,GAAG,WAAW,EAAE;AAC7B,GAAG,EAAE,GAAG,OAAO,GAAG,CAAC,CAAC;AACpB,GAAG,OAAO,EAAE,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,IAAI;AACtC,IAAI,KAAK,CAAC,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC;AACvB;AACA,GAAG,EAAE,GAAG,OAAO,GAAG,CAAC,CAAC;AACpB,GAAG,OAAO,EAAE,GAAG,UAAU,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,IAAI;AAC9C,IAAI,KAAK,CAAC,WAAW,GAAG,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC;AACrC,GAAG;AACH,EAAE;AACF,CAAC;AACD;AACA;AACA;AACO,SAAS,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE;AACxC,CAAC,IAAI,cAAc,CAAC,MAAM,CAAC,EAAE;AAC7B;AACA;AACA,EAAE,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;AAChC;AACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;AACxC,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC;AACA,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACtB,GAAG,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC3B;AACA,EAAE,OAAO,KAAK,CAAC;AACf,EAAE;AACF;AACA,CAAC,IAAI,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;AACvB;AACA,CAAC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;AAC5C,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AACrB,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;AACtB;AACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE;AAC9B,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,EAAE;AACF;AACA,CAAC,IAAI,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACtD;AACA,CAAC,IAAI,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACjC;AACA,CAAC,IAAI,KAAK,GAAG,IAAI,GAAG,EAAE,CAAC;AACvB;AACA,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE;AACpC,EAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3B;AACA,CAAC,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;AAC5C,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AACrB,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB;AACA,EAAE,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;AACxC,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AAClB;AACA,GAAG,IAAI,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACjD;AACA,GAAG,IAAI,QAAQ,GAAG,SAAS,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC;AAC9D;AACA,GAAG,IAAI,QAAQ,GAAG,EAAE,CAAC;AACrB;AACA,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACvC,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AACrB,IAAI,IAAI,UAAU,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC;AACA,IAAI,IAAI,IAAI,KAAK,IAAI,EAAE;AACvB,KAAK,IAAI,QAAQ,IAAI,WAAW,EAAE;AAClC,MAAM,KAAK,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;AAC/B;AACA,MAAM,IAAI,QAAQ,IAAI,WAAW;AACjC,OAAO,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACjC,MAAM;AACN,KAAK;AACL;AACA,KAAK,KAAK,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;AAC9B,IAAI;AACJ;AACA,GAAG,UAAU,CAAC,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;AAC3C;AACA,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACpB,GAAG;AACH,EAAE;AACF;AACA,CAAC,OAAO,IAAI,CAAC;AACb,CAAC;AACD;AACO,MAAM,SAAS,GAAG,OAAO,cAAc,IAAI,WAAW,GAAG,EAAE,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC;AAClH;AACA;AACA,SAAS,QAAQ,CAAC,KAAK,EAAE;AACzB,CAAC,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;AACxB;AACA,CAAC,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;AACxB,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;AACrC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACd;AACA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5C;AACA,CAAC,IAAI,MAAM,GAAG,EAAE,CAAC;AACjB,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxC,EAAE,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACrB,EAAE,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;AACzB;AACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE;AAC/B,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B;AACA,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACpB,EAAE;AACF;AACA,CAAC,OAAO,MAAM,CAAC;AACf,CAAC;AACD;AACA;AACA,SAAS,cAAc,CAAC,MAAM,EAAE;AAChC,CAAC,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;AACzB;AACA,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzC,EAAE,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B;AACA,EAAE,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI;AAC1B,GAAG,OAAO,KAAK,CAAC;AAChB;AACA,EAAE,IAAI,KAAK,IAAI,KAAK,EAAE;AACtB,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;AAClC,IAAI,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;AAC5B,KAAK,OAAO,KAAK,CAAC;AAClB,IAAI;AACJ,GAAG;AACH,EAAE;AACF;AACA,CAAC,OAAO,IAAI,CAAC;AACb,CAAC;AACD;AACA,SAAS,KAAK,CAAC,IAAI,EAAE,OAAO,GAAG,GAAG,EAAE;AACpC,CAAC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;AACzB;AACA;AACA,CAAC,IAAI,GAAG,IAAI,CAAC;AACb,EAAE,OAAO,IAAI,CAAC;AACd;AACA;AACA,CAAC,IAAI,QAAQ,GAAG,CAAC,CAAC;AAClB,CAAC,IAAI,OAAO,GAAG,GAAG,GAAG,CAAC,CAAC;AACvB;AACA,CAAC,OAAO,QAAQ,IAAI,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI;AACrD,EAAE,QAAQ,EAAE,CAAC;AACb;AACA,CAAC,OAAO,OAAO,IAAI,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,IAAI;AACpD,EAAE,OAAO,EAAE,CAAC;AACZ;AACA;AACA,CAAC,IAAI,OAAO,IAAI,QAAQ;AACxB,EAAE,OAAO,IAAI,CAAC;AACd;AACA,CAAC,MAAM,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,OAAO,GAAG,QAAQ,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC;AAClE;AACA,CAAC,KAAK,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,QAAQ,GAAG,MAAM,EAAE,CAAC,IAAI,OAAO,EAAE,CAAC,IAAI,MAAM,EAAE;AACtF,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACpB;AACA,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE;AACjB,GAAG,IAAI,CAAC,IAAI,OAAO;AACnB,IAAI,OAAO,KAAK,CAAC;AACjB;AACA,GAAG,OAAO,GAAG,CAAC,CAAC;AACf,GAAG;AACH,EAAE;AACF;AACA,CAAC,OAAO,IAAI,CAAC;AACb;;ACznBA,MAAM,MAAM,GAAG;AACf,CAAC,SAAS;AACV,CAAC,UAAU;AACX,CAAC,OAAO;AACR,CAAC,OAAO;AACR,CAAC,KAAK;AACN,CAAC,MAAM;AACP,CAAC,MAAM;AACP,CAAC,QAAQ;AACT,CAAC,WAAW;AACZ,CAAC,SAAS;AACV,CAAC,UAAU;AACX,CAAC,UAAU;AACX,CAAC,CAAC;AACF;AACA,MAAM,IAAI,GAAG;AACb,CAAC,QAAQ;AACT,CAAC,QAAQ;AACT,CAAC,SAAS;AACV,CAAC,WAAW;AACZ,CAAC,UAAU;AACX,CAAC,QAAQ;AACT,CAAC,UAAU;AACX,CAAC,CAAC;AACF;AACA,SAAS,MAAM,CAAC,GAAG,EAAE;AACrB,CAAC,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACxB,CAAC;AACD;AACA,MAAM,KAAK,GAAgB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC5C;AACA,MAAM,OAAO,GAAgB,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAChD;AACA,MAAM,QAAQ,GAAG;AACjB,CAAC,IAAI,EAAE,MAAM;AACb,CAAC,GAAG,GAAG,OAAO;AACd,CAAC,IAAI,EAAE,IAAI;AACX,CAAC,GAAG,GAAG,KAAK;AACZ,CAAC,CAAC;AACF;AACA,SAAS,QAAQ,CAAC,GAAG,EAAE;AACvB,CAAC,OAAO,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,CAAC;AACpC,CAAC;AACD;AACA,SAAS,QAAQ,CAAC,GAAG,EAAE;AACvB,CAAC,OAAO,CAAC,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,IAAI,GAAG,CAAC;AACvD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAI,GAAG;AACb;AACA,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE;AAC3B;AACA,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;AACxC;AACA,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,KAAK,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC7C;AACA,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,KAAK,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;AAC3C;AACA,CAAC,EAAE,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;AACnC;AACA,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;AACxB;AACA,CAAC,EAAE,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;AAChC;AACA,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE;AACrB;AACA,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,KAAK,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;AAC3C;AACA,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,KAAK,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;AACzC;AACA,CAAC,EAAE,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;AACjC;AACA,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE;AACtB;AACA,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AAC3E;AACA,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI;AAC3C;AACA,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI;AAC3C;AACA,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,EAAE,GAAG,GAAG,GAAG,GAAG;AACxC;AACA,CAAC,EAAE,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;AACnC;AACA,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE;AACxB;AACA,CAAC,EAAE,GAAG,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC;AACnC;AACA,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE;AACxB;AACA,CAAC,GAAG,EAAE,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;AACxC,CAAC,CAAC;AACF;AACO,SAAS,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE;AACpC,CAAC,KAAK,GAAG,KAAK,IAAI,QAAQ,CAAC;AAC3B,CAAC,IAAI,KAAK,GAAG,EAAE,CAAC;AAChB;AACA,CAAC,IAAI,CAAC,GAAG,sBAAsB,EAAE,CAAC,CAAC;AACnC;AACA,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;AACvB,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD;AACA,CAAC,OAAO,CAAC,IAAI;AACb,EAAE,IAAI,GAAG,GAAG,EAAE,CAAC;AACf;AACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;AACvC,GAAG,GAAG,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,IAAI,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AACtE;AACA,EAAE,OAAO,GAAG,CAAC;AACb,EAAE;AACF,CAAC;AACD;AACA,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC;AACrE;AACA;AACO,SAAS,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE;AACjC,CAAC,IAAI,KAAK,CAAC;AACX;AACA;AACA,CAAC,IAAI,EAAE,IAAI,KAAK,IAAI,EAAE,IAAI,SAAS;AACnC,EAAE,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,EAAE,GAAG,GAAG,CAAC,CAAC;AAC3D,MAAM,IAAI,EAAE,IAAI,OAAO;AACvB,EAAE,KAAK,GAAG,IAAI,CAAC;AACf,MAAM;AACN,EAAE,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AACjE,EAAE,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;AAChD,EAAE;AACF;AACA,CAAC,OAAO,KAAK,CAAC;AACd;;ACtGA;AACA;AACA;AACA;AACA,MAAM,SAAS,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAClC;AACA,MAAM,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC7B;AACA;AACO,MAAM,QAAQ,GAAG,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;AACvD;AACA;AACO,MAAM,QAAQ,GAAG,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;AACtD;AACA;AACO,MAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACrD;AACO,MAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAClD;AACA,MAAM,EAAE,GAAG,IAAI,CAAC;AAChB;AACA,MAAM,IAAI,MAAM,QAAQ,CAAC;AACzB,MAAM,MAAM,IAAI,EAAE,GAAG,IAAI,CAAC;AAC1B,MAAM,EAAE,QAAQ,SAAS,CAAC;AAC1B,MAAM,IAAI,MAAM,EAAE,GAAG,EAAE,CAAC;AACxB,MAAM,MAAM,IAAI,IAAI,GAAG,OAAO,CAAC;AAC/B;AACA,MAAM,EAAE,QAAQ,MAAM,CAAC;AACvB,MAAM,GAAG,OAAO,UAAU,CAAC;AAC3B,MAAM,KAAK,KAAK,GAAG,GAAG,EAAE,CAAC;AACzB,MAAM,OAAO,GAAG,EAAE,GAAG,KAAK,CAAC;AAC3B,MAAM,EAAE,QAAQ,OAAO,CAAC;AACxB;AACA,MAAM,CAAC,GAAG,IAAI,CAAC;AACf;AACA,SAAS,aAAa,CAAC,EAAE,EAAE;AAC3B,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,GAAG;AAClB,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE;AACd,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE;AACd,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE;AACd,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE;AACd,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC;AAChB;AACA;AACA,CAAC,IAAI,WAAW,GAAG,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;AAC5G;AACA,CAAC,IAAI,SAAS,GAAG,WAAW,CAAC,MAAM,CAAC;AACpC;AACA,EAAE,CAAC;AACH,EAAE,CAAC,GAAG,CAAC;AACP,EAAE,CAAC,GAAG,EAAE;AACR,EAAE,CAAC,GAAG,EAAE;AACR,EAAE,CAAC,GAAG,EAAE;AACR;AACA,EAAE,CAAC;AACH,EAAE,CAAC,GAAG,CAAC;AACP,EAAE,CAAC,GAAG,EAAE;AACR,EAAE,CAAC,GAAG,EAAE;AACR,EAAE,CAAC,GAAG,EAAE;AACR;AACA,EAAE,CAAC;AACH,EAAE,CAAC,GAAG,CAAC;AACP,EAAE,CAAC,GAAG,CAAC;AACP,EAAE,CAAC,GAAG,CAAC;AACP,EAAE,CAAC,GAAG,CAAC;AACP,EAAE,CAAC,GAAG,CAAC;AACP,EAAE,CAAC,GAAG,EAAE;AACR;AACA,EAAE,CAAC;AACH,EAAE,CAAC,GAAG,CAAC;AACP,EAAE,CAAC,GAAG,CAAC;AACP,EAAE,CAAC,GAAG,CAAC;AACP,EAAE,CAAC,GAAG,CAAC;AACP,EAAE,CAAC,GAAG,CAAC;AACP,EAAE,CAAC,GAAG,CAAC;AACP,EAAE,CAAC,GAAG,CAAC;AACP,EAAE,CAAC,GAAG,CAAC;AACP,EAAE,CAAC,GAAG,EAAE;AACR,EAAE,CAAC,GAAG,EAAE;AACR;AACA,EAAE,EAAE;AACJ,EAAE,EAAE,GAAG,CAAC;AACR,EAAE,EAAE,GAAG,CAAC;AACR,EAAE,EAAE,GAAG,CAAC;AACR,EAAE,EAAE,GAAG,CAAC;AACR;AACA,EAAE,CAAC;AACH,EAAE,CAAC,GAAG,CAAC;AACP,EAAE,CAAC,GAAG,CAAC;AACP,EAAE,CAAC,GAAG,EAAE;AACR,EAAE,CAAC,GAAG,EAAE;AACR,EAAE,CAAC,GAAG,EAAE;AACR,EAAE,CAAC,GAAG,GAAG;AACT,EAAE,CAAC,CAAC;AACJ;AACA;AACA;AACA;AACA;AACA,CAAC,MAAM,eAAe,GAAG;AACzB;AACA,EAAE,CAAC,CAAC,YAAY,IAAI,aAAa,CAAC,uBAAuB,CAAC,OAAO,CAAC,qBAAqB,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AACpH,EAAE,CAAC,CAAC,GAAG,EAAE,OAAO,OAAO,UAAU,MAAM,kBAAkB,CAAC,OAAO,CAAC,qBAAqB,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AACpH,EAAE,CAAC,CAAC,YAAY,EAAE,eAAe,MAAM,kBAAkB,CAAC,OAAO,CAAC,qBAAqB,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AACpH,EAAE,CAAC,CAAC,YAAY,KAAK,GAAG,EAAE,OAAO,MAAM,kBAAkB,CAAC,OAAO,IAAI,kBAAkB,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AACpH,EAAE,CAAC,CAAC,YAAY,KAAK,YAAY,MAAM,kBAAkB,CAAC,OAAO,IAAI,kBAAkB,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AACpH,EAAE,CAAC,CAAC,YAAY,EAAE,eAAe,MAAM,GAAG,GAAG,GAAG,KAAK,IAAI,CAAC,OAAO,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,CAAC,OAAO,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAC;AACpH,EAAE,CAAC,EAAE,WAAW,EAAE,GAAG,QAAQ,IAAI,MAAM,GAAG,GAAG,GAAG,KAAK,IAAI,CAAC,OAAO,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,CAAC,OAAO,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAC;AACpH,EAAE,CAAC;AACH;AACA;AACA;AACA;AACA;AACA,CAAC,SAAS,cAAc,CAAC,MAAM,EAAE;AACjC,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,KAAK;AACvE,GAAG,IAAI,MAAM,GAAG,EAAE,CAAC;AACnB,GAAG,IAAI,IAAI,GAAG,SAAS,IAAI,CAAC,CAAC;AAC7B,GAAG,IAAI,IAAI,GAAG,SAAS,IAAI,EAAE,IAAI,SAAS,GAAG,CAAC,CAAC;AAC/C;AACA;AACA,GAAG,IAAI,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AAClC,GAAG,IAAI,SAAS,GAAG,QAAQ,CAAC,OAAO,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;AAC7C;AACA;AACA,GAAG,IAAI,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,IAAI,GAAG,CAAC,GAAG,OAAO,CAAC,QAAQ,EAAE,EAAE,IAAI,IAAI,IAAI,GAAG,CAAC,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;AACnH,GAAG,IAAI,QAAQ,GAAG,QAAQ,CAAC,MAAM,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;AAC3C;AACA,GAAG,IAAI,IAAI,IAAI,IAAI,EAAE;AACrB,IAAI,IAAI,MAAM,GAAG,IAAI,GAAG,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC;AAC3C,IAAI,IAAI,MAAM,GAAG,IAAI,GAAG,SAAS,GAAG,CAAC,IAAI,CAAC,CAAC;AAC3C;AACA,IAAI,IAAI,KAAK,GAAG,SAAS,IAAI,QAAQ,GAAG,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,GAAG,MAAM,EAAE,MAAM,CAAC,QAAQ,EAAE,GAAG,MAAM,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;AAC3I,IAAI,IAAI,SAAS,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC;AAChD,IAAI,IAAI,QAAQ,GAAG,SAAS,CAAC,WAAW,EAAE,CAAC;AAC3C,IAAI,IAAI,SAAS,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;AACzC;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,IAAI,QAAQ,EAAE,CAAC,EAAE,EAAE;AAC5C,KAAK,IAAI,IAAI,GAAG,MAAM,CAAC,QAAQ,GAAG,MAAM,GAAG,CAAC,EAAE,SAAS,GAAG,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AACzE,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AACtD;AACA,KAAK,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;AAC9C;AACA,KAAK,IAAI,KAAK,IAAI,QAAQ;AAC1B,MAAM,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzB,KAAK;AACL,IAAI;AACJ,QAAQ;AACR,IAAI,IAAI,KAAK,GAAG,SAAS,IAAI,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;AAC/C,IAAI,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;AACtD,IAAI,IAAI,KAAK,GAAG,QAAQ,GAAG,QAAQ,GAAG,WAAW,CAAC,SAAS,GAAG,QAAQ,EAAE,KAAK,CAAC,CAAC;AAC/E,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACvB;AACA,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AAC9B;AACA,IAAI,IAAI,QAAQ,GAAG,KAAK,CAAC,QAAQ,EAAE,IAAI,KAAK,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC;AAC1F,IAAI,IAAI,SAAS,GAAG,SAAS,GAAG,CAAC,CAAC;AAClC;AACA,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC;AAC7C,IAAI,IAAI,QAAQ,GAAG,UAAU,GAAG,QAAQ,CAAC;AACzC;AACA,IAAI,OAAO,CAAC,EAAE;AACd,KAAK,KAAK,GAAG,QAAQ,CAAC,KAAK,GAAG,SAAS,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AAC1D;AACA,KAAK,IAAI,KAAK,GAAG,QAAQ;AACzB,MAAM,MAAM;AACZ;AACA,KAAK,IAAI,SAAS,GAAG,CAAC,EAAE;AACxB,MAAM,IAAI,YAAY,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,GAAG,SAAS,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACvE,MAAM,IAAI,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AACpC,MAAM,IAAI,UAAU,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;AAC5C;AACA,MAAM,IAAI,QAAQ,GAAG,UAAU,GAAG,YAAY,CAAC;AAC/C;AACA,MAAM,IAAI,QAAQ,GAAG,CAAC;AACtB,OAAO,QAAQ,GAAG,CAAC,CAAC,CAAC;AACrB;AACA,MAAM,KAAK,IAAI,QAAQ,GAAG,CAAC,CAAC;AAC5B;AACA,MAAM,QAAQ,GAAG,CAAC,QAAQ,GAAG,SAAS,IAAI,EAAE,CAAC;AAC7C;AACA;AACA,MAAM,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAChD,MAAM,IAAI,OAAO,GAAG,QAAQ,CAAC,CAAC,KAAK,GAAG,SAAS,IAAI,SAAS,EAAE,CAAC,CAAC,CAAC;AACjE;AACA,MAAM,IAAI,OAAO,GAAG,QAAQ,IAAI,EAAE;AAClC,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1B,MAAM;AACN;AACA,MAAM,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzB,KAAK;AACL,IAAI;AACJ;AACA,GAAG,OAAO,MAAM,CAAC;AACjB,GAAG;AACH,EAAE;AACF;AACA,CAAC,OAAO;AACR,EAAE,SAAS;AACX,EAAE,eAAe;AACjB,EAAE,cAAc;AAChB,EAAE,CAAC;AACH,CAAC;AACD;AACO,MAAM,EAAE,WAAW,EAAE,iBAAiB,EAAE,gBAAgB,EAAE,GAAgB,aAAa,CAAC,CAAC,CAAC,CAAC;AAC3F,MAAM,EAAE,UAAU,GAAG,gBAAgB,GAAG,eAAe,GAAG,GAAgB,aAAa,CAAC,IAAI,CAAC,CAAC;AACrG;AACA;AACiB,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,cAAc,CAAC,QAAQ,EAAE,OAAO,EAAE;AAClD,CAAC,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;AACrC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACjF,EAAE,CAAC,CAAC;AACJ,CAAC;AACD;AACA;AACA;AACO,SAAS,YAAY,CAAC,MAAM,EAAE,MAAM,EAAE;AAC7C,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,KAAK;AAC1D,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC3E;AACA;AACA,EAAE,IAAI,QAAQ,CAAC;AACf,EAAE,IAAI,QAAQ,CAAC;AACf,EAAE,IAAI,QAAQ,CAAC;AACf,EAAE,IAAI,QAAQ,CAAC;AACf,EAAE,IAAI,QAAQ,CAAC;AACf,EAAE,IAAI,QAAQ,CAAC;AACf;AACA,EAAE,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI;AAC7B,GAAG,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AAC5B;AACA,GAAG,IAAI,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AACpC,GAAG,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;AACjC,GAAG,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;AAChC,GAAG,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;AACjC,GAAG,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AACnC,GAAG,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AACnC;AACA,GAAG,IAAI,KAAK;AACZ,IAAI,OAAO,IAAI,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B,IAAI,OAAO,IAAI,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B,IAAI,OAAO,IAAI,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B,IAAI,OAAO,IAAI,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B,IAAI,OAAO,IAAI,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B,IAAI,OAAO,IAAI,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B,2BAA2B,CAAC,CAAC,CAAC,CAAC;AAC/B,IAAI,CAAC;AACL;AACA,GAAG,QAAQ,GAAG,OAAO,CAAC;AACtB,GAAG,QAAQ,GAAG,OAAO,CAAC;AACtB,GAAG,QAAQ,GAAG,OAAO,CAAC;AACtB,GAAG,QAAQ,GAAG,OAAO,CAAC;AACtB,GAAG,QAAQ,GAAG,OAAO,CAAC;AACtB,GAAG,QAAQ,GAAG,OAAO,CAAC;AACtB;AACA,GAAG,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC;AACtB,GAAG,CAAC,CAAC;AACL,EAAE;AACF,CAAC;AACD;AACA;AACO,SAAS,WAAW,CAAC,MAAM,EAAE,OAAO,EAAE;AAC7C,CAAC,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC9B,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,KAAK,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACpG,CAAC;AACD;AACA,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AACzB,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1B,CAAC;AACD;AACO,SAAS,eAAe,CAAC,QAAQ,EAAE,OAAO,EAAE;AACnD,CAAC,OAAO,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC1B,CACA;AACO,MAAM,gBAAgB,GAAG,+BAA+B,CAAC;AAChE;AACO,SAAS,aAAa,CAAC,MAAM,EAAE,KAAK,EAAE;AAC7C,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,KAAK,OAAO,IAAI,IAAI,GAAG,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9F,CAAC;AACD;AACO,SAAS,YAAY,CAAC,IAAI,EAAE,SAAS,EAAE;AAC9C,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AAChC,CAAC,OAAO,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,GAAG,IAAI,CAAC;AACvG,CAAC;AACD;AACO,SAAS,UAAU,CAAC,IAAI,EAAE,SAAS,EAAE;AAC5C,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACrD,CAAC;AACD;AACO,MAAM,UAAU,GAAG;AAC1B,CAAC,IAAI,EAAE,IAAI;AACX,CAAC,IAAI,EAAE,IAAI;AACX,CAAC,OAAO,EAAE,KAAK;AACf,CAAC,KAAK,EAAE,IAAI;AACZ,CAAC,OAAO,EAAE;AACV,EAAE,IAAI,EAAE,IAAI;AACZ,EAAE,KAAK,EAAE,CAAC;AACV,EAAE,MAAM,EAAE,YAAY;AACtB,EAAE,IAAI,EAAE,UAAU;AAClB,EAAE,IAAI,EAAE,OAAO;AACf,EAAE;AACF,CAAC,GAAG,EAAE,IAAI;AACV,CAAC,IAAI,EAAE,IAAI;AACX,CAAC,MAAM,EAAE,EAAE;AACX,CAAC,CAAC;AACF;AACA,SAAS,eAAe,CAAC,IAAI,EAAE,EAAE,EAAE;AACnC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AAC5B;AACA,CAAC,IAAI,EAAE,GAAG,QAAQ,EAAE,CAAC;AACrB;AACA,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAC7B,CAAC,UAAU,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AAC7B,CAAC,UAAU,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AAC9B;AACA,CAAC,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;AACrB,CAAC,UAAU,CAAC,EAAE,EAAE,YAAY,EAAE,GAAG,CAAC,CAAC;AACnC,CAAC,UAAU,CAAC,EAAE,EAAE,WAAW,EAAE,GAAG,CAAC,CAAC;AAClC;AACA,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;AACrC,CAAC,KAAK,IAAI,UAAU,CAAC,EAAE,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AAC/C;AACA,CAAC,OAAO,EAAE,CAAC;AACX,CAAC;AACD;AACA,SAAS,eAAe,CAAC,IAAI,EAAE,EAAE,EAAE;AACnC,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC;AACjC,CAAC,OAAO,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,OAAO,CAAC;AAC/B,CAAC;AACD;AACA,SAAS,iBAAiB,CAAC,IAAI,EAAE,EAAE,EAAE;AACrC,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC;AACjC,CAAC,OAAO,EAAE,CAAC,OAAO,IAAI,EAAE,CAAC,KAAK,CAAC;AAC/B,CAAC;AACD;AACA,SAAS,eAAe,CAAC,IAAI,EAAE,EAAE,EAAE;AACnC,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC;AACjC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;AAChB,CAAC;AACD;AACA,SAAS,OAAO,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE;AAC7C,CAAC,OAAO,SAAS,CAAC;AAClB,CAAC;AACD;AACA,MAAM,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB;AACA,SAAS,UAAU,CAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE;AACjD,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;AAC3B,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;AAC1B,CAAC,OAAO,SAAS,CAAC;AAClB,CAAC;AACD;AACA,SAAS,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,GAAG,IAAI,EAAE;AACvD,CAAC,OAAO,CAAC,IAAI;AACb,EAAE,CAAC,CAAC,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;AAChE,EAAE,CAAC;AACH,CAAC;AACD;AACA,SAAS,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,GAAG,IAAI,EAAE;AACvD,CAAC,OAAO,CAAC,IAAI;AACb,EAAE,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,MAAM,IAAI,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;AAC/C,EAAE,CAAC;AACH,CAAC;AACD;AACO,MAAM,UAAU,GAAG;AAC1B,CAAC,IAAI,EAAE,IAAI;AACX,CAAC,CAAC,EAAE,IAAI;AACR,CAAC,CAAC,EAAE,IAAI;AACR,CAAC,IAAI,EAAE,KAAK;AACZ,CAAC,IAAI,EAAE,UAAU;AACjB,CAAC,MAAM,EAAE;AACT,EAAE,IAAI,IAAI,eAAe;AACzB,EAAE,IAAI,IAAI,eAAe;AACzB,EAAE,KAAK,GAAG,CAAC;AACX,EAAE,MAAM,EAAE,iBAAiB;AAC3B,EAAE,IAAI,IAAI,eAAe;AACzB,EAAE;AACF;AACA,CAAC,IAAI,EAAE;AACP,EAAE,SAAS,IAAI,QAAQ;AACvB,EAAE,OAAO,MAAM,QAAQ;AACvB,EAAE,KAAK,QAAQ,QAAQ;AACvB,EAAE,QAAQ,KAAK,QAAQ;AACvB;AACA,EAAE,SAAS,IAAI,QAAQ;AACvB,EAAE,UAAU,GAAG,QAAQ;AACvB,EAAE,UAAU,GAAG,QAAQ;AACvB,EAAE;AACF;AACA,CAAC,IAAI,EAAE;AACP,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,CAAC,EAAE,IAAI;AACT,EAAE,CAAC,EAAE,KAAK;AACV,EAAE,IAAI,EAAE,CAAC;AACT,EAAE,GAAG,EAAE,IAAI;AACX,EAAE,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK;AACtB;AACA,GAAG,CAAC,CAAC,eAAe,EAAE,CAAC;AACvB,GAAG,CAAC,CAAC,wBAAwB,EAAE,CAAC;AAChC,GAAG;AACH,EAAE,EAAE,EAAE,KAAK;AACX,EAAE,EAAE,EAAE,KAAK;AACX,EAAE;AACF;AACA,CAAC,KAAK,EAAE;AACR,EAAE,IAAI,EAAE,CAAC,CAAC;AACV,EAAE,IAAI,EAAE,CAAC;AACT,EAAE;AACF;AACA,CAAC,IAAI,EAAE,CAAC,EAAE;AACV,CAAC,GAAG,EAAE,CAAC,EAAE;AACT,CAAC,GAAG,EAAE,IAAI;AACV,CAAC,OAAO;AACR,CAAC,IAAI,EAAE,IAAI;AACX;AACA,CAAC,KAAK,EAAE,IAAI;AACZ,CAAC,CAAC;AACF;AACA,MAAM,SAAS,GAAG;AAClB,CAAC,IAAI,EAAE,IAAI;AACX,CAAC,MAAM,EAAE,kBAAkB;AAC3B,CAAC,KAAK,EAAE,CAAC;AACT;AACA,CAAC,CAAC;AACF;AACA,MAAM,IAAI,GAAG,MAAM,CAAC,EAAE,EAAE,SAAS,EAAE;AACnC,CAAC,MAAM,EAAE,OAAO;AAChB,CAAC,CAAC,CAAC;AACH;AACA,MAAM,KAAK,GAAG,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE;AAC/B,CAAC,IAAI,EAAE,EAAE;AACT,CAAC,CAAC,CAAC;AACH;AACA,MAAM,MAAM,GAAG,MAAM,CAAC,EAAE,EAAE,SAAS,EAAE;AACrC,CAAC,IAAI,EAAE,KAAK;AACZ,CAAC,CAAC,CAAC;AACH;AACA,MAAM,IAAI,QAAQ,mLAAmL,CAAC;AACtM,MAAM,SAAS,GAAG,OAAO,GAAG,IAAI,CAAC;AACjC,MAAM,OAAO,GAAG,GAAG,CAAC;AACpB;AACO,MAAM,SAAS,GAAG;AACzB,CAAC,IAAI,EAAE,IAAI;AACX,CAAC,KAAK,EAAE,GAAG;AACX,CAAC,MAAM,EAAE,QAAQ;AACjB,CAAC,KAAK,EAAE,EAAE;AACV,CAAC,GAAG,EAAE,CAAC;AACP,CAAC,IAAI,EAAE,EAAE;AACT,CAAC,QAAQ,EAAE,CAAC;AACZ,CAAC,SAAS,EAAE,EAAE;AACd,CAAC,SAAS;AACV,CAAC,IAAI,EAAE,CAAC;AACR;AACA;AACA;AACA;AACA,CAAC,IAAI;AACL,CAAC,KAAK;AACN,CAAC,MAAM;AACP,CAAC,IAAI;AACL,CAAC,OAAO;AACR,CAAC,MAAM,EAAE,CAAC;AACV,CAAC,CAAC;AACF;AACO,MAAM,cAAc,GAAG,OAAO,CAAC;AAC/B,MAAM,eAAe,GAAG,MAAM,CAAC;AACtC;AACO,MAAM,WAAW,GAAG;AAC3B,CAAC,IAAI,EAAE,IAAI;AACX,CAAC,KAAK,EAAE,GAAG;AACX,CAAC,IAAI,EAAE,KAAK;AACZ,CAAC,MAAM,EAAE,CAAC;AACV;AACA;AACA;AACA;AACA,CAAC,GAAG,EAAE,GAAG;AACT,CAAC,GAAG,EAAE,CAAC,GAAG;AACV,CAAC,IAAI,EAAE,EAAE;AACT,CAAC,CAAC;AACF;AACO,SAAS,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE;AAC1E,CAAC,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC;AACD;AACO,SAAS,aAAa,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE;AAClG,CAAC,IAAI,MAAM,GAAG,EAAE,CAAC;AACjB;AACA,CAAC,IAAI,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC3C;AACA,CAAC,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,MAAM,CAAC,CAAC;AACrF;AACA,CAAC,KAAK,IAAI,GAAG,GAAG,QAAQ,EAAE,GAAG,IAAI,QAAQ,EAAE,GAAG,GAAG,QAAQ,CAAC,GAAG,GAAG,SAAS,EAAE,MAAM,CAAC;AAClF,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;AAC5C;AACA,CAAC,OAAO,MAAM,CAAC;AACf,CAAC;AACD;AACA;AACO,SAAS,aAAa,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE;AAClG,CAAC,MAAM,MAAM,GAAG,EAAE,CAAC;AACnB;AACA,CAAC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;AAC3D;AACA,CAAC,MAAM,KAAK,GAAG,OAAO,IAAI,EAAE,GAAG,KAAK,GAAG,IAAI,CAAC;AAC5C;AACA,CAAC,MAAM,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;AACpC;AACA,CAAC,SAAS,GAAG,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;AAC/B;AACA,CAAC,IAAI,OAAO,IAAI,EAAE,IAAI,GAAG,GAAG,CAAC;AAC7B,EAAE,SAAS,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC;AACxC;AACA,CAAC,IAAI,KAAK,GAAG,QAAQ,CAAC;AACtB;AACA,CAAC,GAAG;AACJ,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrB,EAAE,KAAK,GAAG,KAAK,GAAG,SAAS,CAAC;AAC5B;AACA,EAAE,IAAI,OAAO,IAAI,EAAE;AACnB,GAAG,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;AACpD;AACA,EAAE,IAAI,KAAK,IAAI,SAAS,GAAG,OAAO;AAClC,GAAG,SAAS,GAAG,KAAK,CAAC;AACrB;AACA,EAAE,QAAQ,KAAK,IAAI,QAAQ,EAAE;AAC7B;AACA,CAAC,OAAO,MAAM,CAAC;AACf,CAAC;AACD;AACO,SAAS,eAAe,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE;AACpG,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC;AAChD;AACA,CAAC,IAAI,SAAS,GAAG,EAAE,CAAC,KAAK,CAAC;AAC1B;AACA,CAAC,IAAI,SAAS,GAAG,QAAQ,GAAG,SAAS,GAAG,aAAa,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,EAAE,QAAQ,EAAE,SAA+B,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACxJ,CAAC,IAAI,IAAI,GAAG,QAAQ,IAAI,CAAC,IAAI,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACtD,CAAC,IAAI,SAAS,GAAG,QAAQ,GAAG,CAAC,SAAS,GAAG,aAAa,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,SAA+B,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;AAC1J;AACA,CAAC,OAAO,SAAS,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AACjE,CAAC;AACD;AACA,MAAM,MAAM,KAAK,GAAG,CAAC;AACrB,MAAM,QAAQ,GAAG,SAAS,CAAC;AAC3B,MAAM,MAAM,KAAK,OAAO,CAAC;AACzB,MAAM,IAAI,OAAO,GAAG,CAAC;AACrB;AACA,MAAM,KAAK,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;AACzK;AACO,SAAS,iBAAiB,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE;AAChF,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC/B,CAAC,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;AAC3B,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AAChC;AACA;AACA;AACA;AACA,CAAC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC9B;AACA,CAAC,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;AAC5B;AACA,CAAC,IAAI,GAAG,GAAG,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;AAClC;AACA,CAAC,IAAI,EAAE;AACP,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,GAAG,IAAI,QAAQ,GAAG,MAAM;AAClD,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,GAAG,IAAI,QAAQ,GAAG,QAAQ;AACpD,EAAE,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,GAAG,IAAI,QAAQ,GAAG,MAAM;AAClD,EAAE,IAAI;AACN,EAAE,CAAC;AACH;AACA,CAAC,IAAI,EAAE,IAAI,IAAI,EAAE;AACjB,EAAE,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC;AAClD;AACA,EAAE,IAAI,QAAQ,GAAG,QAAQ;AACzB,GAAG,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;AAC7F,EAAE;AACF;AACA,CAAC,OAAO,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACvC,CAAC;AACD;AACO,SAAS,gBAAgB,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE;AAC/E,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC/B,CAAC,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC;AAC3B,CAAC,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;AAC5B,CAAC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC9B;AACA,CAAC,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AACnE;AACA,CAAC,IAAI,QAAQ,GAAG,QAAQ;AACxB,EAAE,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;AACzF;AACA,CAAC,OAAO,MAAM,CAAC;AACf,CAAC;AACD;AACO,SAAS,YAAY,CAAC,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE;AAC5D,CAAC,OAAO,OAAO,IAAI,IAAI,GAAG,WAAW,GAAG,GAAG,IAAI,IAAI,GAAG,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACvE,CAAC;AACD;AACO,MAAM,SAAS,GAAG;AACzB,CAAC,IAAI,EAAE,IAAI;AACX,CAAC,KAAK,EAAE,GAAG;AACX,CAAC,MAAM,EAAE,QAAQ;AACjB,CAAC,KAAK,EAAE,EAAE;AACV,CAAC,GAAG,EAAE,CAAC;AACP,CAAC,IAAI,EAAE,EAAE;AACT,CAAC,QAAQ,EAAE,CAAC;AACZ,CAAC,SAAS,EAAE,EAAE;AACd,CAAC,SAAS;AACV,CAAC,IAAI,EAAE,CAAC;AACR;AACA;AACA;AACA;AACA,CAAC,IAAI;AACL,CAAC,KAAK;AACN,CAAC,MAAM;AACP,CAAC,IAAI;AACL,CAAC,OAAO;AACR,CAAC,MAAM,EAAE,CAAC;AACV,CAAC,CAAC;AACF;AACA;AACO,SAAS,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE;AACnC,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC;AAChC,CAAC,OAAO,QAAQ,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;AAChC,CAAC;AACD;AACA,SAAS,gBAAgB,CAAC,IAAI,EAAE,EAAE,EAAE;AACpC,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AACrD,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AACrD,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;AACxB;AACA,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AACzB;AACA,CAAC,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC;AAC/C,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC;AACpC,CAAC;AACD;AACA,MAAM,KAAK,GAAG;AACd,CAAC,KAAK,EAAE,IAAI;AACZ,CAAC,IAAI,EAAE,IAAI;AACX,CAAC,MAAM,EAAE,CAAC;AACV;AACA;AACA,CAAC,GAAG,EAAE,GAAG;AACT,CAAC,GAAG,EAAE,CAAC,GAAG;AACV,CAAC,CAAC;AACF;AACA,MAAM,IAAI,GAAG,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,KAAK,QAAQ,CAAC;AACjE;AACO,MAAM,YAAY,GAAG;AAC5B,CAAC,IAAI,EAAE,IAAI;AACX,CAAC,IAAI,EAAE,IAAI;AACX,CAAC,MAAM,EAAE,CAAC;AACV,CAAC,IAAI;AACL,CAAC,KAAK,EAAE,CAAC;AACT,CAAC,MAAM,EAAE;AACT,EAAE,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACjC,EAAE,MAAM,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACjC,EAAE;AACF,CAAC,CAAC;AACF;AACO,MAAM,WAAW,GAAG;AAC3B,CAAC,KAAK,EAAE,GAAG;AACX,CAAC,IAAI,EAAE,IAAI;AACX,CAAC,MAAM,EAAE,CAAC;AACV,CAAC,IAAI,EAAE,IAAI;AACX,CAAC,QAAQ,EAAE,KAAK;AAChB,CAAC,IAAI;AACL,CAAC,KAAK,EAAE,CAAC;AACT,CAAC,MAAM,EAAE;AACT,EAAE,IAAI,EAAE,gBAAgB;AACxB,EAAE,MAAM,EAAE,IAAI;AACd;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,CAAC,MAAM,EAAE,IAAI;AACb;AACA;AACA,CAAC,GAAG,EAAE,GAAG;AACT,CAAC,GAAG,EAAE,CAAC,GAAG;AACV,CAAC,IAAI,EAAE,EAAE;AACT;AACA,CAAC,IAAI,EAAE,IAAI;AACX,CAAC,IAAI,EAAE,IAAI;AACX,CAAC,CAAC;AACF;AACO,SAAS,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,OAAO,QAAQ,GAAG,EAAE,CAAC;AACtB,CAAC;AACD;AACO,MAAM,UAAU,GAAG;AAC1B,CAAC,IAAI,EAAE,SAAS;AAChB,CAAC,IAAI,EAAE,IAAI;AACX,CAAC,KAAK,EAAE,CAAC;AACT,CAAC,GAAG,EAAE,EAAE;AACR,CAAC,KAAK,EAAE,CAAC;AACT,CAAC,GAAG,EAAE,IAAI;AACV,CAAC,GAAG,EAAE,IAAI;AACV,CAAC,GAAG,EAAE,CAAC;AACP,CAAC,GAAG,EAAE,CAAC;AACP,CAAC,CAAC;AACF;AACO,MAAM,UAAU,GAAG,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE;AACjD,CAAC,IAAI,EAAE,KAAK;AACZ,CAAC,GAAG,EAAE,CAAC;AACP,CAAC,CAAC;;ACzwBK,MAAM,KAAK,GAAG,EAAE,CAAC;AACxB;AACO,SAAS,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE;AACjC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;AACpB;AACA,CAAC,IAAI,CAAC,CAAC,EAAE;AACT,EAAE,CAAC,GAAG;AACN,GAAG,GAAG;AACN,GAAG,KAAK,EAAE,EAAE;AACZ,GAAG,GAAG,CAAC,IAAI,EAAE;AACb,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACvB,IAAI;AACJ,GAAG,KAAK,CAAC,IAAI,EAAE;AACf,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC;AAC7C,IAAI;AACJ,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AAClC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;AAC3C,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACrE,IAAI;AACJ,GAAG,CAAC;AACJ;AACA,EAAE,IAAI,GAAG,IAAI,IAAI;AACjB,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAClB,EAAE;AACF;AACA,CAAC,OAAO,CAAC,CAAC;AACV;;ACxBO,MAAM,cAAc,KAAK,CAAC,IAAI,CAAC,CAAC;AAChC,MAAM,gBAAgB,GAAG,CAAC,IAAI,CAAC,CAAC;AACvC;AACO,SAAS,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,EAAE;AACzC,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;AACrB,CAAC,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACpC,CAAC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;AACvD,CAAC,MAAM,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;AACzB,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,IAAI,CAAC;AACvB;AACA,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;AACjB,EAAE,EAAE,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;AAC5C,EAAE,EAAE,GAAG,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AAC7E,EAAE,EAAE,GAAG,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;AACxE,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI;AACf,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG;AACd,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK;AAChB,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM;AACjB,EAAE,CAAC,GAAG,CAAC,CAAC,SAAS;AACjB,EAAE,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;AAClB;AACA,CAAC,QAAQ,EAAE,CAAC,GAAG,IAAI,CAAC;AACpB,IAAI,EAAE;AACN,GAAG,MAAM;AACT,GAAG,EAAE;AACL,GAAG,EAAE;AACL,GAAG,EAAE;AACL,GAAG,EAAE;AACL,GAAG,CAAC;AACJ,GAAG,CAAC;AACJ,GAAG,CAAC;AACJ,GAAG,CAAC;AACJ,GAAG,CAAC;AACJ,GAAG,CAAC;AACJ,GAAG,OAAO;AACV,GAAG,OAAO;AACV,GAAG,KAAK;AACR,GAAG,IAAI;AACP,GAAG,cAAc;AACjB,GAAG;AACH,IAAI,EAAE;AACN,GAAG,MAAM;AACT,GAAG,EAAE;AACL,GAAG,EAAE;AACL,GAAG,EAAE;AACL,GAAG,EAAE;AACL,GAAG,CAAC;AACJ,GAAG,CAAC;AACJ,GAAG,CAAC;AACJ,GAAG,CAAC;AACJ,GAAG,CAAC;AACJ,GAAG,CAAC;AACJ,GAAG,OAAO;AACV,GAAG,OAAO;AACV,GAAG,KAAK;AACR,GAAG,IAAI;AACP,GAAG,cAAc;AACjB,GAAG;AACH,GAAG;AACH,CAAC;AACD;AACO,SAAS,gBAAgB,CAAC,IAAI,EAAE,SAAS,EAAE;AAClD,CAAC,IAAI,OAAO,GAAG,CAAC,CAAC;AACjB;AACA;AACA,CAAC,IAAI,QAAQ,GAAG,CAAC,CAAC;AAClB;AACA,CAAC,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;AAC3C;AACA,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxC,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACnB;AACA;AACA,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,SAAS;AAC9B,GAAG,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC;AACnB;AACA,OAAO,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,SAAS,EAAE;AACrC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;AACjB,IAAI,QAAQ,IAAI,CAAC,CAAC;AAClB;AACA,IAAI,QAAQ,IAAI,CAAC,CAAC;AAClB,GAAG;AACH,EAAE;AACF;AACA,CAAC,OAAO;AACR,EAAE,OAAO;AACT;AACA,GAAG,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC;AACrB,GAAG,QAAQ,IAAI,CAAC,IAAI,CAAC;AACrB,GAAG,QAAQ,IAAI,CAAC,IAAI,CAAC;AACrB,oBAAoB,CAAC;AACrB;AACA,EAAE,CAAC;AACH,CAAC;AACD;AACO,SAAS,YAAY,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE;AAC7E,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACtB,CAAC,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACrC,CAAC,IAAI,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AAClE,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACnC;AACA,CAAC;AACD,EAAE,WAAW,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG;AAC/B,EAAE,WAAW,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG;AAC/B,EAAE,KAAK,CAAC,KAAK,KAAK,CAAC;AACnB,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG;AAC7B,GAAG,KAAK,CAAC,GAAG;AACZ,MAAM,CAAC;AACP,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACO,SAAS,YAAY,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE;AAC/E,CAAC,OAAO,MAAM,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,KAAK;AACxH,EAAE,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAC/B;AACA,EAAE,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACtD,EAAE,MAAM,MAAM,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,OAAO,GAAG,OAAO,CAAC;AACrD;AACA,EAAE,IAAI,KAAK,EAAE,KAAK,CAAC;AACnB;AACA,EAAE,IAAI,GAAG,IAAI,CAAC,EAAE;AAChB,GAAG,KAAK,GAAG,IAAI,CAAC;AAChB,GAAG,KAAK,GAAG,IAAI,CAAC;AAChB,GAAG;AACH,OAAO;AACP,GAAG,KAAK,GAAG,IAAI,CAAC;AAChB,GAAG,KAAK,GAAG,IAAI,CAAC;AAChB,GAAG;AACH;AACA;AACA,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AAChE,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AAChE;AACA,EAAE,IAAI,EAAE,GAAG,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AAChE;AACA,EAAE,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,OAAO,IAAI,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AAC9F;AACA,EAAE,IAAI,IAAI,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;AACpC;AACA,EAAE,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;AAC3B,EAAE,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;AAC3B,EAAE,MAAM,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACvB;AACA,EAAE,OAAO,IAAI,CAAC;AACd,EAAE,CAAC,CAAC;AACJ,CAAC;AACD;AACO,SAAS,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE;AACxE,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC;AACjB;AACA;AACA,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AACtB,EAAE,IAAI,GAAG,IAAI,MAAM,EAAE,CAAC;AACtB;AACA,EAAE,MAAM,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;AACxC;AACA,EAAE,IAAI,UAAU,GAAG,OAAO,CAAC;AAC3B;AACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACnB;AACA,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;AACpB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;AAC9B;AACA,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,GAAG,OAAO,CAAC,CAAC;AACnE;AACA,IAAI,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,IAAI;AACJ,GAAG;AACH;AACA,EAAE,IAAI,CAAC,GAAG,OAAO,GAAG,OAAO,GAAG,UAAU,CAAC;AACzC;AACA;AACA,EAAE,IAAI,cAAc,GAAG,EAAE,CAAC;AAC1B;AACA,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE,OAAO,GAAG,cAAc,GAAG,CAAC,EAAE,CAAC,EAAE,OAAO,GAAG,OAAO,GAAG,cAAc,CAAC,CAAC;AACvG,EAAE;AACF;AACA,CAAC,OAAO,IAAI,CAAC;AACb,CAAC;AACD;AACO,SAAS,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE;AACzC,CAAC,IAAI,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACrC;AACA,CAAC,IAAI,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK;AACnC,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AACnB;AACA,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;AAC1B,CAAC;AACD;AACO,SAAS,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE;AACpE,CAAC,IAAI,IAAI,GAAG,EAAE,CAAC;AACf,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;AACrB;AACA,CAAC,KAAK,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,GAAG,EAAE;AACxE,EAAE,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AACnB;AACA,EAAE,IAAI,IAAI,KAAK,IAAI,EAAE;AACrB,GAAG,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;AACtB;AACA,GAAG,IAAI,GAAG,IAAI,CAAC,EAAE;AACjB,IAAI,OAAO,EAAE,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI;AACxC,KAAK,EAAE,GAAG,CAAC,CAAC;AACZ,IAAI;AACJ,QAAQ;AACR,IAAI,OAAO,EAAE,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI;AACxC,KAAK,EAAE,GAAG,CAAC,CAAC;AACZ,IAAI;AACJ;AACA,GAAG,IAAI,IAAI,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAChC,GAAG,IAAI,IAAI,GAAG,EAAE,IAAI,EAAE,GAAG,IAAI,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAClD;AACA;AACA;AACA,GAAG,IAAI,IAAI,GAAG,EAAE,GAAG,GAAG,CAAC;AACvB,GAAG,IAAI,KAAK,GAAG,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,GAAG,GAAG,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;AAClF;AACA;AACA;AACA,IAAI,IAAI,GAAG,KAAK,CAAC;AACjB;AACA,GAAG,IAAI,IAAI,GAAG,EAAE,GAAG,GAAG,CAAC;AACvB,GAAG,IAAI,KAAK,GAAG,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,GAAG,GAAG,GAAG,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;AAClF;AACA;AACA;AACA,IAAI,IAAI,GAAG,KAAK,CAAC;AACjB;AACA,GAAG,IAAI,IAAI,IAAI,IAAI;AACnB,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AAC5B,GAAG;AACH,EAAE;AACF;AACA,CAAC,OAAO,IAAI,CAAC;AACb,CAAC;AACD;AACO,SAAS,UAAU,CAAC,OAAO,EAAE;AACpC,CAAC,OAAO,OAAO,IAAI,CAAC,GAAG,OAAO,GAAG,OAAO,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;AACnF,CAAC;AAYD;AACA,SAAS,IAAI,CAAC,GAAG,EAAE;AACnB,CAAC,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC;AACtB,EAAE,OAAO;AACT,EAAE,OAAO,CAAC;AACV;AACA,CAAC,IAAI,KAAK,GAAG,GAAG,IAAI,CAAC;AACrB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAC,EAAE;AAC1D,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAC,EAAE,CAAC;AAC3D;AACA,CAAC,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC;AACpB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;AAC5C,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;AAC7C;AACA;AACA,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,OAAO,GAAG,CAAC,KAAK;AACpD,EAAE,IAAI,MAAM,IAAI,CAAC,IAAI,OAAO,IAAI,CAAC;AACjC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACvB,OAAO;AACP,GAAG,MAAM,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AACxC,GAAG,OAAO,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;AACxC;AACA;AACA,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,CAAC,CAAC;AAC5B,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC;AAC5C,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC;AAC7C,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;AACrC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;AACpC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC;AACjB,GAAG;AACH,EAAE,CAAC;AACH,CAAC;AACD;AACA;AACO,MAAM,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAE;AAChD,MAAM,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAE;AAChD,MAAM,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAE;AAChD,MAAM,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAE;AAChD,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACtB,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACtB,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,QAAQ,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC,GAAE;AAC5F,MAAM,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,QAAQ,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC,GAAE;AAC5F,MAAM,cAAc,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC;AACvH,MAAM,cAAc,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE;;ACtS7H;AACO,SAAS,MAAM,CAAC,IAAI,EAAE;AAC7B,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,KAAK;AAChD;AACA;AACA,EAAE,OAAO,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,KAAK;AACtH,GAAG,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC;AACpC;AACA,GAAG,IAAI,MAAM,EAAE,GAAG,CAAC;AACnB;AACA,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE;AACxB,IAAI,MAAM,GAAG,OAAO,CAAC;AACrB,IAAI,GAAG,GAAG,IAAI,CAAC;AACf,IAAI;AACJ,QAAQ;AACR,IAAI,MAAM,GAAG,OAAO,CAAC;AACrB,IAAI,GAAG,GAAG,IAAI,CAAC;AACf,IAAI;AACJ;AACA,GAAG,MAAM,KAAK,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,OAAO,EAAE,CAAC,CAAC,CAAC;AACrD;AACA,GAAG,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,CAAC,GAAG,OAAO,CAAC;AACxD,GAAG,IAAI,GAAG,GAAG,QAAQ,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AAClC;AACA,GAAG,IAAI,IAAI,GAAG,IAAI,MAAM,EAAE,CAAC;AAC3B,GAAG,IAAI,IAAI,GAAG,IAAI,MAAM,EAAE,CAAC;AAC3B;AACA,GAAG,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;AACjE;AACA,GAAG,KAAK,CAAC,IAAI;AACb,IAAI,GAAG,GAAG,GAAG;AACb,IAAI,GAAG,GAAG,GAAG;AACb,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;AACjB,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;AACjB,IAAI,CAAC;AACL;AACA,GAAG,MAAM,SAAS,GAAG,EAAE,IAAI;AAC3B,IAAI,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE;AAC3B,KAAK,IAAI,CAAC,GAAG,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AAC/D,KAAK,IAAI,CAAC,GAAG,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AAC/D;AACA,KAAK,MAAM,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC;AAC9B,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;AACrC,KAAK;AACL,IAAI,CAAC;AACL;AACA,GAAG,IAAI,QAAQ;AACf,IAAI,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AAChC,QAAQ;AACR,IAAI,KAAK,IAAI,EAAE,GAAG,IAAI,EAAE,EAAE,IAAI,IAAI,EAAE,EAAE,EAAE;AACxC,KAAK,SAAS,CAAC,EAAE,CAAC,CAAC;AACnB,IAAI;AACJ;AACA,GAAG,OAAO;AACV,IAAI,MAAM,EAAE,KAAK,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI;AACnC,IAAI,IAAI;AACR,IAAI,IAAI;AACR,IAAI,KAAK,EAAE,cAAc,GAAG,gBAAgB;AAC5C,IAAI,CAAC;AACL,GAAG,CAAC,CAAC;AACL,EAAE,CAAC;AACH;;AC9DA,SAAS,QAAQ,CAAC,MAAM,EAAE;AAC1B,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,KAAK;AACjD,EAAE,IAAI,IAAI,IAAI,IAAI,EAAE;AACpB,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAClC,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC/B,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AAClC,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC/B;AACA,GAAG,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC9B,GAAG;AACH,EAAE,CAAC;AACH,CAAC;AACD;AACA,MAAM,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;AACnC,MAAM,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;AACnC;AACO,SAAS,MAAM,CAAC,IAAI,EAAE;AAC7B,CAAC,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;AAC9C;AACA,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,KAAK;AACtC,EAAE,OAAO,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,KAAK;AACtH,GAAG,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAChC;AACA,GAAG,IAAI,SAAS,GAAG,GAAG,IAAI,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AACtE,GAAG,IAAI,SAAS,GAAG,GAAG,IAAI,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AACtE;AACA,GAAG,IAAI,MAAM,EAAE,OAAO,CAAC;AACvB;AACA,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE;AACxB,IAAI,MAAM,GAAG,OAAO,CAAC;AACrB,IAAI,OAAO,GAAG,QAAQ,CAAC;AACvB,IAAI;AACJ,QAAQ;AACR,IAAI,MAAM,GAAG,OAAO,CAAC;AACrB,IAAI,OAAO,GAAG,QAAQ,CAAC;AACvB,IAAI;AACJ;AACA,GAAG,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACvD;AACA,GAAG,MAAM,MAAM,GAAG,CAAC,MAAM,EAAE,IAAI,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,cAAc,CAAC,CAAC;AAChH,GAAG,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAChC;AACA,GAAM,IAAC,IAAI,GAAG,GAAG,CAAC;AAClB,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC;AAChB,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAO,SAAS;AAC9B;AACA,GAAG,IAAI,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;AACvD;AACA;AACA,GAAG,IAAI,MAAM,GAAG,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;AACxD,GAAG,IAAI,MAAM,GAAG,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;AACxD,GAAG,IAAI,IAAI,MAAM,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AAC1C,GAAG,IAAI,IAAI,MAAM,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AAC1C;AACA,GAAG,IAAI,MAAM,GAAG,KAAK,CAAC;AACtB;AACA,GAAG,KAAK,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,GAAG,EAAE;AAC1E,IAAI,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACxB;AACA,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;AACnB,KAAK,IAAI,IAAI,IAAI,IAAI,EAAE;AACvB,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AAC7B;AACA,MAAM,IAAI,IAAI,IAAI,GAAG,EAAE;AACvB,OAAO,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AAC/B,OAAO,GAAG,GAAG,IAAI,CAAC;AAClB,OAAO;AACP;AACA,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC7B,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC7B,MAAM;AACN,UAAU;AACV,MAAM,IAAI,IAAI,KAAK,IAAI;AACvB,OAAO,MAAM,GAAG,IAAI,CAAC;AACrB,MAAM;AACN,KAAK;AACL,SAAS;AACT,KAAK,IAAI,IAAI,IAAI,GAAG,EAAE;AACtB,MAAM,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AACnD,MAAa,QAAQ,GAAG,IAAI,CAAC;AAC7B,MAAM;AACN;AACA,KAAK,IAAI,IAAI,IAAI,IAAI,EAAE;AACvB,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AAC7B,MAAM,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AAC9B,MAAM,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC;AAC/B,MAAM;AACN,UAAU;AACV,MAAM,IAAI,GAAG,GAAG,CAAC;AACjB,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC;AAClB;AACA,MAAM,IAAI,IAAI,KAAK,IAAI;AACvB,OAAO,MAAM,GAAG,IAAI,CAAC;AACrB,MAAM;AACN;AACA,KAAK,IAAI,GAAG,CAAC,CAAC;AACd,KAAK;AACL,IAAI;AACJ;AACA,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,QAAQ,IAAI,IAAI;AACtD,IAAI,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;AACjD;AACA,GAAG,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,gBAAgB,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;AACrE;AACA,GAAG,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,IAAI,WAAW,IAAI,CAAC,EAAE;AAChD,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;AAChD;AACA,IAAI,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;AACrF,IAAI,IAAI,OAAO,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC;AACvC;AACA,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AAChC,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AAChC,IAAI;AACJ;AACA,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;AACzB;AACA,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC;AAClB;AACA,IAAI,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;AAC1F;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACrE;AACA,IAAI,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACrE,IAAI;AACJ;AACA,GAAG,IAAI,WAAW,IAAI,CAAC,EAAE;AACzB,IAAI,MAAM,CAAC,IAAI,GAAG,WAAW,IAAI,CAAC,GAAG;AACrC,KAAK,YAAY,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;AACvD,KAAK,YAAY,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,GAAG,CAAC,CAAC;AACvD,KAAK,GAAG,YAAY,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;AACpE,IAAI;AACJ;AACA,GAAG,OAAO,MAAM,CAAC;AACjB,GAAG,CAAC,CAAC;AACL,EAAE,CAAC;AACH;;AC3IA;AACO,SAAS,OAAO,CAAC,IAAI,EAAE;AAC9B,CAAC,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AACrC;AACA,CAAC,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AAC7C,CAAC,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;AAC7C,CAAC,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC3C;AACA,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,KAAK;AACtC,EAAE,OAAO,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,KAAK;AACtH,GAAG,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAChC;AACA,GAAG,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;AAChC;AACA,GAAG,IAAI,SAAS,GAAG,GAAG,IAAI,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AACtE,GAAG,IAAI,SAAS,GAAG,GAAG,IAAI,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AACtE;AACA,GAAG,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,OAAO,GAAG,OAAO,CAAC;AACpD;AACA,GAAG,MAAM,MAAM,GAAG,CAAC,MAAM,EAAE,IAAI,MAAM,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,cAAc,CAAC,CAAC;AAChH,GAAG,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAChC;AACA,GAAG,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACvD;AACA,GAAG,IAAI,GAAG,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC;AAC5C,GAAG,IAAI,GAAG,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AAC5C;AACA,GAAG,IAAI,QAAQ,IAAI,SAAS,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;AAC5D,GAAG,IAAI,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;AAC5D,GAAG,IAAI,QAAQ,GAAG,SAAS,CAAC;AAC5B;AACA,GAAG,IAAI,YAAY,GAAG,SAAS,CAAC;AAChC;AACA,GAAG,IAAI,MAAM,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE;AAC9B,IAAI,YAAY,GAAG,IAAI,CAAC;AACxB,IAAI,MAAM,CAAC,MAAM,EAAE,YAAY,EAAE,QAAQ,CAAC,CAAC;AAC3C,IAAI;AACJ;AACA,GAAG,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;AACvC;AACA,GAAG,KAAK,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,GAAG,EAAE;AAC1E,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACzB;AACA,IAAI,IAAI,KAAK,IAAI,IAAI;AACrB,KAAK,SAAS;AACd;AACA,IAAI,IAAI,EAAE,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,IAAI,IAAI,EAAE,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC;AAC9B;AACA,IAAI,IAAI,KAAK,IAAI,CAAC;AAClB,KAAK,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;AAClC;AACA,KAAK,MAAM,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;AAClC;AACA,IAAI,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AAC3B;AACA,IAAI,QAAQ,GAAG,EAAE,CAAC;AAClB,IAAI,QAAQ,GAAG,EAAE,CAAC;AAClB,IAAI;AACJ;AACA,GAAG,IAAI,WAAW,GAAG,QAAQ,CAAC;AAC9B;AACA,GAAG,IAAI,MAAM,IAAI,KAAK,IAAI,CAAC,EAAE;AAC7B,IAAI,WAAW,GAAG,IAAI,GAAG,KAAK,CAAC;AAC/B,IAAI,MAAM,CAAC,MAAM,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC;AAC1C,IAAI;AACJ;AACA,GAAG,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,gBAAgB,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;AACrE;AACA,GAAG,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,IAAI,WAAW,IAAI,CAAC,EAAE;AAChD,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;AAChD;AACA,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;AAClF,IAAI,IAAI,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;AACpC;AACA,IAAI,MAAM,CAAC,IAAI,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;AACvC,IAAI,MAAM,CAAC,IAAI,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC;AACxC,IAAI;AACJ;AACA,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;AACzB;AACA,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC;AAClB;AACA,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,UAAU,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,OAAO,IAAI,CAAC,CAAC;AAClD,IAAI,IAAI,YAAY,GAAG,CAAC,OAAO,IAAI,KAAK,KAAK,CAAC,KAAK,UAAU,GAAG,CAAC,UAAU,CAAC;AAC5E,IAAI,IAAI,UAAU,KAAK,CAAC,OAAO,IAAI,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,UAAU,CAAC;AAC5E;AACA,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI;AACtB,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC;AAC1B,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC;AACxB,KAAK,CAAC,CAAC;AACP;AACA,IAAI,MAAM,CAAC,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACrE;AACA,IAAI,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACrE,IAAI;AACJ;AACA,GAAG,IAAI,WAAW,IAAI,CAAC,EAAE;AACzB,IAAI,MAAM,CAAC,IAAI,GAAG,WAAW,IAAI,CAAC,GAAG;AACrC,KAAK,YAAY,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;AACvD,KAAK,YAAY,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,GAAG,CAAC,CAAC;AACvD,KAAK,GAAG,YAAY,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;AACpE,IAAI;AACJ;AACA,GAAG,OAAO,MAAM,CAAC;AACjB,GAAG,CAAC,CAAC;AACL,EAAE,CAAC;AACH;;AClHO,SAAS,IAAI,CAAC,IAAI,EAAE;AAC3B,CAAC,IAAI,GAAG,IAAI,IAAI,SAAS,CAAC;AAC1B,CAAC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;AAC/B,CAAC,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,OAAO,CAAC;AAC5C;AACA,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AACtB;AACA,CAAC,EAAE;AACH;AACA,EAAE,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACrB,EAAE,OAAO,EAAE,IAAI,QAAQ,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;AACvC;AACA,CAAC,MAAM,QAAQ,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC/B;AACA,CAAC,MAAM,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,MAAM,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,OAAO,CAAC;AAClD,CAAC,MAAM,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,OAAO,CAAC;AAChD;AACA,CAAC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;AAC3C,CAAC,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC;AAC1C;AACA,CAAC,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG,IAAI,CAAC;AACvD;AACA,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,KAAK;AACtC,EAAE,OAAO,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,KAAK;AACtH,GAAG,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAChC;AACA,GAAG,IAAI,SAAS,EAAE,UAAU,CAAC;AAC7B;AACA,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC;AACtB,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;AACrD;AACA,IAAI,CAAC,UAAU,EAAE,SAAS,CAAC,GAAG,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;AACrD;AACA,GAAG,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACzD,GAAG,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACzD;AACA,GAAG,IAAI,IAAI,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;AAC9C;AACA,GAAG,IAAI,IAAI,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,KAAK;AACjF,IAAI,KAAK,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAC/C,IAAI,CAAC;AACL;AACA,GAAG,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,gBAAgB,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;AACrE;AACA;AACA,GAAG,IAAI,OAAO,GAAG,MAAM,CAAC,KAAK,IAAI,CAAC,IAAI,WAAW,IAAI,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC;AACtF;AACA,GAAG,IAAI,KAAK,GAAG,SAAS,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD;AACA;AACA,GAAG,IAAI,MAAM,EAAE,MAAM,CAAC;AACtB;AACA,GAAG,IAAI,WAAW,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC;AACrD;AACA,GAAG,IAAI,SAAS,GAAG,KAAK,CAAC;AACzB;AACA,GAAG,IAAI,UAAU,GAAG,IAAI,CAAC;AACzB,GAAG,IAAI,SAAS,GAAG,IAAI,CAAC;AACxB,GAAG,IAAI,YAAY,GAAG,IAAI,CAAC;AAC3B,GAAG,IAAI,WAAW,GAAG,IAAI,CAAC;AAC1B;AACA,GAAG,IAAI,SAAS,IAAI,IAAI,KAAK,WAAW,IAAI,CAAC,IAAI,WAAW,IAAI,IAAI,CAAC,EAAE;AACvE,IAAI,SAAS,GAAG,IAAI,CAAC;AACrB;AACA,IAAI,UAAU,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC5D,IAAI,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;AAC1B,IAAI,CAAC,IAAI,GAAG,CAAC,UAAU,CAAC,EAAE,OAAO,CAAC,KAAK,IAAI;AAC3C,KAAK,IAAI,KAAK,IAAI,IAAI;AACtB,MAAM,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,MAAM,EAAE,CAAC,CAAC;AACzC,KAAK,CAAC,CAAC;AACP;AACA,IAAI,IAAI,WAAW,GAAG,CAAC,EAAE;AACzB,KAAK,YAAY,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACjE,KAAK,WAAW,GAAG,IAAI,GAAG,EAAE,CAAC;AAC7B,KAAK,CAAC,IAAI,GAAG,CAAC,YAAY,CAAC,EAAE,OAAO,CAAC,KAAK,IAAI;AAC9C,MAAM,IAAI,KAAK,IAAI,IAAI;AACvB,OAAO,WAAW,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,MAAM,EAAE,CAAC,CAAC;AAC5C,MAAM,CAAC,CAAC;AACR,KAAK;AACL,IAAI;AACJ;AACA,GAAG,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;AAC3B;AACA,GAAG,IAAI,aAAa,GAAG,IAAI,CAAC;AAC5B;AACA,GAAG,IAAI,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACnC,IAAI,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAChD;AACA,IAAI,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC;AACpB,KAAK,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,EAAE,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;AAC/E;AACA;AACA,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD;AACA,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC;AACtB,KAAK,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AAC9B;AACA,KAAK,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACzF;AACA,IAAI,IAAI,WAAW,IAAI,MAAM,GAAG,CAAC;AACjC,KAAK,WAAW,GAAG,CAAC,CAAC;AACrB;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,WAAW,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;AACtE;AACA,IAAI,MAAM,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,GAAG,MAAM,GAAG,WAAW,GAAG,CAAC,CAAC,CAAC;AACxE,IAAI;AACJ,QAAQ;AACR,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC;AACtB;AACA,IAAI,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AAC1B;AACA,KAAK,IAAI,OAAO,GAAG,IAAI,CAAC;AACxB;AACA;AACA;AACA,KAAK,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,QAAQ,GAAG,QAAQ,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjE,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;AAClC,OAAO,IAAI,OAAO,IAAI,IAAI,EAAE;AAC5B,QAAQ,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AACnD;AACA,QAAQ,IAAI,KAAK,GAAG,QAAQ,EAAE;AAC9B,SAAS,QAAQ,GAAG,KAAK,CAAC;AAC1B,SAAS,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AAC/G,SAAS;AACT,QAAQ;AACR;AACA,OAAO,OAAO,GAAG,CAAC,CAAC;AACnB,OAAO;AACP,MAAM;AACN,KAAK;AACL;AACA,IAAI,IAAI,MAAM,GAAG,MAAM,GAAG,SAAS,CAAC;AACpC;AACA,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,QAAQ,CAAC;AACxC;AACA,IAAI,IAAI,WAAW,IAAI,MAAM,GAAG,CAAC;AACjC,KAAK,WAAW,GAAG,CAAC,CAAC;AACrB;AACA;AACA,IAAI,IAAI,MAAM,GAAG,QAAQ,GAAG,CAAC;AAC7B,KAAK,OAAO,GAAG,OAAO,CAAC;AACvB;AACA,IAAI,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,GAAG,WAAW,GAAG,QAAQ,CAAC,CAAC;AAC1F;AACA,IAAI,MAAM,GAAG,CAAC,KAAK,IAAI,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,KAAK,IAAI,KAAK,GAAG,CAAC,GAAG,MAAM,IAAI,KAAK,GAAG,KAAK,GAAG,QAAQ,GAAG,CAAC,CAAC;AACpG;AACA;AACA;AACA;AACA,IAAI,IAAI,MAAM,GAAG,WAAW,GAAG,MAAM;AACrC,KAAK,aAAa,GAAG,KAAK,CAAC;AAC3B,IAAI;AACJ;AACA,GAAG,MAAM,MAAM,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,cAAc,GAAG,gBAAgB,CAAC,CAAC;AAC3H;AACA,GAAG,IAAI,MAAM,CAAC;AACd;AACA,GAAG,IAAI,WAAW,IAAI,CAAC,EAAE;AACzB,IAAI,MAAM,CAAC,IAAI,GAAG,IAAI,MAAM,EAAE,CAAC;AAC/B,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,WAAW,IAAI,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AAChG,IAAI;AACJ;AACA,GAAG,MAAM,MAAM,GAAG,SAAS,GAAG,IAAI,GAAG,IAAI,MAAM,EAAE,CAAC;AAClD,GAAG,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AAC5B;AACA,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;AACzB;AACA,GAAG,IAAI,MAAM,GAAG,IAAI,CAAC;AACrB;AACA,GAAG,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE;AACjC,IAAI,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAChD,IAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACjD,IAAI;AACJ;AACA,GAAG,IAAI,MAAM,GAAG,SAAS,GAAG,MAAM,CAAC;AACnC,GAAG,IAAI,OAAO,GAAG,UAAU,GAAG,MAAM,CAAC;AACrC;AACA,GAAG,KAAK,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,KAAK,EAAE;AAC9E,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACxB;AACA;AACA,IAAI,IAAI,IAAI,KAAK,SAAS;AAC1B,KAAK,SAAS;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAChE;AACA;AACA,IAAI,IAAI,IAAI,GAAG,SAAS,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACnD,IAAI,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACpE;AACA,IAAI,IAAI,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACtC,KAAK,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACtD;AACA,IAAI,IAAI,GAAG,GAAG,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC;AACrC,IAAI,IAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;AACxC,IAAI,IAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;AACxC;AACA,IAAI,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;AAC3B;AACA,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACtB,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,GAAG,OAAO,GAAG,MAAM,CAAC;AAC1C,KAAK,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,GAAG,MAAM,GAAG,OAAO,CAAC;AAC1C;AACA,KAAK,IAAI,SAAS,EAAE;AACpB,MAAM,IAAI,WAAW,GAAG,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,IAAI,IAAI;AACpD,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,EAAE,MAAM,GAAG,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AAC/H;AACA,MAAM,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI;AAC/B,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,EAAE,MAAM,GAAG,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AAC3H,MAAM;AACN;AACA,MAAM,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,GAAG,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,EAAE,MAAM,GAAG,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACpG;AACA,KAAK,IAAI,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC;AACzB,MAAM,GAAG,MAAM,WAAW,GAAG,CAAC;AAC9B,MAAM,GAAG;AACT,MAAM,MAAM,GAAG,WAAW;AAC1B,MAAM,MAAM;AACZ,MAAM,CAAC;AACP,KAAK;AACL;AACA,IAAI,IAAI,WAAW,IAAI,CAAC,KAAK,IAAI,IAAI,IAAI,IAAI,aAAa,CAAC,EAAE;AAC7D,KAAK,IAAI,KAAK,GAAG,WAAW,IAAI,CAAC,EAAE;AACnC,MAAM,GAAG,GAAG,GAAG,CAAC;AAChB,MAAM,GAAG,GAAG,MAAM,CAAC;AACnB,MAAM;AACN,UAAU;AACV,MAAM,GAAG,GAAG,GAAG,CAAC;AAChB,MAAM,GAAG,GAAG,MAAM,CAAC;AACnB,MAAM;AACN;AACA,KAAK,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;AACxB;AACA,KAAK,IAAI,CAAC,IAAI,EAAE,GAAG,GAAG,WAAW,GAAG,CAAC,EAAE,GAAG,EAAE,MAAM,GAAG,WAAW,EAAE,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACxF,KAAK;AACL,IAAI;AACJ;AACA,GAAG,IAAI,WAAW,GAAG,CAAC;AACtB,IAAI,MAAM,CAAC,MAAM,GAAG,SAAS,GAAG,WAAW,GAAG,MAAM,CAAC;AACrD,QAAQ,IAAI,CAAC,SAAS,EAAE;AACxB,IAAI,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC;AACrF,IAAI,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;AACrB,IAAI;AACJ;AACA,GAAG,MAAM,CAAC,IAAI,GAAG,SAAS,GAAG,SAAS,GAAG,MAAM,CAAC;AAChD;AACA,GAAG,OAAO,MAAM,CAAC;AACjB,GAAG,CAAC,CAAC;AACL,EAAE,CAAC;AACH;;AC1QO,SAAS,YAAY,CAAC,MAAM,EAAE,IAAI,EAAE;AAC3C,CAAC,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;AAC9C;AACA,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,KAAK;AACtC,EAAE,OAAO,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,KAAK;AACtH,GAAG,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;AAChC;AACA,GAAG,IAAI,SAAS,GAAG,GAAG,IAAI,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AACtE,GAAG,IAAI,SAAS,GAAG,GAAG,IAAI,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AACtE;AACA,GAAG,IAAI,MAAM,EAAE,aAAa,EAAE,MAAM,CAAC;AACrC;AACA,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE;AACxB,IAAI,MAAM,GAAG,OAAO,CAAC;AACrB,IAAI,MAAM,GAAG,OAAO,CAAC;AACrB,IAAI,aAAa,GAAG,cAAc,CAAC;AACnC,IAAI;AACJ,QAAQ;AACR,IAAI,MAAM,GAAG,OAAO,CAAC;AACrB,IAAI,MAAM,GAAG,OAAO,CAAC;AACrB,IAAI,aAAa,GAAG,cAAc,CAAC;AACnC,IAAI;AACJ;AACA,GAAG,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACvD;AACA,GAAG,IAAI,GAAG,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC;AAC5C,GAAG,IAAI,GAAG,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AAC5C;AACA,GAAG,IAAI,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;AAC5D,GAAG,IAAI,QAAQ,GAAG,SAAS,CAAC;AAC5B;AACA,GAAG,IAAI,OAAO,GAAG,EAAE,CAAC;AACpB,GAAG,IAAI,OAAO,GAAG,EAAE,CAAC;AACpB;AACA,GAAG,KAAK,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,IAAI,GAAG,EAAE;AAC1E,IAAI,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACxB;AACA,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AACtB,KAAK,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACzB,KAAK,IAAI,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AAChC;AACA,KAAK,OAAO,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;AACnC,KAAK,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,KAAK;AACL,IAAI;AACJ;AACA,GAAG,MAAM,MAAM,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,cAAc,CAAC,CAAC;AACpK,GAAG,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAChC;AACA,GAAG,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,gBAAgB,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;AACrE;AACA,GAAG,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,IAAI,WAAW,IAAI,CAAC,EAAE;AAChD,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;AAChD;AACA,IAAI,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;AAClF,IAAI,IAAI,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;AACpC;AACA,IAAI,MAAM,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AACpC,IAAI,MAAM,CAAC,IAAI,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AACrC,IAAI;AACJ;AACA,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;AACzB;AACA,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC;AAClB;AACA,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;AAChF;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACrE;AACA,IAAI,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACrE,IAAI;AACJ;AACA,GAAG,IAAI,WAAW,IAAI,CAAC,EAAE;AACzB,IAAI,MAAM,CAAC,IAAI,GAAG,WAAW,IAAI,CAAC,GAAG;AACrC,KAAK,YAAY,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;AACvD,KAAK,YAAY,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,GAAG,CAAC,CAAC;AACvD,KAAK,GAAG,YAAY,CAAC,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;AACpE,IAAI;AACJ;AACA,GAAG,OAAO,MAAM,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,CAAC,CAAC;AACL,EAAE,CAAC;AACH;;ACnGO,SAAS,aAAa,CAAC,IAAI,EAAE;AACpC,CAAC,OAAO,YAAY,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;AAC3C,CAAC;AACD;AACA;AACA;AACA,SAAS,cAAc,CAAC,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,OAAO,EAAE;AACxE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC;AACrB;AACA,CAAC,IAAI,CAAC,GAAG,CAAC;AACV,EAAE,OAAO,IAAI,CAAC;AACd;AACA,CAAC,MAAM,IAAI,GAAG,IAAI,MAAM,EAAE,CAAC;AAC3B;AACA,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B;AACA,CAAC,IAAI,CAAC,IAAI,CAAC;AACX,EAAE,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,MAAM;AACN,EAAE,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC;AACpB,GAAG,EAAE,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;AACrB,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;AACrB,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACtB;AACA;AACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAClC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAC9B,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAC9B,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AAC5B,GAAG;AACH;AACA;AACA;AACA,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAChB;AACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAClC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACxE,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACd,QAAQ;AACR,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACrC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;AAC1C,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACtC,KAAK,CAAC;AACN;AACA,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACxB,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACf,IAAI;AACJ,GAAG;AACH;AACA,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACxB;AACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAClC,GAAG,aAAa;AAChB,IAAI,IAAI;AACR,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;AACtB,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;AAC9B,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;AAC1B,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;AACtC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;AACb,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;AACb,IAAI,CAAC;AACL,GAAG;AACH,EAAE;AACF;AACA,CAAC,OAAO,IAAI,CAAC;AACb;;ACuIA,MAAM,WAAW,GAAG,IAAI,GAAG,EAAE,CAAC;AAC9B;AACA,SAAS,eAAe,GAAG;AAC3B,CAAC,KAAK,IAAI,CAAC,IAAI,WAAW;AAC1B,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACnB,CAAC;AACD;AACA,IAAI,MAAM,EAAE;AACZ,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,eAAe,CAAC,CAAC;AAClC,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC;AACxC,CAAC,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC;AACzD,CAAC;AACD;AACA,MAAM,UAAU,GAAqC,MAAM,EAAE,CAAO,CAAC;AACrE,MAAM,UAAU,GAAiB,MAAM,EAAE,CAAO,CAAC;AACjD;AACA,SAAS,WAAW,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE;AACvC,CAAC,IAAI,EAAE,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9E,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACnD,CAAC;AACD;AACA,SAAS,YAAY,CAAC,CAAC,EAAE,GAAG,EAAE;AAC9B,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,MAAM,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC;AACD;AACA,SAAS,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;AAClC,CAAC,OAAO,MAAM,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AAC1C,CAAC;AACD;AACA,SAAS,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;AAC1C,CAAC,OAAO,OAAO,IAAI,IAAI,GAAG,aAAa,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC7D,CAAC;AACD;AACA,MAAM,SAAS,GAAG,QAAQ,CAAC;AAC3B;AACA;AACA;AACA,SAAS,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;AAC1C,CAAC,OAAO,OAAO,IAAI,IAAI,GAAG,aAAa,GAAG,QAAQ,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;AACrF,CAAC;AACD;AACA,SAAS,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE;AACjD,CAAC,OAAO,OAAO,IAAI,IAAI,GAAG,aAAa,GAAG,QAAQ,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACpG,CAAC;AACD;AACA,MAAM,QAAQ,GAAG,QAAQ,CAAC;AAC1B;AACA,SAAS,UAAU,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE;AACnD,CAAC,OAAO,OAAO,IAAI,IAAI,GAAG,aAAa,GAAG,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACtG,CAAC;AACD;AACA,MAAM,UAAU,GAAG,UAAU,CAAC;AAC9B;AACA;AACA,SAAS,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE;AACxD,CAAC,IAAI,SAAS,GAAG,GAAG,CAAC,YAAY,CAAC,MAAM,CAAC,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;AACjE;AACA,CAAC,IAAI,KAAK,GAAG,MAAM,GAAG,MAAM,CAAC;AAC7B;AACA,CAAC,IAAI,OAAO,GAAG,UAAU,CAAC,CAAC,QAAQ,GAAG,GAAG,IAAI,KAAK,EAAE,KAAK,CAAC,CAAC;AAC3D;AACA,CAAC,GAAG;AACJ,EAAE,IAAI,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;AACjC,EAAE,IAAI,UAAU,GAAG,GAAG,GAAG,SAAS,GAAG,KAAK,CAAC;AAC3C;AACA,EAAE,IAAI,UAAU,IAAI,QAAQ,IAAI,SAAS,IAAI,SAAS,GAAG,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE;AAC/F,GAAG,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;AAClC,EAAE,QAAQ,EAAE,OAAO,GAAG,KAAK,CAAC,MAAM,EAAE;AACpC;AACA,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACf,CAAC;AACD;AACA,SAAS,WAAW,CAAC,IAAI,EAAE;AAC3B,CAAC,IAAI,QAAQ,EAAE,WAAW,CAAC;AAC3B,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,WAAW,GAAG,CAAC,EAAE,IAAI,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC;AACrG,CAAC,OAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAC;AACtC,CAAC;AACD;AACA,SAAS,YAAY,CAAC,IAAI,EAAE;AAC5B,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;AAChB,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI;AAC3C,GAAG,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,EAAE,CAAC,CAAC,CAAC;AAC1C,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;AACjD,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACf,GAAG,CAAC,CAAC;AACL,EAAE;AACF,CAAC;AACD;AACe,SAAS,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;AAChD,CAAC,MAAM,IAAI,GAAG;AACd,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;AAC5B,EAAE,CAAC;AACH;AACA,CAAC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACxB;AACA;AACA,CAAC,SAAS,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE;AAChC,EAAE,IAAI,IAAI;AACV,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;AACpG,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC;AAC7C,GAAG,GAAG;AACN,GAAG,CAAC;AACJ;AACA,EAAE,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;AACzD,EAAE;AACF;AACA,CAAC,SAAS,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE;AACxC,EAAE,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAClC,EAAE,OAAO,GAAG,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;AACzD,EAAE;AACF;AACA,CAAC,SAAS,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE;AACxC,EAAE,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAClC,EAAE,OAAO,GAAG,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;AACzD,EAAE;AACF;AACA,CAAC,SAAS,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE;AACvC,EAAE,OAAO,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,OAAO,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACxF,EAAE;AACF;AACA,CAAC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;AAC1B,CAAC,IAAI,CAAC,SAAS,GAAG,QAAO;AACzB;AACA,CAAC,IAAI,KAAK,GAAG,KAAK,CAAC;AACnB,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AACjB;AACA,CAAC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC1C;AACA,CAAC,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI;AACpB,EAAE,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;AACpB;AACA,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5B;AACA,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;AACjB,EAAE,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACpC,EAAE,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC;AACjC,EAAE;AACF;AACA,CAAC,MAAM,GAAG,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAChC,CAAC,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC7C;AACA,CAAC,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACnC;AACA,CAAC,EAAE,CAAC,OAAO,EAAE,IAAI,EAAE,CAAC,IAAI;AACxB,EAAE,IAAI,CAAC,CAAC,MAAM,KAAK,IAAI,EAAE;AACzB,GAAG,IAAI,OAAO,GAAG,UAAU,IAAI,UAAU,IAAI,SAAS,IAAI,SAAS,CAAC;AACpE,GAAG,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AAClC,GAAG;AACH,EAAE,EAAE,IAAI,CAAC,CAAC;AACV;AACA,CAAC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AAClD,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AACvB,CAAC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC/C;AACA,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;AACnB;AACA,CAAC,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;AAC1C;AACA,CAAC,MAAM,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC;AACrC;AACA,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC,IAAI;AACnC,EAAE,IAAI,CAAC,CAAC,IAAI;AACZ,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC;AACrC,EAAE,CAAC,CAAC;AACJ;AACA,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC;AAC5B;AACA,CAAC,MAAM,MAAM,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,CAAC;AACxC,EAAE,WAAW,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,KAAK,CAAC;AACjE,EAAE,YAAY,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,EAAE,YAAY,CAAC,CAAC;AACpD,CAAC,MAAM,IAAI,MAAM,IAAI,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI,CAAC,IAAI,MAAM,EAAE,EAAE,SAAS,IAAI,SAAS,KAAK,IAAI,CAAC,CAAC;AAC/F,CAAC,MAAM,MAAM,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;AAClC,CAAC,MAAM,KAAK,KAAK,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;AAChD;AACA,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI;AACpB,EAAE,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;AACpC,EAAE,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAC5B,EAAE,CAAC,CAAC;AACJ;AACA,CAAC,MAAM,SAAS,GAAG,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;AAC3E;AACA,CAAC,MAAM,YAAY,GAAG;AACtB,EAAE,IAAI,EAAE,YAAY;AACpB,EAAE,MAAM,EAAE,UAAU;AACpB,EAAE,CAAC;AACH;AACA,CAAC,MAAM,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC;AACxF;AACA,CAAC,SAAS,SAAS,CAAC,QAAQ,EAAE;AAC9B,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC5B;AACA,EAAE,IAAI,EAAE,IAAI,IAAI,EAAE;AAClB,GAAG,IAAI,SAAS,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,SAAS,EAAE,QAAQ,CAAC,IAAI,SAAS,CAAC;AACrE;AACA,GAAG,IAAI,SAAS,CAAC,IAAI,IAAI,IAAI,EAAE;AAC/B;AACA,IAAI,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC9B;AACA,IAAI,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,CAAC;AACtF,IAAI;AACJ,QAAQ;AACR,IAAI,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,EAAE,GAAG,QAAQ,IAAI,SAAS,GAAG,UAAU,GAAG,UAAU,GAAG,SAAS,CAAC,CAAC;AACrG;AACA,IAAI,EAAE,CAAC,GAAG,GAAG,QAAQ,CAAC;AACtB;AACA,IAAI,IAAI,MAAM,GAAgB,EAAE,CAAC,IAAI,CAAC;AACtC;AACA,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC;AACtB;AACA,IAAI,IAAI,UAAU,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;AAC/B;AACA,IAAI,IAAI,QAAQ,IAAI,SAAS,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AACzD;AACA,KAAK,IAAI,UAAU,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE;AACzD,MAAM,EAAE,GAAG;AACX,OAAO,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,aAAa,GAAG;AAC5C,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;AACnB,QAAQ,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;AACnB,QAAQ;AACR,OAAO,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,aAAa,GAAG;AAC5C,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;AACnB,QAAQ,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;AACnB,QAAQ;AACR,OAAO,CAAC;AACR,MAAM,UAAU,GAAG,KAAK,CAAC;AACzB,MAAM;AACN;AACA,KAAK,IAAI,CAAC,UAAU,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE;AACnC,MAAM,IAAI,GAAG,GAAG,EAAE,CAAC;AACnB;AACA,MAAM,EAAE,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,KAAK,OAAO,IAAI,IAAI,GAAG,aAAa,GAAG,QAAQ,CAAC,OAAO,EAAE,OAAO,EAAE,GAAG,CAAC,CAAC;AACzG,MAAM;AACN,KAAK;AACL;AACA,IAAI,EAAE,CAAC,KAAK,GAAG,QAAQ,CAAC,EAAE,KAAK,MAAM,GAAG,SAAS,GAAG,QAAQ,IAAI,SAAS;AACzE,MAAM,EAAE,CAAC,KAAK,IAAI,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC,KAAK,IAAI,CAAC,GAAG,UAAU,GAAG,QAAQ;AACtE,MAAM,EAAE,CAAC,KAAK,IAAI,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC,KAAK,IAAI,CAAC,GAAG,UAAU,GAAG,QAAQ,CAAC;AACvE,KAAK,CAAC,CAAC;AACP;AACA,IAAI,EAAE,CAAC,IAAI,GAAG,QAAQ,CAAC,UAAU,GAAG,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;AACrD;AACA,IAAI,EAAE,CAAC,KAAK,GAAG,QAAQ,CAAC,EAAE,CAAC,KAAK,IAAI,UAAU,CAAC,CAAC;AAChD;AACA;AACA,IAAI,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC;AAC7B,IAAI;AACJ,GAAG;AACH,EAAE;AACF;AACA,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AAChB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AAChB;AACA;AACA,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE;AAChB,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI;AACtB,GAAG,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AACtB,GAAG,CAAC,CAAC;AACL,EAAE;AACF;AACA,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI;AACnB,EAAE,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AACrB,EAAE,CAAC,CAAC;AACJ;AACA,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM;AAC1B,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;AACf;AACA,CAAC,MAAM,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AAClC;AACA,CAAC,MAAM,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC;AAClC;AACA,CAAI,IAAC,SAAS,CAAC,CAAC,SAAS,CAAkG;AAC3H;AACA,CAAC,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE;AACtB,EAAE,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACzB,EAAE,SAAS,GAAG,OAAO,CAAC;AACtB,EAAE,SAAS,GAAG,OAAO,CAAC;AAGtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF,MAAM;AACN,EAAE,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACzB,EAAE,SAAS,GAAG,OAAO,CAAC;AACtB,EAAE,SAAS,GAAG,OAAO,CAAC;AAGtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,CAAC,MAAM,UAAU,GAAG,EAAE,CAAC;AACvB;AACA;AACA,CAAC,KAAK,IAAI,CAAC,IAAI,MAAM,EAAE;AACvB,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACrB;AACA,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI,IAAI,IAAI,EAAE,CAAC,GAAG,IAAI,IAAI,EAAE;AACxC,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;AAC9C,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC;AAC1B,GAAG;AACH,EAAE;AACF;AACA;AACA,CAAC,MAAM,OAAO,IAAiB,CAAC,IAAI,CAAC,MAAM,KAAK,EAAE,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACjF,CAAC,MAAM,QAAQ,GAAgB,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,CAAC;AACzD;AACA,CAAC,MAAM,eAAe,GAAgB,CAAC,EAAE,IAAI,CAAC,GAAG,gBAAgB,CAAC,OAAO,CAAC,GAAG,eAAe,CAAC,OAAO,CAAC,CAAC,CAAC;AACvG,CAAC,MAAM,aAAa,KAAkB,YAAY,CAAC,OAAO,EAAE,cAAc,EAAE,EAAE,IAAI,CAAC,GAAG,iBAAiB,GAAG,gBAAgB,GAAG,QAAQ,CAAC,CAAC,CAAC;AACxI,CAAC,MAAM,cAAc,IAAiB,aAAa,CAAC,OAAO,EAAE,eAAe,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAC,CAAC;AAC1G;AACA,CAAC,MAAM,UAAU,GAAG,EAAE,CAAC;AACvB;AACA,CAAC,MAAM,MAAM,OAAsB,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AACvF,CAAC,MAAM,UAAU,GAAkB,MAAM,CAAC,IAAI,CAAC;AAC/C,CAAC,MAAM,OAAO,MAAqB,MAAM,CAAC,OAAO,CAAC;AAClD;AACA,CAAkB;AAClB,EAAE,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC;AAC3B;AACA,EAAE,OAAO,CAAC,KAAK,IAAI,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC3C,EAAE,OAAO,CAAC,IAAI,KAAK,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC1C,EAAE,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAC5C,EAAE,OAAO,CAAC,IAAI,KAAK,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAC1C,EAAE;AACF;AACA,CAAC,IAAI,WAAW,CAAC;AACjB,CAAC,IAAI,UAAU,CAAC;AAChB,CAAC,IAAI,UAAU,CAAC;AAChB,CAAC,IAAI,UAAU,GAAG,EAAE,CAAC;AACrB,CAAC,IAAI,WAAW,GAAG,EAAE,CAAC;AACtB,CAAC,IAAI,UAAU,CAAC;AAChB,CAAC,IAAI,cAAc,GAAG,KAAK,CAAC;AAC5B,CAAC,IAAI,kBAAkB,GAAG,EAAE,CAAC;AAC7B;AACA,CAAC,IAAmB,MAAM,CAAC,IAAI,EAAE;AACjC,EAAE,MAAM,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;AAC3D,EAAE,cAAc,GAAG,YAAY,IAAI,IAAI,CAAC;AACxC,EAAE,UAAU,GAAG,cAAc,GAAG,YAAY,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAClE;AACA,EAAE,KAAK,IAAI,CAAC,IAAI,UAAU;AAC1B,GAAG,kBAAkB,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;AACvC,EAAE;AACF;AACA,CAAC,IAAI,UAAU,EAAE;AACjB,EAAE,WAAW,GAAG,QAAQ,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AAChD,EAAE,UAAU,GAAG,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;AACpD;AACA;AACA,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;AAClC;AACA,EAAE,IAAI,cAAc,EAAE;AACtB,GAAG,UAAU,GAAG,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;AACjE;AACA,GAAG,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;AAC/C,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC9B;AACA,GAAG,KAAK,IAAI,GAAG,IAAI,UAAU;AAC7B,IAAI,QAAQ,CAAC,IAAI,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC,WAAW,GAAG,GAAG,CAAC;AACzD,GAAG;AACH,OAAO;AACP,GAAG,QAAQ,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;AACxC,GAAG,MAAM,CAAC,IAAI,IAAI,QAAQ,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;AACrD,GAAG;AACH,EAAE;AACF;AACA,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC3B,CAAC,MAAM,IAAI,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AAC5B;AACA,CAAC,SAAS,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE;AAC9B,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,cAAc,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC;AAC7D,GAAG,OAAO,aAAa,CAAC;AACxB;AACA,EAAE,IAAI,KAAK,GAAG,EAAE,CAAC;AACjB;AACA,EAAE,IAAI,GAAG,GAAG,QAAQ,CAAC,IAAI,EAAE,aAAa,EAAE,UAAU,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;AAChF;AACA,EAAE,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;AACzB;AACA,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI;AACb,GAAG,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACtB;AACA,EAAE,IAAI,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;AACxC;AACA,EAAE,IAAI,OAAO,CAAC,IAAI,EAAE;AACpB,GAAG,IAAI,KAAK,GAAG,QAAQ,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;AAC9C;AACA,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE;AACd,IAAI,IAAI,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACxC;AACA,IAAI,IAAI,KAAK;AACb,KAAK,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,GAAG,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AAChG;AACA,IAAI,KAAK,CAAC,KAAK,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACnD,IAAI;AACJ,GAAG;AACH;AACA,EAAE,IAAI,IAAI,GAAG,QAAQ,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;AAC3C,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,KAAK,CAAC;AAC7B;AACA,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE;AACb,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI;AACpB,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACrF;AACA,GAAG,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,IAAI;AAChC,IAAI,IAAI,MAAM,CAAC,KAAK;AACpB,KAAK,OAAO;AACZ;AACA,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC;AACtB;AACA,IAAI,IAAI,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACtC;AACA,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,OAAO,KAAK,MAAM,CAAC,OAAO,EAAE;AACpD;AACA,KAAK,IAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AAC5E;AACA,KAAK,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;AAC9B,MAAM,CAAC,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC,IAAI,SAAS,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;AACrG,MAAM,CAAC,CAAC;AACR,KAAK;AACL;AACA,KAAK,SAAS,CAAC,SAAS,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;AACrE,IAAI,EAAE,KAAK,CAAC,CAAC;AACb;AACA,GAAG,IAAI,WAAW,EAAE;AACpB,IAAI,OAAO,CAAC,UAAU,EAAE,KAAK,EAAE,CAAC,IAAI;AACpC,KAAK,IAAI,MAAM,CAAC,KAAK;AACrB,MAAM,OAAO;AACb;AACA,KAAK,cAAc,CAAC,CAAC,CAAC,CAAC;AACvB;AACA,KAAK,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;AACxE,KAAK,EAAE,KAAK,CAAC,CAAC;AACd,IAAI;AACJ,GAAG;AACH;AACA,EAAE,KAAK,IAAI,GAAG,IAAI,UAAU,EAAE;AAC9B,GAAG,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,YAAY,EAAE,GAAG,CAAC,CAAC;AAC7C,GAAG,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC;AACxB,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjB,GAAG;AACH;AACA,EAAE,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACtB,EAAE;AACF;AACA,CAAC,MAAM,cAAc,GAAG,IAAI,GAAG,EAAE,CAAC;AAClC;AACA,CAAC,SAAS,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,QAAQ,GAAG,IAAI,EAAE;AACjD,EAAE,MAAM,aAAa,GAAG,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;AACvD,EAAE,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;AAC7D;AACA,EAAE,IAAI,QAAQ,EAAE;AAChB,GAAG,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,aAAa,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC;AAC9C,GAAG,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;AAC3C,GAAG;AACH,EAAE;AACF;AACA,CAAC,SAAS,QAAQ,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;AACjC,EAAE,MAAM,aAAa,GAAG,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;AACvD;AACA,EAAE,KAAK,IAAI,CAAC,IAAI,aAAa,EAAE;AAC/B,GAAG,IAAI,EAAE,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,EAAE;AAC9B,IAAI,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,IAAI,OAAO,aAAa,CAAC,CAAC,CAAC,CAAC;AAC5B,IAAI;AACJ,GAAG;AACH;AACA,EAAE,IAAI,EAAE,IAAI,IAAI;AAChB,GAAG,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC/B,EAAE;AACF;AACA,CAAC,IAAI,UAAU,GAAG,CAAC,CAAC;AACpB,CAAC,IAAI,UAAU,GAAG,CAAC,CAAC;AACpB;AACA,CAAC,IAAI,UAAU,GAAG,CAAC,CAAC;AACpB,CAAC,IAAI,UAAU,GAAG,CAAC,CAAC;AACpB;AACA;AACA,CAAC,IAAI,UAAU,GAAG,CAAC,CAAC;AACpB,CAAC,IAAI,UAAU,GAAG,CAAC,CAAC;AACpB;AACA,CAAC,IAAI,OAAO,GAAG,CAAC,CAAC;AACjB,CAAC,IAAI,OAAO,GAAG,CAAC,CAAC;AACjB,CAAC,IAAI,OAAO,GAAG,CAAC,CAAC;AACjB,CAAC,IAAI,OAAO,GAAG,CAAC,CAAC;AACjB;AACA,CAAC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AAChB;AACA,CAAC,IAAI,eAAe,GAAG,KAAK,CAAC;AAC7B,CAAC,IAAI,aAAa,GAAG,KAAK,CAAC;AAC3B,CAAC,IAAI,kBAAkB,GAAG,KAAK,CAAC;AAChC,CAAC,IAAI,eAAe,GAAG,KAAK,CAAC;AAC7B,CAAC,IAAI,eAAe,GAAG,KAAK,CAAC;AAC7B,CAAC,IAAI,eAAe,GAAG,KAAK,CAAC;AAC7B;AACA,CAAC,SAAS,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE;AACzC,EAAE,IAAI,KAAK,KAAK,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;AAC7D,GAAG,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAC3B;AACA,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC;AACtB;AACA,EAAE,kBAAkB,GAAG,IAAI,CAAC;AAC5B,EAAE,aAAa,GAAG,IAAI,CAAC;AACvB;AACA,EAAE,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC;AACtB,GAAG,eAAe,GAAG,eAAe,GAAG,IAAI,CAAC;AAC5C;AACA,EAAE,MAAM,EAAE,CAAC;AACX,EAAE;AACF;AACA,CAAC,SAAS,QAAQ,CAAC,KAAK,EAAE,MAAM,EAAE;AAClC;AACA;AACA,EAAE,IAAI,CAAC,KAAK,IAAI,UAAU,GAAG,UAAU,GAAG,KAAK,CAAC;AAChD,EAAE,IAAI,CAAC,MAAM,GAAG,UAAU,GAAG,UAAU,GAAG,MAAM,CAAC;AACjD,EAAE,UAAU,IAAI,UAAU,GAAG,CAAC,CAAC;AAC/B;AACA,EAAE,YAAY,EAAE,CAAC;AACjB,EAAE,aAAa,EAAE,CAAC;AAClB;AACA,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;AACrB;AACA,EAAE,OAAO,GAAG,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC,UAAU,GAAG,OAAO,EAAE,GAAG,CAAC,CAAC;AAC7D,EAAE,OAAO,GAAG,EAAE,CAAC,GAAG,MAAM,SAAS,CAAC,UAAU,GAAG,OAAO,EAAE,GAAG,CAAC,CAAC;AAC7D,EAAE,OAAO,GAAG,EAAE,CAAC,KAAK,IAAI,SAAS,CAAC,UAAU,GAAG,OAAO,EAAE,GAAG,CAAC,CAAC;AAC7D,EAAE,OAAO,GAAG,EAAE,CAAC,MAAM,GAAG,SAAS,CAAC,UAAU,GAAG,OAAO,EAAE,GAAG,CAAC,CAAC;AAC7D;AACA;AACA,EAAE;AACF;AACA;AACA,CAAC,MAAM,WAAW,GAAG,CAAC,CAAC;AACvB;AACA,CAAC,SAAS,YAAY,GAAG;AACzB,EAAE,IAAI,SAAS,GAAG,KAAK,CAAC;AACxB;AACA,EAAE,IAAI,QAAQ,GAAG,CAAC,CAAC;AACnB;AACA,EAAE,OAAO,CAAC,SAAS,EAAE;AACrB,GAAG,QAAQ,EAAE,CAAC;AACd;AACA,GAAG,IAAI,aAAa,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;AAC1C,GAAG,IAAI,gBAAgB,GAAG,WAAW,CAAC,QAAQ,CAAC,CAAC;AAChD;AACA,GAAG,SAAS,GAAG,QAAQ,IAAI,WAAW,KAAK,aAAa,IAAI,gBAAgB,CAAC,CAAC;AAC9E;AACA,GAAG,IAAI,CAAC,SAAS,EAAE;AACnB,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACtC,IAAI,aAAa,GAAG,IAAI,CAAC;AACzB,IAAI;AACJ,GAAG;AACH,EAAE;AACF;AACA,CAAC,SAAS,OAAO,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE;AACnC,EAAE,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAC1B,EAAE;AACF;AACA,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACxB;AACA;AACA,CAAC,SAAS,YAAY,GAAG;AACzB;AACA,EAAE,IAAI,UAAU,GAAG,KAAK,CAAC;AACzB,EAAE,IAAI,UAAU,GAAG,KAAK,CAAC;AACzB,EAAE,IAAI,UAAU,GAAG,KAAK,CAAC;AACzB,EAAE,IAAI,UAAU,GAAG,KAAK,CAAC;AACzB;AACA,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK;AAC5B,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;AAChC,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC;AAC7B,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;AACxB,IAAI,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AAC5D;AACA,IAAI,IAAI,QAAQ,GAAG,KAAK,GAAG,SAAS,CAAC;AACrC;AACA,IAAI,IAAI,QAAQ,GAAG,CAAC,EAAE;AACtB,KAAK,IAAI,IAAI,EAAE;AACf,MAAM,UAAU,IAAI,QAAQ,CAAC;AAC7B;AACA,MAAM,IAAI,IAAI,IAAI,CAAC,EAAE;AACrB,OAAO,UAAU,IAAI,QAAQ,CAAC;AAC9B,OAAO,UAAU,GAAG,IAAI,CAAC;AACzB,OAAO;AACP;AACA,OAAO,UAAU,GAAG,IAAI,CAAC;AACzB,MAAM;AACN,UAAU;AACV,MAAM,UAAU,IAAI,QAAQ,CAAC;AAC7B;AACA,MAAM,IAAI,IAAI,IAAI,CAAC,EAAE;AACrB,OAAO,UAAU,IAAI,QAAQ,CAAC;AAC9B,OAAO,UAAU,GAAG,IAAI,CAAC;AACzB,OAAO;AACP;AACA,OAAO,UAAU,GAAG,IAAI,CAAC;AACzB,MAAM;AACN,KAAK;AACL,IAAI;AACJ,GAAG,CAAC,CAAC;AACL;AACA,EAAE,aAAa,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;AAChC,EAAE,aAAa,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;AAChC,EAAE,aAAa,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;AAChC,EAAE,aAAa,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;AAChC;AACA;AACA,EAAE,UAAU,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC1C,EAAE,UAAU,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC5B;AACA;AACA,EAAE,UAAU,IAAI,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC1C,EAAE,UAAU,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC5B,EAAE;AACF;AACA,CAAC,SAAS,aAAa,GAAG;AAC1B;AACA,EAAE,IAAI,IAAI,GAAG,UAAU,GAAG,UAAU,CAAC;AACrC,EAAE,IAAI,IAAI,GAAG,UAAU,GAAG,UAAU,CAAC;AACrC;AACA,EAAE,IAAI,IAAI,GAAG,UAAU,CAAC;AACxB,EAAE,IAAI,IAAI,GAAG,UAAU,CAAC;AACxB;AACA,EAAE,SAAS,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE;AAClC,GAAG,QAAQ,IAAI;AACf,IAAI,KAAK,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,CAAC,OAAO,IAAI,GAAG,IAAI,CAAC;AAC7C,IAAI,KAAK,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,CAAC,OAAO,IAAI,GAAG,IAAI,CAAC;AAC7C,IAAI,KAAK,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,CAAC,OAAO,IAAI,GAAG,IAAI,CAAC;AAC7C,IAAI,KAAK,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,CAAC,OAAO,IAAI,GAAG,IAAI,CAAC;AAC7C,IAAI;AACJ,GAAG;AACH;AACA,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK;AAC5B,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;AAChC,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACzB;AACA,IAAI,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAC7C;AACA,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI;AAC1B,KAAK,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AACnD,IAAI;AACJ,GAAG,CAAC,CAAC;AACL,EAAE;AACF;AACA,CAAC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AAC1F,CAAC,MAAM,cAAc,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC;AACnD;AACA,CAAC,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC;AAC1B;AACA,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;AACtB;AACA,CAAC,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;AAC5B;AACA,CAAC,MAAM,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACvC,CAAC,MAAM,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACvC,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACzC,CAAC,MAAM,CAAC,KAAK,IAAI,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACxC,CAAC,MAAM,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACvC;AACA,CAAC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;AACjF;AACA,CAAC,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC;AACrC;AACA;AACA,CAAC,IAAI,SAAS,GAAG,CAAC,IAAI,CAAC,CAAC;AACxB;AACA,CAAC,SAAS,YAAY,CAAC,CAAC,EAAE,EAAE,EAAE;AAC9B,EAAE,IAAI,EAAE,GAAG,CAAC,EAAE;AACd,GAAG,IAAI,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACzC;AACA,GAAG,IAAI,EAAE,EAAE;AACX,IAAI,QAAQ,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;AAC5B,IAAI,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;AAC1B,IAAI,OAAO,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;AAClD,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;AACzC;AACA,IAAI,OAAO,EAAE,CAAC;AACd,IAAI;AACJ,GAAG;AACH,EAAE;AACF;AACA,CAAC,SAAS,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE;AAC3B,EAAE,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AAC1B,GAAG,IAAI,MAAM,GAAgB,IAAI,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC;AAC/D;AACA,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC;AACpB,GAAG,CAAC,CAAC,KAAK,GAAG,MAAM,IAAI,KAAK,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,OAAO,EAAE,eAAe,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,GAAG,EAAE,IAAI,cAAc,IAAI,EAAE,IAAI,YAAY,CAAC;AACtI,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,KAAK,MAAM,GAAG,eAAe,GAAG,cAAc,CAAC,CAAC;AACpE,GAAG;AACH;AACA,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE;AACb,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;AAC5C,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,IAAI,UAAU,IAAI,OAAO,CAAC;AAC/C,GAAG,CAAC,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,IAAI,YAAY,CAAC,CAAC;AACjD,GAAG,CAAC,CAAC,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC3C,GAAG,CAAC,CAAC,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;AACrC;AACA,GAAG,CAAC,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC;AACzC,GAAG,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;AACvC,GAAG,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;AACpD;AACA,GAAG,IAAI,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1C,GAAG,IAAI,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,EAAE;AACtC,IAAI,IAAI,EAAE,MAAM;AAChB,IAAI,KAAK,EAAE,GAAG,CAAC,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC;AAC9B,IAAI,MAAM,EAAE,CAAC,CAAC,MAAM;AACpB,IAAI,KAAK,EAAE,MAAM,GAAG,CAAC;AACrB,IAAI,KAAK,EAAE,UAAU;AACrB,IAAI,OAAO,EAAE,IAAI;AACjB,IAAI,KAAK,EAAE,IAAI;AACf,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;AAChB,GAAG,MAAM,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACzC,GAAG,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC3C,GAAG,MAAM,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACzC,GAAG,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC3C,GAAG,MAAM,CAAC,KAAK,IAAI,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC1C,GAAG,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC;AAC9B,GAAG;AACH;AACA,EAAE,IAAI,UAAU,EAAE;AAClB,GAAG,IAAI,QAAQ,GAAG,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5B,GAAG;AACH;AACA,EAAE,IAAI,MAAM,CAAC,IAAI,EAAE;AACnB,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AACjC;AACA,GAAG,IAAI,EAAE,GAAG,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC/B,GAAG,EAAE,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;AACpC,GAAG;AACH;AACA,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;AACvB,EAAE;AACF;AACA,CAAC,SAAS,SAAS,CAAC,IAAI,EAAE,EAAE,EAAE;AAC9B,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;AACvC;AACA,EAAE,IAAI,GAAG,IAAI,IAAI,CAAC,GAAG,UAAU,CAAC,IAAI,EAAE,EAAE,EAAE,WAAW,EAAE,WAAW,CAAC,GAAG,UAAU,CAAC,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,CAAC,CAAC;AAC/G;AACA,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AAC7B,EAAE,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;AAC7B,EAAE;AACF;AACA,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC5B;AACA,CAAC,SAAS,SAAS,CAAC,CAAC,EAAE;AACvB,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtB;AACA,EAAE,IAAI,UAAU,EAAE;AAClB,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9B;AACA,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5B,GAAG,IAAI,EAAE,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,GAAG,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC;AACjC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC;AACf,GAAG;AACH;AACA,EAAE,IAAI,MAAM,CAAC,IAAI,EAAE;AACnB,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3B;AACA,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;AAC9D,GAAG;AACH;AACA;AACA;AACA,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;AACvB,EAAE;AACF;AACA,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC5B;AACA,CAAC,MAAM,aAAa,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AACpD;AACA,CAAC,SAAS,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE;AAC5B,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;AACzB;AACA,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE;AACjB,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AAC5B;AACA,GAAG,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/B;AACA;AACA,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE;AACnB,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC;AACpD,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5B,IAAI;AACJ;AACA;AACA,GAAG,IAAI,MAAM,GAAgB,EAAE,CAAC,IAAI,CAAC;AACrC;AACA,GAAG,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACrC,GAAG,IAAI,CAAC,KAAK,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtC,GAAG,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACvC;AACA,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AAC1B,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI;AAC/B,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;AAC/D,KAAK,CAAC,CAAC;AACP,IAAI;AACJ;AACA,GAAG,IAAI,CAAC,KAAK,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,gBAAgB,EAAE,CAAC,KAAK,IAAI,CAAC,GAAG,UAAU,IAAI,MAAM,IAAI,EAAE,IAAI,CAAC,GAAG,WAAW,GAAG,UAAU,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC9I,GAAG,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,KAAK,MAAM,IAAI,EAAE,CAAC,KAAK,IAAI,CAAC,GAAG,eAAe,GAAG,EAAE,CAAC,KAAK,IAAI,CAAC,GAAG,aAAa,GAAG,EAAE,CAAC,KAAK,IAAI,CAAC,GAAG,eAAe,GAAG,aAAa,CAAC,CAAC,CAAC;AACxK;AACA,GAAG,IAAI,CAAC,MAAM,UAAU,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC9C,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACnD,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACpD,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACrD;AACA,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;AACxB;AACA,GAAG,IAAI,CAAC,MAAM;AACd;AACA,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,EAAE,CAAC;AAC7C;AACA,IAAI,MAAM;AACV;AACA,KAAK,KAAK,CAAC,EAAE,CAAC;AACd,MAAM,YAAY,CAAC,OAAO,EAAE,cAAc,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;AACzD;AACA,KAAK,KAAK,CAAC,EAAE,CAAC;AACd,MAAM,WAAW,CAAC,OAAO,EAAE,EAAE,CAAC;AAC9B,KAAK,EAAE,IAAI,aAAa;AACxB,QAAQ,EAAE,IAAI,WAAW;AACzB,IAAI,CAAC;AACL;AACA,GAAG,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,eAAe,EAAE,CAAC,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,EAAE,GAAG,iBAAiB,GAAG,EAAE,CAAC,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,gBAAgB,GAAG,OAAO,CAAC,CAAC,CAAC;AACpK;AACA,GAAG,IAAI,CAAC,IAAI,QAAQ,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3C,GAAG,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAChD;AACA,GAAG,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9C;AACA,GAAG,IAAI,CAAC,MAAM;AACd,GAAG,IAAI,CAAC,OAAO;AACf,GAAG,IAAI,CAAC,MAAM;AACd,GAAG,IAAI,CAAC,MAAM;AACd,GAAG,IAAI,CAAC,OAAO;AACf,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACvB;AACA,GAAG,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE;AACvB,IAAI,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AAC5B,IAAI,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACpC,IAAI;AACJ;AACA;AACA;AACA,GAAG;AACH,EAAE;AACF;AACA,CAAC,SAAS,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE;AAC3D,EAAE,IAAI,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,GAAG,aAAa,CAAC;AACvE;AACA,EAAE,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;AACrB,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC;AACf;AACA,EAAE,IAAI,GAAG,IAAI,CAAC,KAAK,UAAU,IAAI,UAAU,CAAC;AAC5C,GAAG,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACjG,EAAE,IAAI,GAAG,IAAI,CAAC,KAAK,UAAU,IAAI,UAAU,CAAC;AAC5C,GAAG,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACjG;AACA,EAAE,OAAO,IAAI,CAAC;AACd,EAAE;AACF;AACA,CAAC,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;AAC/I,CAAC,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,aAAa,EAAE,CAAC,CAAC,CAAC,CAAC;AACtF;AACA,CAAC,IAAI,OAAO,CAAC;AACb;AACA;AACA,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC;AACf,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC;AACf,CAAC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;AAChD;AACA,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC;AAClB;AACA,CAAC,IAAI,aAAa,GAAG,KAAK,CAAC;AAC3B;AACA,CAAC,SAAS,OAAO,CAAC,KAAK,EAAE,YAAY,EAAE;AACvC,EAAE,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC;AACpC;AACA,EAAE,IAAI,IAAI,IAAI,CAAC,EAAE;AACjB,GAAG,OAAO,GAAG,CAAC,CAAC;AACf,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;AACzC,IAAI,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;AACjC;AACA,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACrB,GAAG;AACH,OAAO;AACP,GAAG,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC;AACvB,IAAI,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC;AAChB;AACA,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACnB,GAAG,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC;AAC1B;AACA,GAAG,IAAI,SAAS,GAAG,IAAI,CAAC;AACxB;AACA,GAAG,IAAI,WAAW,IAAI,CAAC,EAAE;AACzB,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;AAC7B;AACA,IAAI,IAAI,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;AAC/C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE;AACpC,KAAK,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnB,IAAI;AACJ;AACA,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,GAAG,SAAS,CAAC;AACjC,GAAG;AACH;AACA,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACnB;AACA,EAAE,YAAY,CAAC,IAAI,CAAC,CAAC;AACrB;AACA,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAClB;AACA;AACA;AACA,EAAE,IAAI,WAAW,IAAI,CAAC,EAAE;AACxB,GAAG,kBAAkB,GAAG,IAAI,CAAC;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,EAAE,IAAI,YAAY,KAAK,KAAK,EAAE;AAC9B,GAAG,IAAI,GAAG,GAAG,MAAM,CAAC;AACpB;AACA,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC;AACpC,IAAI,UAAU,EAAE,CAAC;AACjB;AACA,IAAI,SAAS,CAAC,SAAS,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AAC3C;AACA,GAAG,eAAe,GAAG,eAAe,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC;AACzD,GAAG,eAAe,GAAG,IAAI,CAAC;AAC1B,GAAG,MAAM,EAAE,CAAC;AACZ,GAAG;AACH,EAAE;AACF;AACA,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACxB;AACA,CAAC,SAAS,UAAU,GAAG;AACvB,EAAE,aAAa,GAAG,IAAI,CAAC;AACvB;AACA,EAAE,IAAI,IAAI,EAAE,IAAI,CAAC;AACjB;AACA,EAAE,IAAI,IAAI,IAAI,CAAC,EAAE;AACjB,GAAG,IAAI,OAAO,GAAG,CAAC,EAAE;AACpB,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACrB,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC;AAC/B;AACA,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACvB,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACvB;AACA,IAAI,IAAI,WAAW,IAAI,CAAC,EAAE;AAC1B,KAAK,IAAI,GAAG,EAAE,CAAC;AACf,KAAK,IAAI,GAAG,EAAE,CAAC;AACf,KAAK;AACL,SAAS,IAAI,IAAI,IAAI,IAAI,EAAE;AAC3B,KAAK,IAAI,WAAW,IAAI,CAAC;AACzB,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAC7D,UAAU,IAAI,WAAW,IAAI,CAAC;AAC9B,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AAC/D,UAAU,IAAI,MAAM,CAAC,IAAI;AACzB,MAAM,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;AACtC;AACA,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC1D,KAAK;AACL,IAAI;AACJ,QAAQ;AACR,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;AAC/B,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;AAC/B,IAAI;AACJ,GAAG;AACH;AACA,EAAE,SAAS,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACnC,EAAE;AACF;AACA,CAAC,IAAI,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,CAAC;AAC5F,CAAC,IAAI,QAAQ,CAAC;AACd;AACA,CAAC,SAAS,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE;AAC5D,EAAE,MAAM,KAAK,WAAW,CAAC;AACzB,EAAE,IAAI,OAAO,SAAS,CAAC;AACvB,EAAE,GAAG,QAAQ,MAAM,CAAC;AACpB,EAAE,IAAI,OAAO,WAAW,CAAC;AACzB,EAAE,IAAI,OAAO,OAAO,CAAC;AACrB;AACA,EAAE,IAAI,MAAM,IAAI,SAAS;AACzB,GAAG,GAAG,CAAC,WAAW,GAAG,SAAS,GAAG,MAAM,CAAC;AACxC,EAAE,IAAI,IAAI,IAAI,OAAO;AACrB,GAAG,GAAG,CAAC,SAAS,GAAG,OAAO,GAAG,IAAI,CAAC;AAClC,EAAE,IAAI,KAAK,IAAI,QAAQ;AACvB,GAAG,GAAG,CAAC,SAAS,GAAG,QAAQ,GAAG,KAAK,CAAC;AACpC,EAAE,IAAI,IAAI,IAAI,OAAO;AACrB,GAAG,GAAG,CAAC,QAAQ,GAAG,OAAO,GAAG,IAAI,CAAC;AACjC,EAAE,IAAI,GAAG,IAAI,MAAM;AACnB,GAAG,GAAG,CAAC,OAAO,GAAG,MAAM,GAAG,GAAG,CAAC;AAC9B,EAAE,IAAI,IAAI,IAAI,OAAO;AACrB,GAAG,GAAG,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;AACnC,EAAE;AACF;AACA,CAAC,SAAS,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE;AACpD,EAAE,IAAI,IAAI,IAAI,OAAO;AACrB,GAAG,GAAG,CAAC,SAAS,GAAG,OAAO,GAAG,IAAI,CAAC;AAClC,EAAE,IAAI,IAAI,IAAI,OAAO;AACrB,GAAG,GAAG,CAAC,IAAI,GAAG,OAAO,GAAG,IAAI,CAAC;AAC7B,EAAE,IAAI,KAAK,IAAI,QAAQ;AACvB,GAAG,GAAG,CAAC,SAAS,GAAG,QAAQ,GAAG,KAAK,CAAC;AACpC,EAAE,IAAI,QAAQ,IAAI,WAAW;AAC7B,GAAG,GAAG,CAAC,YAAY,GAAG,WAAW,GAAG,QAAQ,CAAC;AAC7C,EAAE;AACF;AACA,CAAC,SAAS,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,GAAG,CAAC,EAAE;AACtD,EAAE,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,KAAK,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,EAAE;AAC5F,GAAG,IAAI,GAAG,GAAG,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AAC3B,GAAG,IAAI,GAAG,GAAG,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACzC;AACA;AACA,GAAG,IAAI,MAAM,GAAG,KAAK,CAAC,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,KAAK,IAAI,CAAC,GAAG,YAAY,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;AACjJ;AACA;AACA,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,GAAG;AACH,EAAE;AACF;AACA,CAAC,SAAS,SAAS,GAAG;AACtB;AACA;AACA;AACA,EAAE,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AAC1C;AACA,EAAE,KAAK,IAAI,CAAC,IAAI,SAAS,EAAE;AAC3B,GAAG,IAAI,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC1B,GAAG,IAAI,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AAC3B;AACA,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,GAAG,IAAI,IAAI,EAAE;AACvC,IAAI,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACrB;AACA;AACA,IAAI,IAAI,CAAC,IAAI,SAAS;AACtB,KAAK,YAAY,CAAC,IAAI,CAAC,CAAC;AACxB,IAAI;AACJ,QAAQ,IAAI,CAAC,IAAI,SAAS,IAAI,IAAI,IAAI,CAAC,EAAE;AACzC,IAAI,IAAI,OAAO,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,EAAE;AAC1C,KAAK,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACjD,KAAK,GAAG,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACzB,KAAK,GAAG,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACzB,KAAK;AACL,SAAS;AACT,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;AACnB,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC;AACpB,KAAK;AACL,IAAI;AACJ,GAAG;AACH;AACA,EAAE,IAAI,OAAO,GAAG,CAAC,EAAE;AACnB;AACA,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;AAC5B,IAAI,IAAI,IAAI,IAAI,CAAC,EAAE;AACnB,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;AACrB,KAAK,IAAI,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC5B,KAAK,IAAI,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AAC7B;AACA,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE;AACjB,MAAM,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACxD;AACA,MAAM,GAAG,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAC1B,MAAM,GAAG,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAC1B;AACA,MAAM,EAAE,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,MAAM,EAAE,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC;AACA;AACA,MAAM,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE;AACvB;AACA,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG;AAChC,QAAQ,EAAE,EAAE,CAAC;AACb,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG;AAChC,QAAQ,EAAE,EAAE,CAAC;AACb,OAAO;AACP;AACA,MAAM,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;AACxB,MAAM,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;AACxB,MAAM;AACN,UAAU,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI;AAC9B,MAAM,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;AAC/C;AACA,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACpB,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACpB,KAAK;AACL,SAAS;AACT,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE;AAChB,MAAM,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE;AAC5B;AACA,OAAO,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC;AACzC,OAAO,IAAI,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC;AACpC,OAAO,IAAI,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC;AACpC,OAAO,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACtC;AACA,OAAO,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;AAC3F,OAAO,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;AAC3F;AACA;AACA,OAAO,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AAC1B,OAAO,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AAC1B,OAAO;AACP,MAAM;AACN,KAAK;AACL,IAAI,CAAC,CAAC;AACN;AACA;AACA,GAAG,KAAK,IAAI,CAAC,IAAI,SAAS,EAAE;AAC5B,IAAI,IAAI,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC3B,IAAI,IAAI,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AAC5B;AACA,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,KAAK,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,EAAE;AAC9D,KAAK,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK;AAC3B,MAAM,IAAI;AACV,MAAM,GAAG,CAAC,GAAG,KAAK,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG;AACtC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG;AACtC,MAAM,CAAC;AACP,MAAM,CAAC;AACP,KAAK,GAAG,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACzB,KAAK,GAAG,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACzB,KAAK;AACL,IAAI;AACJ,GAAG;AACH;AACA;AACA,EAAE,KAAK,IAAI,CAAC,IAAI,SAAS,EAAE;AAC3B,GAAG,IAAI,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC1B;AACA,GAAG,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,EAAE;AACzB,IAAI,IAAI,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACnC;AACA,IAAI,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI;AACxB,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC;AAC9B,SAAS;AACT,KAAK,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACzD,KAAK,GAAG,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACzB,KAAK,GAAG,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACzB,KAAK;AACL,IAAI;AACJ,GAAG;AACH;AACA,EAAE,IAAI,OAAO,GAAG,EAAE,CAAC;AACnB,EAAE,IAAI,UAAU,GAAG,KAAK,CAAC;AACzB;AACA,EAAE,KAAK,IAAI,CAAC,IAAI,SAAS,EAAE;AAC3B,GAAG,IAAI,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC1B,GAAG,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACtB;AACA,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE;AAC/C,IAAI,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;AACrB,IAAI,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;AACrB;AACA,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;AACzB;AACA,IAAI,EAAE,CAAC,IAAI,GAAG,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;AACzF,IAAI,EAAE,CAAC,IAAI,GAAG,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC;AACzF;AACA,IAAI,OAAO,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,IAAI,CAAC;AACnC,IAAI;AACJ,GAAG;AACH;AACA,EAAE,IAAI,UAAU,EAAE;AAClB;AACA,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;AAC5B,IAAI,IAAI,IAAI,IAAI,CAAC,EAAE;AACnB,KAAK,IAAI,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC;AAC3B,MAAM,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;AACtB,KAAK;AACL,SAAS;AACT,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;AACzB,MAAM,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;AACtB,KAAK;AACL,IAAI,CAAC,CAAC;AACN;AACA,GAAG,KAAK,IAAI,CAAC,IAAI,OAAO,EAAE;AAC1B,IAAI,kBAAkB,GAAG,IAAI,CAAC;AAC9B,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;AACxB,IAAI;AACJ;AACA,GAAG,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC;AACtC,IAAI,eAAe,GAAG,eAAe,GAAG,IAAI,CAAC;AAC7C,GAAG;AACH;AACA,EAAE,KAAK,IAAI,CAAC,IAAI,UAAU;AAC1B,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACxB,EAAE;AACF;AACA;AACA,CAAC,SAAS,YAAY,CAAC,KAAK,EAAE;AAC9B,EAAE,IAAI,GAAG,GAAG,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,OAAO,GAAG,CAAC,CAAC,CAAC;AAC1C,EAAE,IAAI,GAAG,GAAG,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,OAAO,GAAG,CAAC,CAAC,CAAC;AAC1C;AACA,EAAE,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC;AACtC,GAAG,GAAG,EAAE,CAAC;AACT;AACA,EAAE,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,GAAG,GAAG,OAAO,GAAG,CAAC;AAChD,GAAG,GAAG,EAAE,CAAC;AACT;AACA,EAAE,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACpB,EAAE;AACF;AACA,CAAC,SAAS,UAAU,GAAG;AACvB,EAAE,IAAI,OAAO,GAAG,CAAC,EAAE;AACnB,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;AAC5B,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE;AACzB,KAAmB,eAAe,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAC7C,KAAoB,eAAe,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AAC7C;AACA,KAAK,IAAI,CAAC,CAAC,MAAM,IAAI,IAAI,EAAE;AAC3B,MAAM,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACjF,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,MAAM;AACN,KAAK;AACL,IAAI,CAAC,CAAC;AACN;AACA,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;AAC5B,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE;AACzB,KAAK,IAAI,QAAQ,IAAI,CAAC,CAAC,KAAK;AAC5B,MAAM,GAAG,CAAC,WAAW,GAAG,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC;AAC3C;AACA,KAAmB,CAAC,CAAC,MAAM,IAAI,IAAI,IAAI,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAC1D;AACA,KAAsB;AACtB,MAAM,IAAI,KAAK,GAAG,CAAC,CAAC,MAAM,IAAI,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;AAC1D;AACA,MAAM,IAAI,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;AACvD,MAAM,IAAI,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AACvD;AACA,MAAM,IAAI,IAAI,IAAI,IAAI,EAAE;AACxB,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;AAC/D,OAAO,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AACzB,OAAO;AACP,MAAM;AACN;AACA,KAAK,IAAI,QAAQ,IAAI,CAAC;AACtB,MAAM,GAAG,CAAC,WAAW,GAAG,QAAQ,GAAG,CAAC,CAAC;AACrC;AACA,KAAK,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;AAC3B,KAAK;AACL,IAAI,CAAC,CAAC;AACN,GAAG;AACH,EAAE;AACF;AACA,CAAC,SAAS,eAAe,CAAC,EAAE,EAAE,OAAO,EAAE;AACvC,EAAE,IAAI,CAAC,GAAG,OAAO,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AACnD;AACA,EAAE,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACjC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAC/B,EAAE;AACF;AACA,CAAC,SAAS,QAAQ,CAAC,EAAE,EAAE,OAAO,EAAE;AAChC,EAAE,IAAI,CAAC,GAAG,OAAO,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;AACnD;AACA,EAAE,IAAI;AACN,GAAG,MAAM;AACT,GAAG,IAAI;AACP,GAAG,IAAI,EAAE,QAAQ;AACjB,GAAG,KAAK;AACR;AACA,GAAG,OAAO,EAAE,WAAW,GAAG,CAAC,CAAC,OAAO;AACnC,GAAG,KAAK,IAAI,SAAS,KAAK,CAAC,CAAC,KAAK;AACjC,GAAG,MAAM,GAAG,KAAK,SAAS,CAAC,CAAC,KAAK;AACjC,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC;AACf;AACA,EAAE,KAAK,GAAG,QAAQ,CAAC,KAAK,GAAG,OAAO,EAAE,CAAC,CAAC,CAAC;AACvC;AACA,EAAE,IAAI,UAAU,GAAG,IAAI,CAAC;AACxB,EAAE,IAAI,MAAM,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC;AAC/B;AACA,EAAE,IAAI,OAAO,IAAI,SAAS,IAAI,IAAI;AAClC,GAAG,SAAS,GAAG,KAAK,GAAG,CAAC,GAAG,MAAM,GAAG,WAAW,CAAC;AAChD;AACA,EAAE,IAAI,QAAQ,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,MAAM,GAAG,CAAC,CAAC;AAC9C;AACA,EAAE,QAAQ,IAAI,GAAG,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAC5C;AACA,EAAE,IAAI,CAAC,OAAO,EAAE;AAChB,GAAG,IAAI,GAAG,GAAG,OAAO,GAAG,KAAK,GAAG,CAAC;AAChC,IAAI,GAAG,GAAG,OAAO,GAAG,KAAK,GAAG,CAAC;AAC7B,IAAI,GAAG,GAAG,OAAO,GAAG,KAAK;AACzB,IAAI,GAAG,GAAG,OAAO,GAAG,KAAK,CAAC;AAC1B;AACA,GAAG,UAAU,GAAG,IAAI,MAAM,EAAE,CAAC;AAC7B,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACvC,GAAG;AACH;AACA;AACA,EAAE,IAAI,OAAO;AACb,GAAG,UAAU,CAAC,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;AAC3F;AACA,GAAG,UAAU,CAAC,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;AAC3G;AACA,EAAE,QAAQ,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC;AAC9C,EAAE;AACF;AACA,CAAC,SAAS,UAAU,CAAC,EAAE,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE;AAClI,EAAE,IAAI,aAAa,GAAG,KAAK,CAAC;AAC5B;AACA;AACA;AACA,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK;AAC3B;AACA,GAAG,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE;AAC1B,IAAI,IAAI,SAAS,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,IAAI,IAAI,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC;AACA,IAAI,IAAI,QAAQ,GAAG,CAAC,SAAS,CAAC,MAAM,IAAI,SAAS,EAAE,IAAI,CAAC;AACxD;AACA,IAAI,IAAI,KAAK,CAAC,QAAQ,CAAC;AACvB,KAAK,QAAQ,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AACvD;AACA,IAAI,IAAI,SAAS,CAAC;AAClB;AACA,IAAI,IAAI,UAAU,GAAG,IAAI,CAAC;AAC1B;AACA;AACA,IAAI,IAAI,SAAS,CAAC,IAAI,IAAI,QAAQ,IAAI,OAAO,CAAC,SAAS,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE;AAClE,KAAK,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,SAAS,CAAC;AAChD,KAAK,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC;AACvC,KAAK;AACL;AACA,KAAK,QAAQ,GAAG,IAAI,CAAC;AACrB;AACA,IAAI,UAAU,CAAC,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;AAC9I;AACA,IAAI,aAAa,GAAG,IAAI,CAAC;AACzB,IAAI;AACJ,GAAG,CAAC,CAAC;AACL;AACA,EAAE,IAAI,CAAC,aAAa;AACpB,GAAG,UAAU,CAAC,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;AACvH,EAAE;AACF;AACA,CAAC,MAAM,gBAAgB,GAAG,cAAc,GAAG,gBAAgB,CAAC;AAC5D;AACA,CAAC,SAAS,UAAU,CAAC,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE;AACnJ,EAAE,WAAW,CAAC,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;AACpE;AACA,EAAE,IAAI,UAAU,IAAI,QAAQ,IAAI,QAAQ,EAAE;AAC1C,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;AACd,GAAG,UAAU,IAAI,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACtC,GAAG,QAAQ,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAClC,GAAG;AACH;AACA,EAAE,IAAI,QAAQ,EAAE;AAChB,GAAG,IAAI,CAAC,KAAK,GAAG,gBAAgB,KAAK,gBAAgB,EAAE;AACvD,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACvB,IAAI,SAAS,IAAI,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACrC,IAAI,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AAChC,IAAI,QAAQ,CAAC,WAAW,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;AACjD,IAAI;AACJ,QAAQ,IAAI,KAAK,GAAG,gBAAgB,EAAE;AACtC,IAAI,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AAChC,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACvB,IAAI,QAAQ,CAAC,WAAW,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;AACjD,IAAI;AACJ,QAAQ,IAAI,KAAK,GAAG,cAAc,EAAE;AACpC,IAAI,GAAG,CAAC,IAAI,EAAE,CAAC;AACf,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACvB,IAAI,SAAS,IAAI,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACrC,IAAI,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AAChC,IAAI,GAAG,CAAC,OAAO,EAAE,CAAC;AAClB,IAAI,QAAQ,CAAC,WAAW,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;AACjD,IAAI;AACJ,GAAG;AACH,OAAO;AACP,GAAG,MAAM,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AAC/B,GAAG,QAAQ,CAAC,WAAW,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;AAChD,GAAG;AACH;AACA,EAAE,IAAI,UAAU,IAAI,QAAQ,IAAI,QAAQ;AACxC,GAAG,GAAG,CAAC,OAAO,EAAE,CAAC;AACjB,EAAE;AACF;AACA,CAAC,SAAS,QAAQ,CAAC,WAAW,EAAE,UAAU,EAAE,SAAS,EAAE;AACvD,EAAE,IAAI,SAAS,GAAG,CAAC,EAAE;AACrB,GAAG,IAAI,UAAU,YAAY,GAAG,EAAE;AAClC,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,UAAU,EAAE,WAAW,KAAK;AACpD,KAAK,GAAG,CAAC,WAAW,GAAG,SAAS,GAAG,WAAW,CAAC;AAC/C,KAAK,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AAC5B,KAAK,CAAC,CAAC;AACP,IAAI;AACJ;AACA,IAAI,UAAU,IAAI,IAAI,IAAI,WAAW,IAAI,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AAChE,GAAG;AACH,EAAE;AACF;AACA,CAAC,SAAS,MAAM,CAAC,SAAS,EAAE,QAAQ,EAAE;AACtC,EAAE,IAAI,QAAQ,YAAY,GAAG,EAAE;AAC/B,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,SAAS,KAAK;AAC7C,IAAI,GAAG,CAAC,SAAS,GAAG,OAAO,GAAG,SAAS,CAAC;AACxC,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACvB,IAAI,CAAC,CAAC;AACN,GAAG;AACH;AACA,GAAG,QAAQ,IAAI,IAAI,IAAI,SAAS,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACvD,EAAE;AACF;AACA,CAAC,SAAS,YAAY,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE;AACnD,EAAE,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;AAC3B;AACA,EAAE,IAAI,SAAS,CAAC;AAChB;AACA,EAAE,IAAI,OAAO,IAAI,CAAC;AAClB,GAAG,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACtB,OAAO;AACP,GAAG,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;AAC7E,GAAG,IAAI,KAAK,MAAM,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AACvF,GAAG,SAAS,MAAM,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;AAC/D,GAAG;AACH;AACA,EAAE,QAAQ,IAAI,CAAC,MAAM,GAAG,SAAS,EAAE;AACnC,EAAE;AACF;AACA,CAAC,SAAS,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,EAAE;AACtF,EAAE,IAAI,MAAM,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC;AAC/B;AACA,EAAE,OAAO,IAAI,CAAC,IAAI,GAAG,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AAChD;AACA,EAAE,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;AAChD;AACA,EAAE,GAAG,CAAC,SAAS,EAAE,CAAC;AAClB;AACA,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAC1E;AACA,EAAE,IAAI,GAAG,IAAI,CAAC,EAAE;AAChB,GAAG,EAAE,GAAG,IAAI,CAAC;AACb,GAAG,EAAE,GAAG,IAAI,CAAC;AACb,GAAG;AACH,OAAO;AACP,GAAG,EAAE,GAAG,IAAI,CAAC;AACb,GAAG,EAAE,GAAG,IAAI,CAAC;AACb,GAAG;AACH;AACA,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;AACzB,IAAI,IAAI,GAAG,IAAI,CAAC;AAChB,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACvB;AACA,KAAK,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACvB;AACA,IAAI,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACvB,IAAI,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACvB,IAAI;AACJ,GAAG;AACH;AACA,EAAE,GAAG,CAAC,MAAM,EAAE,CAAC;AACf;AACA,EAAE,OAAO,IAAI,CAAC,IAAI,GAAG,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC;AAClD,EAAE;AACF;AACA,CAAC,SAAS,QAAQ,CAAC,QAAQ,EAAE;AAC7B;AACA;AACA,EAAE,IAAI,SAAS,GAAG,IAAI,CAAC;AACvB;AACA,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK;AAC5B,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI;AACjB,IAAI,OAAO;AACX;AACA,GAAG,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClC;AACA,GAAG,IAAI,KAAK,CAAC,GAAG,IAAI,IAAI,EAAE;AAC1B,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;AACpB,KAAK,SAAS,GAAG,KAAK,CAAC;AACvB,KAAK,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACxB,KAAK,YAAY,CAAC,KAAK,CAAC,CAAC;AACzB,KAAK;AACL,IAAI,OAAO;AACX,IAAI;AACJ,QAAQ;AACR,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACrB,KAAK,SAAS,GAAG,KAAK,CAAC;AACvB,KAAK,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACvB,KAAK,YAAY,CAAC,KAAK,CAAC,CAAC;AACzB,KAAK;AACL,IAAI;AACJ;AACA,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACxB,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;AACtB;AACA,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;AAC1B;AACA,GAAG,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,YAAY,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,UAAU,GAAG,UAAU,CAAC,CAAC;AACvF;AACA,GAAG,IAAI,MAAM,IAAI,CAAC;AAClB,IAAI,OAAO;AACX;AACA;AACA,GAAG,IAAI,QAAQ,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC;AACnC;AACA,GAAG,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;AACxF;AACA;AACA;AACA,GAAG,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;AACxE,GAAG,IAAI,IAAI,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;AACjF;AACA,GAAG,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;AAC9G;AACA;AACA,GAAG,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;AACvE;AACA,GAAG,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC;AAC5B;AACA,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC;AAC3D;AACA,GAAG,IAAI,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,IAAI,OAAO;AAC/C,IAAI,SAAS,GAAG,KAAK,CAAC;AACtB,GAAG,CAAC,CAAC;AACL;AACA,EAAE,OAAO,SAAS,CAAC;AACnB,EAAE;AACF;AACA,CAAC,SAAS,WAAW,CAAC,QAAQ,EAAE;AAChC,EAAE,IAAI,SAAS,GAAG,IAAI,CAAC;AACvB;AACA,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;AAC5B,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;AAChD;AACA,GAAG,IAAI,EAAE,IAAI,QAAQ,CAAC,CAAC,CAAC;AACxB,IAAI,SAAS,GAAG,KAAK,CAAC;AACtB;AACA,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACpB,GAAG,CAAC,CAAC;AACL;AACA,EAAE,OAAO,SAAS,CAAC;AACnB,EAAE;AACF;AACA,CAAC,SAAS,YAAY,GAAG;AACzB,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxC,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACtB;AACA,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK;AAChC,IAAI,SAAS;AACb;AACA,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACxB,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;AACtB;AACA,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;AACZ;AACA,GAAG,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACxC;AACA,GAAG,IAAI,QAAQ,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAClD;AACA;AACA,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE;AACnB,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC5C,IAAI,IAAI,QAAQ,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,QAAQ,IAAI,OAAO,CAAC,CAAC;AAC5D;AACA,IAAI,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC;AACnF;AACA,IAAI,GAAG,CAAC,IAAI,EAAE,CAAC;AACf;AACA,IAAI,IAAI,GAAG,IAAI,CAAC,EAAE;AAClB,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACf;AACA,KAAK,GAAG,CAAC,SAAS;AAClB,MAAM,QAAQ;AACd,MAAM,KAAK,CAAC,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC;AAClC,MAAM,CAAC;AACP,KAAK,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;AAC5C;AACA,KAAK;AACL,SAAS;AACT,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC;AACtC,KAAK,CAAC,GAAG,QAAQ,CAAC;AAClB,KAAK;AACL;AACA,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACnC;AACA,IAAI,GAAG,CAAC,OAAO,EAAE,CAAC;AAClB,IAAI;AACJ;AACA,GAAG,IAAI,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;AACrC;AACA,GAAG,IAAI,MAAM,IAAI,CAAC;AAClB,IAAI,SAAS;AACb;AACA,GAAG,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAClC;AACA,GAAG,IAAI,OAAO,GAAG,GAAG,IAAI,CAAC,GAAG,OAAO,GAAG,OAAO,CAAC;AAC9C,GAAG,IAAI,OAAO,GAAG,GAAG,IAAI,CAAC,GAAG,OAAO,GAAG,OAAO,CAAC;AAC9C;AACA,GAAG,IAAI,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,GAAG,GAAG,OAAO,CAAC,CAAC;AAC3C;AACA,GAAG,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AAC9B;AACA;AACA;AACA,GAAG,IAAI,MAAM,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC;AACxE,GAAG,IAAI,IAAI,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;AACjF;AACA,GAAG,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAC1B,GAAG,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC5B,GAAG,IAAI,QAAQ,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;AAC/D;AACA;AACA,GAAG,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC;AACtC;AACA,GAAG,IAAI,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC;AAC/C,GAAG,IAAI,QAAQ,GAAG,CAAC,QAAQ,GAAG,OAAO,IAAI,QAAQ,CAAC;AAClD,GAAG,IAAI,QAAQ,GAAG,OAAO,GAAG,QAAQ,CAAC;AACrC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC;AAC1C,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC;AAC1C;AACA,GAAG,IAAI,IAAI,WAAW,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACnC,GAAG,IAAI,SAAS,MAAM,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,IAAI;AAC5C,sBAAsB,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK;AAC7C,sBAAsB,KAAK,GAAG,CAAC,GAAG,IAAI;AACtC,sBAAsB,KAAK,GAAG,CAAC,GAAG,KAAK;AACvC,sBAAsB,GAAG,IAAI,CAAC,GAAG,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;AACrE,GAAG,IAAI,YAAY,GAAG,KAAK;AAC3B,sBAAsB,GAAG,IAAI,CAAC,GAAG,QAAQ,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,KAAK,MAAM,CAAC;AACvE;AACA,GAAG,YAAY,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,YAAY,CAAC,CAAC;AAC1D;AACA,GAAG,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;AAChD;AACA,GAAG,IAAI,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;AACnF;AACA,GAAG,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AAC9B;AACA,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC5C,IAAI,IAAI,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AACzB;AACA,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE;AACrB,KAAK,IAAI,GAAG,IAAI,CAAC;AACjB,MAAM,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AACrB;AACA,MAAM,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AACrB;AACA,KAAK,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;AACpB;AACA,KAAK,IAAI,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACtE;AACA,KAAK,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC7C,MAAM,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAC3B;AACA,MAAM,IAAI,KAAK,EAAE;AACjB,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;AAClB,OAAO,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC;AAC5C,OAAO,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AACzB,OAAO,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAChC,OAAO,GAAG,CAAC,OAAO,EAAE,CAAC;AACrB,OAAO;AACP;AACA,OAAO,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC;AACjD,MAAM;AACN,KAAK;AACL,IAAI;AACJ;AACA;AACA,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE;AACnB,IAAI,cAAc;AAClB,KAAK,OAAO;AACZ,KAAK,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC;AAChD,KAAK,GAAG;AACR,KAAK,IAAI;AACT,KAAK,OAAO;AACZ,KAAK,QAAQ;AACb,KAAK,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,EAAE,CAAC,CAAC;AACvC,KAAK,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;AAC1B,KAAK,KAAK,CAAC,IAAI;AACf,KAAK,KAAK,CAAC,GAAG;AACd,KAAK,CAAC;AACN,IAAI;AACJ;AACA;AACA,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACxB;AACA,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE;AAClB,IAAI,cAAc;AAClB,KAAK,OAAO;AACZ,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC;AAC/C,KAAK,GAAG;AACR,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;AACrB,KAAK,GAAG,IAAI,CAAC,GAAG,OAAO,GAAG,OAAO;AACjC,KAAK,GAAG,IAAI,CAAC,GAAG,OAAO,GAAG,OAAO;AACjC,KAAK,QAAQ,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,EAAE,CAAC,CAAC;AACtC,KAAK,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;AACzB,KAAK,IAAI,CAAC,IAAI;AACd,KAAK,IAAI,CAAC,GAAG;AACb,KAAK,CAAC;AACN,IAAI;AACJ;AACA,GAAG,IAAI,MAAM,CAAC,IAAI,EAAE;AACpB,IAAI,cAAc;AAClB,KAAK,CAAC,OAAO,CAAC;AACd,KAAK,CAAC,CAAC,CAAC;AACR,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;AACrB,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;AACrB,KAAK,GAAG,IAAI,CAAC,GAAG,OAAO,GAAG,OAAO;AACjC,KAAK,GAAG,IAAI,CAAC,GAAG,OAAO,GAAG,OAAO;AACjC,KAAK,QAAQ,CAAC,MAAM,CAAC,KAAK,GAAG,OAAO,EAAE,CAAC,CAAC;AACxC,KAAK,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3B,KAAK,MAAM,CAAC,IAAI;AAChB,KAAK,MAAM,CAAC,GAAG;AACf,KAAK,CAAC;AACN,IAAI;AACJ,GAAG;AACH;AACA,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AACnB,EAAE;AACF;AACA,CAAC,SAAS,YAAY,CAAC,MAAM,EAAE;AAC/B;AACA;AACA,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;AAC3B,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE;AACd,IAAI,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;AACpB;AACA,IAAI,IAAI,MAAM,EAAE;AAChB,KAAK,IAAI,IAAI,IAAI,CAAC,EAAE;AACpB,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC;AACnB,MAAM,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC;AACnB,MAAM;AACN,UAAU;AACV,MAAM,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI;AAC5B,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC;AACpB,OAAO,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC;AACpB,OAAO,CAAC,CAAC;AACT,MAAM;AACN,KAAK;AACL,IAAI;AACJ,GAAG,CAAC,CAAC;AACL,EAAE;AACF;AACA,CAAC,IAAI,YAAY,GAAG,KAAK,CAAC;AAC1B;AACA,CAAC,SAAS,MAAM,GAAG;AACnB,EAAE,IAAI,CAAC,YAAY,EAAE;AACrB,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC;AACtB,GAAG,YAAY,GAAG,IAAI,CAAC;AACvB,GAAG;AACH,EAAE;AACF;AACA,CAAC,SAAS,OAAO,GAAG;AACpB;AACA;AACA,EAAE,IAAI,eAAe,EAAE;AACvB,GAAG,SAAS,EAAE,CAAC;AACf,GAAG,eAAe,GAAG,KAAK,CAAC;AAC3B,GAAG;AACH;AACA,EAAE,IAAI,kBAAkB,EAAE;AAC1B,GAAG,YAAY,EAAE,CAAC;AAClB,GAAG,kBAAkB,GAAG,KAAK,CAAC;AAC9B,GAAG;AACH;AACA,EAAE,IAAI,aAAa,EAAE;AACrB,GAAG,UAAU,CAAC,KAAK,EAAE,IAAI,IAAI,UAAU,CAAC,CAAC;AACzC,GAAG,UAAU,CAAC,KAAK,EAAE,GAAG,KAAK,UAAU,CAAC,CAAC;AACzC,GAAG,UAAU,CAAC,KAAK,EAAE,KAAK,GAAG,UAAU,CAAC,CAAC;AACzC,GAAG,UAAU,CAAC,KAAK,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;AACzC;AACA,GAAG,UAAU,CAAC,IAAI,EAAE,IAAI,KAAK,UAAU,CAAC,CAAC;AACzC,GAAG,UAAU,CAAC,IAAI,EAAE,GAAG,MAAM,UAAU,CAAC,CAAC;AACzC,GAAG,UAAU,CAAC,IAAI,EAAE,KAAK,IAAI,UAAU,CAAC,CAAC;AACzC,GAAG,UAAU,CAAC,IAAI,EAAE,MAAM,GAAG,UAAU,CAAC,CAAC;AACzC;AACA,GAAG,UAAU,CAAC,IAAI,EAAE,KAAK,IAAI,UAAU,CAAC,CAAC;AACzC,GAAG,UAAU,CAAC,IAAI,EAAE,MAAM,GAAG,UAAU,CAAC,CAAC;AACzC;AACA;AACA;AACA,GAAG,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,UAAU,GAAG,OAAO,CAAC,CAAC;AAC5C,GAAG,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC,UAAU,GAAG,OAAO,CAAC,CAAC;AAC5C;AACA,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK;AACvD,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE;AACrB,KAAK,IAAI,KAAK,EAAE;AAChB,MAAM,IAAI,SAAS,IAAI,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;AAC7D,MAAM,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;AAC/B;AACA,MAAM,UAAU,CAAC,GAAG,EAAE,IAAI,GAAG,MAAM,KAAK,KAAK,KAAK,IAAI,GAAG,SAAS,CAAC,CAAC;AACpE,MAAM,UAAU,CAAC,GAAG,EAAE,IAAI,GAAG,OAAO,IAAI,QAAQ,EAAE,KAAK,CAAC,CAAC;AACzD,MAAM,UAAU,CAAC,GAAG,EAAE,IAAI,GAAG,KAAK,MAAM,MAAM,IAAI,IAAI,GAAG,UAAU,GAAG,UAAU,CAAC,CAAC;AAClF,MAAM,UAAU,CAAC,GAAG,EAAE,IAAI,GAAG,QAAQ,GAAG,OAAO,GAAG,IAAI,GAAG,UAAU,GAAG,UAAU,CAAC,CAAC;AAClF;AACA,MAAM,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,MAAM;AACN;AACA,MAAM,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACzB,KAAK;AACL,IAAI,CAAC,CAAC;AACN;AACA;AACA,GAAG,SAAS,GAAG,OAAO,GAAG,QAAQ,GAAG,OAAO,GAAG,MAAM,GAAG,OAAO,GAAG,QAAQ,GAAG,WAAW,GAAG,OAAO,GAAG,IAAI,CAAC;AACzG,GAAG,QAAQ,GAAG,CAAC,CAAC;AAChB;AACA,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;AAClB;AACA,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;AACnB;AACA,GAAG,aAAa,GAAG,KAAK,CAAC;AACzB,GAAG;AACH;AACA,EAAE,IAAI,UAAU,GAAG,CAAC,IAAI,UAAU,GAAG,CAAC,EAAE;AACxC,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;AAC9C,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;AACrB,GAAG,SAAS,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;AACjC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;AAChB,GAAG;AACH;AACA,EAAE,IAAI,MAAM,CAAC,IAAI,IAAI,eAAe,EAAE;AACtC,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;AACrB,GAAG,eAAe,GAAG,KAAK,CAAC;AAC3B,GAAG;AACH;AACA,EAAE,IAAI,MAAM,CAAC,IAAI,IAAI,eAAe,EAAE;AACtC,GAAG,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AACnC,GAAG,eAAe,GAAG,KAAK,CAAC;AAC3B,GAAG;AACH;AACA,EAAE,IAAmB,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,IAAI,eAAe,EAAE;AACpE,GAAG,SAAS,EAAE,CAAC;AACf,GAAG,eAAe,GAAG,KAAK,CAAC;AAC3B,GAAG;AACH;AACA,EAAE,IAAI,CAAC,KAAK,EAAE;AACd,GAAG,KAAK,GAAG,IAAI,CAAC;AAChB,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AACnB;AACA,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;AACjB,GAAG;AACH;AACA,EAAE,aAAa,GAAG,KAAK,CAAC;AACxB;AACA,EAAE,YAAY,GAAG,KAAK,CAAC;AACvB,EAAE;AACF;AACA,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,YAAY,EAAE,UAAU,KAAK;AAC7C,EAAE,kBAAkB,GAAG,UAAU,IAAI,KAAK,CAAC;AAC3C;AACA,EAAE,IAAI,YAAY,KAAK,KAAK;AAC5B,GAAG,SAAS,CAAC,SAAS,EAAE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC;AAChD;AACA,GAAG,MAAM,EAAE,CAAC;AACZ,EAAE,CAAC;AACH;AACA;AACA;AACA;AACA,CAAC,SAAS,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE;AAC9B,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACvB;AACA,EAAE,IAAI,EAAE,CAAC,IAAI,IAAI,IAAI,EAAE;AACvB,GAAG,IAAI,OAAO,IAAI,CAAC,EAAE;AACrB,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACzD,IAAI,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACzB,IAAI,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACzB,IAAI;AACJ;AACA,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE;AAC5B,IAAI,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC;AACxB,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;AACxB,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;AACpB,IAAI;AACJ;AACA,GAAG,IAAI,OAAO,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,KAAK;AACzF,IAAI,OAAO;AACX;AACA,GAAG,IAAI,GAAG,IAAI,SAAS,EAAE;AACzB,IAAI,IAAI,EAAE,CAAC,KAAK,IAAI,CAAC,IAAI,OAAO,GAAG,CAAC,EAAE;AACtC,KAAK,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,KAAK,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C;AACA,KAAK,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG;AAC7B,MAAM,IAAI,CAAC,GAAG,EAAE,CAAC;AACjB,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA,GAAG,UAAU,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;AAC1B;AACA,GAAG,eAAe,GAAG,IAAI,CAAC;AAC1B,GAAG,MAAM,EAAE,CAAC;AACZ,GAAG;AACH,EAAE;AACF;AACA,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC1B;AACA;AACA;AACA,CAAC,IAAI,OAAO,CAAC;AACb,CAAC,IAAI,OAAO,CAAC;AACb,CAAC,IAAI,OAAO,CAAC;AACb,CAAC,IAAI,OAAO,CAAC;AACb;AACA;AACA,CAAC,IAAI,aAAa,CAAC;AACnB,CAAC,IAAI,YAAY,CAAC;AAClB;AACA;AACA,CAAC,IAAI,UAAU,CAAC;AAChB,CAAC,IAAI,SAAS,CAAC;AACf;AACA;AACA,CAAC,IAAI,aAAa,CAAC;AACnB,CAAC,IAAI,YAAY,CAAC;AAClB;AACA;AACA,CAAC,IAAI,UAAU,CAAC;AAChB,CAAC,IAAI,SAAS,CAAC;AACf;AACA,CAAC,IAAI,QAAQ,GAAG,KAAK,CAAC;AACtB;AACA,CAAC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AAC1B;AACA,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;AACpB,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;AACpB;AACA,CAAC,IAAI,MAAM,CAAC,IAAI,EAAE;AAClB,EAAE,IAAI,MAAM,CAAC,CAAC;AACd,GAAG,OAAO,GAAG,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AACtC,EAAE,IAAI,MAAM,CAAC,CAAC;AACd,GAAG,OAAO,GAAG,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AACtC;AACA,EAAE,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE;AACvB,GAAG,OAAO,GAAG,OAAO,CAAC;AACrB,GAAG,OAAO,GAAG,OAAO,CAAC;AACrB,GAAG;AACH,OAAO;AACP,GAAG,OAAO,GAAG,OAAO,CAAC;AACrB,GAAG,OAAO,GAAG,OAAO,CAAC;AACrB,GAAG;AACH;AACA,EAAE,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC;AAC3B,EAAE,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC;AACzB,EAAE;AACF;AACA,CAAC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrC,EAAE,IAAI,IAAI,IAAI;AACd,EAAE,IAAI,IAAI,IAAI;AACd,EAAE,IAAI,IAAI,CAAC;AACX,EAAE,KAAK,GAAG,CAAC;AACX,EAAE,GAAG,KAAK,CAAC;AACX,EAAE,MAAM,EAAE,CAAC;AACX,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACjB;AACA,CAAC,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC;AACrF;AACA,CAAC,SAAS,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE;AACjC,EAAE,IAAI,MAAM,CAAC,IAAI,EAAE;AACnB,GAAG,KAAK,IAAI,IAAI,IAAI,IAAI,EAAE;AAC1B,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;AAC9B;AACA,IAAI,IAAI,IAAI,IAAI,UAAU;AAC1B,KAAK,UAAU,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7C,IAAI;AACJ;AACA,GAAG,KAAK,KAAK,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC;AACxC,GAAG;AACH,EAAE;AACF;AACA,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC5B;AACA,CAAC,SAAS,SAAS,CAAC,CAAC,EAAE,KAAK,EAAE;AAC9B,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACpB,EAAE,IAAI,KAAK,GAAG,UAAU,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AAChD;AACA,EAAE,IAAI,CAAC,CAAC,IAAI;AACZ,GAAG,KAAK,IAAI,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACjC,OAAO;AACP,GAAG,KAAK,IAAI,QAAQ,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACjC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;AACnF,GAAG;AACH,EAAE;AACF;AACA,CAAC,SAAS,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;AACnC,EAAE,QAAQ,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AAC5B,EAAE;AACF;AACA,CAAC,SAAS,SAAS,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE;AAC1C;AACA;AACA,EAAE,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI;AACxB,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AACf;AACA,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;AACzB,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK;AAC7B,IAAI,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE;AAC1C,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AACxB,KAAoB,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7C;AACA,KAAK,SAAS,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACpE,KAAK,MAAM,EAAE,CAAC;AACd,KAAK;AACL,IAAI,CAAC,CAAC;AACN,GAAG;AACH;AACA,EAAE,KAAK,KAAK,KAAK,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AAChD;AACA,EAAE,IAAI,IAAI,OAAO,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AAC9C,EAAE;AACF;AACA,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC5B;AACA,CAAC,SAAS,OAAO,CAAC,EAAE,EAAE,IAAI,EAAE;AAC5B,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AAC1B,EAAE;AACF;AACA,CAAC,SAAS,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE;AAC5B,EAAE,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;AAC1C,EAAE,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAClC,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;AACtC,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;AAC5B,EAAE;AACF;AACA,CAAC,SAAS,OAAO,CAAC,EAAE,EAAE;AACtB,EAAE,IAAI,EAAE,IAAI,IAAI;AAChB,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AACpB;AACA,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACvB,EAAE;AACF;AACA,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACxB,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACxB,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACxB;AACA,CAAC,SAAS,QAAQ,CAAC,CAAC,EAAE,KAAK,EAAE;AAC7B,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;AAC1B;AACA,EAAE,IAAI,MAAM,CAAC,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC;AACjC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;AACtC;AACA,EAAE,IAAmB,UAAU,IAAI,UAAU,CAAC,CAAC,CAAC;AAChD,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;AACvC,EAAE;AACF;AACA;AACA,CAAC,IAAI,WAAW,CAAC;AACjB,CAAC,IAAI,aAAa,CAAC;AACnB,CAAC,IAAI,aAAa,CAAC;AACnB,CAAC,MAAM,UAAU,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACnC;AACA,CAAC,SAAS,QAAQ,CAAC,CAAC,EAAE;AACtB,EAAE,IAAI,CAAC,IAAI,aAAa,EAAE;AAC1B;AACA;AACA,GAAG,IAAI,UAAU,GAAG,CAAC,IAAI,IAAI,CAAC;AAC9B;AACA,GAAG,IAAI,SAAS,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC;AACpC;AACA,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK;AAC7B,IAAI,IAAI,SAAS,GAAG,UAAU,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACrD,IAAI,CAAC,CAAC,MAAM,GAAG,UAAU,GAAG,IAAI,GAAG,SAAS,CAAC;AAC7C,IAAI,SAAS,IAAI,QAAQ,CAAC,EAAE,EAAE,SAAS,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;AAC3D,IAAI,CAAC,CAAC;AACN;AACA,GAAG,aAAa,GAAG,CAAC,CAAC;AACrB,GAAG,SAAS,IAAI,MAAM,EAAE,CAAC;AACzB,GAAG;AACH,EAAE;AACF;AACA,CAAC,IAAI,UAAU,IAAI,WAAW,EAAE;AAChC,EAAE,OAAO,CAAC,UAAU,EAAE,WAAW,EAAE,CAAC,IAAI;AACxC,GAAG,IAAI,MAAM,CAAC,KAAK;AACnB,IAAI,OAAO;AACX;AACA,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;AACrB;AACA,GAAG,IAAI,aAAa,IAAI,IAAI;AAC5B,IAAI,SAAS,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC1D,GAAG,CAAC,CAAC;AACL,EAAE;AACF;AACA,CAAC,SAAS,QAAQ,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE;AACpC,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AACzB;AACA,EAAE,IAAI,GAAG;AACT,GAAG,GAAG,GAAG,GAAG,GAAG,OAAO,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,UAAU,GAAG,UAAU,CAAC,CAAC;AACjE;AACA,EAAE,IAAI,GAAG,GAAG,UAAU,CAAC;AACvB;AACA,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE;AACnB,GAAG,GAAG,GAAG,UAAU,CAAC;AACpB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACnB,GAAG;AACH;AACA,EAAE,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;AAClB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACnB;AACA,EAAE,IAAI,IAAI,GAAG,EAAE,CAAC,IAAI;AACpB,GAAG,IAAI,GAAG,EAAE,CAAC,IAAI;AACjB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACnB;AACA,EAAE,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,IAAI,GAAG,CAAC;AACtC;AACA,EAAE,IAAI,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;AACvB;AACA,EAAE;AACF,GAAG,KAAK,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC;AAC3B,GAAG,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,KAAK,CAAC;AAClC,GAAG,EAAE;AACL,IAAI;AACJ,EAAE;AACF;AACA,CAAC,SAAS,kBAAkB,CAAC,GAAG,EAAE,GAAG,EAAE;AACvC,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;AACxC,EAAE,OAAO,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACxC,EAAE;AACF;AACA,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,IAAI,UAAU,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,IAAI,CAAC,QAAQ,GAAG,kBAAkB,CAAC;AACpC,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC1B,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG;AACjC,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC;AACxB,EAAE,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC;AAC5B,GAAG,GAAG,GAAG,OAAO,GAAG,UAAU;AAC7B,GAAG,GAAG,GAAG,OAAO,GAAG,CAAC;AACpB,GAAG;AACH,EAAE,OAAO,CAAC,GAAG,EAAE,MAAM,CAAC,KAAK,CAAC;AAC5B,GAAG,GAAG,GAAG,OAAO,GAAG,UAAU;AAC7B,GAAG,GAAG,GAAG,OAAO,GAAG,CAAC;AACpB,GAAG;AACH,EAAE,CAAC;AACH;AACA;AACA,CAAC,SAAS,KAAK,CAAC,EAAE,EAAE;AACpB,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC;AACX,EAAE,MAAM,EAAE,CAAC;AACX,EAAE;AACF;AACA,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACpB;AACA,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,KAAK;AACzC,EAAE,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;AACzB,EAAE,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC;AACvB;AACA,EAAE,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AAClC,EAAE,CAAC;AACH;AACA,CAAC,SAAS,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE;AAC5B,EAAE,UAAU,CAAC,SAAS,EAAE,IAAI,GAAG,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;AAClD,EAAE,UAAU,CAAC,SAAS,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;AACnD,EAAE;AACF;AACA,CAAC,SAAS,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE;AAC5B,EAAE,UAAU,CAAC,SAAS,EAAE,GAAG,KAAK,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;AAClD,EAAE,UAAU,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC,CAAC;AACrD,EAAE;AACF;AACA,CAAC,IAAI,OAAO,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,OAAO,GAAG,OAAO,CAAC;AACnD,CAAC,IAAI,OAAO,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,OAAO,GAAG,OAAO,CAAC;AACnD;AACA,CAAC,SAAS,UAAU,GAAG;AACvB,EAAE,IAAI,UAAU,IAAI,MAAM,CAAC,IAAI,EAAE;AACjC,GAAG,KAAK,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3D,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,cAAc;AAChC,KAAK,SAAS;AACd;AACA,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAChC;AACA,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;AACd;AACA,IAAI,KAAK,IAAI,CAAC,IAAI,IAAI;AACtB,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACxD,IAAI;AACJ,GAAG;AACH,EAAE;AACF;AACA,CAAC,SAAS,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE;AACjC,EAAE,IAAI,IAAI,IAAI,IAAI,EAAE;AACpB,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE;AAClB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,IAAI,KAAK;AACtC,KAAK,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;AAC7B,KAAK,CAAC,CAAC;AACP,IAAI;AACJ,QAAQ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;AAC9B,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC9B;AACA,GAAG,MAAM,CAAC,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AAC9B,GAAG;AACH;AACA,EAAE,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;AACnD,GAAG,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,cAAc;AAC/C,IAAI,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;AAC5C,GAAG;AACH;AACA,EAAE,IAAI,UAAU,IAAI,MAAM,CAAC,IAAI;AAC/B,GAAG,UAAU,EAAE,CAAC;AAChB;AACA,EAAE,eAAe,GAAG,KAAK,CAAC;AAC1B;AACA,EAAE,KAAK,KAAK,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC;AACvC,EAAE;AACF;AACA,CAAC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC5B;AACA,CAAC,SAAS,eAAe,CAAC,IAAI,EAAE,GAAG,EAAE;AACrC,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AACvB,EAAE,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,WAAW,IAAI,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;AAC/D,EAAE,IAAI,GAAG,CAAC;AACV;AACA,EAAE,IAAI,cAAc;AACpB,GAAG,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,IAAI,kBAAkB,CAAC;AACzD,OAAO;AACP,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;AACjE,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,kBAAkB,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AACrD,GAAG;AACH;AACA,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;AAC5B,EAAE;AACF;AACA,CAAC,SAAS,YAAY,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE;AACzC;AACA;AACA,EAAE,aAAa,GAAG,UAAU,CAAC;AAC7B,EAAE,YAAY,GAAG,SAAS,CAAC;AAC3B;AACA,EAAE,CAAC,UAAU,EAAE,SAAS,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,EAAE,SAAS,CAAC,CAAC;AACrE;AACA,EAAE,IAAI,MAAM,CAAC,IAAI,EAAE;AACnB,GAAG,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;AAC7E,GAAG,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;AAC5E,GAAG;AACH;AACA,EAAE,IAAI,GAAG,CAAC;AACV;AACA;AACA;AACA,EAAE,IAAI,aAAa,GAAG,EAAE,GAAG,EAAE,CAAC;AAC9B;AACA,EAAE,WAAW,GAAG,GAAG,CAAC;AACpB;AACA;AACA,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,UAAU,GAAG,UAAU,CAAC;AACvD,EAAE,IAAI,IAAI,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,UAAU,GAAG,UAAU,CAAC;AACvD;AACA;AACA,EAAE,IAAI,UAAU,GAAG,CAAC,IAAI,OAAO,IAAI,CAAC,IAAI,aAAa,EAAE;AACvD,GAAG,GAAG,GAAG,IAAI,CAAC;AACd;AACA,GAAG,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;AACf,KAAK,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;AACrF,KAAK;AACL,IAAI;AACJ;AACA,GAAG,IAAI,WAAW;AAClB,IAAI,SAAS,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,IAAI,IAAI,IAAI,QAAQ,CAAC,SAAS,CAAC,CAAC;AACzE;AACA,GAAG,IAAmB,MAAM,CAAC,IAAI,EAAE;AACnC,IAAI,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACzB,IAAI,eAAe,GAAG,IAAI,CAAC;AAC3B,IAAI;AACJ,GAAG;AACH,OAAO;AACP;AACA;AACA,GAAG,IAAI,SAAS,EAAE,SAAS,EAAE,IAAI,CAAC;AAClC;AACA,GAAG,IAAI,IAAI,IAAI,CAAC,EAAE;AAClB,IAAI,SAAS,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,UAAU,GAAG,SAAS,CAAC;AACzD,IAAI,SAAS,GAAG,QAAQ,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;AAC/C,IAAI,GAAG,GAAG,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACjD,IAAI,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACpD,IAAI;AACJ;AACA,GAAG,KAAK,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3D,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACtB;AACA,IAAI,IAAI,IAAI,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;AAC9B,IAAI,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAC7D;AACA,IAAI,IAAI,IAAI,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,SAAS,CAAC,CAAC;AACxD,IAAI,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAC7D;AACA,IAAI,eAAe,GAAG,eAAe,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC;AACxE;AACA,IAAI,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;AACzB;AACA,IAAI,IAAI,KAAK,GAAG,WAAW,CAAC,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,SAAS,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9H;AACA,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE;AACzB,KAAK,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,GAAG,WAAW,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACzI;AACA,KAAK,IAAI,WAAW,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE;AAChD,MAAM,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC;AACvC;AACA,MAAM,IAAI,IAAI,GAAG,WAAW,EAAE;AAC9B,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;AAC7B;AACA,OAAO,IAAI,IAAI,IAAI,CAAC,EAAE;AACtB,QAAQ,IAAI,SAAS,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,UAAU,GAAG,SAAS,CAAC;AACjE,QAAQ,IAAI,SAAS,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;AACrD;AACA,QAAQ,IAAI,cAAc,GAAG,KAAK,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACrD,QAAQ,IAAI,aAAa,IAAI,SAAS,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACrD;AACA;AACA;AACA,QAAQ,IAAI,aAAa,IAAI,cAAc;AAC3C,SAAS,aAAa,IAAI,CAAC;AAC3B,WAAW,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,SAAS,GAAG,KAAK,IAAI,SAAS;AAC9D,WAAW,IAAI,IAAI,CAAC,GAAG,KAAK,IAAI,SAAS,GAAG,KAAK,IAAI,SAAS,CAAC;AAC/D,SAAS,EAAE;AACX,SAAS,WAAW,GAAG,IAAI,CAAC;AAC5B,SAAS,aAAa,GAAG,CAAC,CAAC;AAC3B,SAAS;AACT,QAAQ;AACR,YAAY;AACZ,QAAQ,WAAW,GAAG,IAAI,CAAC;AAC3B,QAAQ,aAAa,GAAG,CAAC,CAAC;AAC1B,QAAQ;AACR,OAAO;AACP,MAAM;AACN;AACA,KAAK,IAAI,IAAI,EAAE,IAAI,CAAC;AACpB;AACA,KAAK,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE;AAC1B,MAAM,IAAI,GAAG,KAAK,CAAC;AACnB,MAAM,IAAI,GAAG,IAAI,CAAC;AAClB,MAAM;AACN,UAAU;AACV,MAAM,IAAI,GAAG,IAAI,CAAC;AAClB,MAAM,IAAI,GAAG,KAAK,CAAC;AACnB,MAAM;AACN;AACA,KAAK,IAAI,eAAe,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;AAClD,MAAM,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;AACxF;AACA,MAAM,IAAI,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;AACpC,OAAO,QAAQ,GAAG,IAAI;AACtB,OAAO,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;AACpC;AACA,MAAM,IAAI,OAAO,IAAI,IAAI,EAAE;AAC3B,OAAO,QAAQ,GAAG,KAAK,CAAC;AACxB;AACA,OAAO,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACnC;AACA,OAAO,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;AACzB,OAAO,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC;AACxB,OAAO,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAC1B,OAAO,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3B,OAAO;AACP,WAAW;AACX,OAAO,KAAK,GAAG,IAAI,CAAC;AACpB,OAAO,KAAK,GAAG,IAAI,CAAC;AACpB,OAAO,KAAK,GAAG,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AACnD,OAAO;AACP;AACA,MAAM,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;AACnD,MAAM,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;AAClE,MAAM;AACN,KAAK;AACL,IAAI;AACJ,GAAG;AACH;AACA,EAAE,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;AACnB,EAAE,MAAM,CAAC,IAAI,GAAG,UAAU,CAAC;AAC3B,EAAE,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC;AACzB;AACA,EAAE,IAAI,eAAe,EAAE;AACvB,GAAG,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;AACpB,GAAG,SAAS,EAAE,CAAC;AACf,GAAG;AACH;AACA;AACA,EAAE,IAAI,MAAM,CAAC,IAAI,IAAI,QAAQ,EAAE;AAC/B,GAAG,IAAI,GAAG,IAAI,IAAI,EAAE;AACpB,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC;AACvC,IAAI,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;AAClD,IAAI,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;AACpD;AACA;AACA,IAAI,IAAI,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;AAChC,IAAI,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC;AACrB,IAAI,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC;AACrB;AACA,IAAI,IAAI,KAAK,IAAI,KAAK,EAAE;AACxB,KAAK,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;AACnD;AACA,KAAK,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC;AACrC,KAAK,IAAI,SAAS,GAAG,GAAG,CAAC,QAAQ,CAAC;AAClC;AACA,KAAK,IAAI,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;AAC9B;AACA,KAAK,IAAI,SAAS,GAAG,IAAI,IAAI,IAAI,IAAI,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAC/D,KAAK,IAAI,SAAS,GAAG,IAAI,IAAI,IAAI,IAAI,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAC/D;AACA,KAAK,IAAI,SAAS,IAAI,KAAK,EAAE;AAC7B,MAAM,IAAI,IAAI,IAAI,CAAC,EAAE;AACrB,OAAO,IAAI,GAAG,IAAI,CAAC;AACnB,OAAO,IAAI,GAAG,KAAK,CAAC;AACpB,OAAO;AACP,WAAW;AACX,OAAO,IAAI,GAAG,GAAG,CAAC;AAClB,OAAO,IAAI,GAAG,MAAM,CAAC;AACrB,OAAO;AACP;AACA,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AACxB;AACA,MAAM,CAAC,GAAG,SAAS,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAClE,MAAM,CAAC,GAAG,SAAS,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,EAAE,OAAO,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAClE;AACA,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,MAAM;AACN;AACA,MAAM,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AACvB;AACA,KAAK,IAAI,SAAS,IAAI,KAAK,EAAE;AAC7B,MAAM,IAAI,IAAI,IAAI,CAAC,EAAE;AACrB,OAAO,IAAI,GAAG,IAAI,CAAC;AACnB,OAAO,IAAI,GAAG,KAAK,CAAC;AACpB,OAAO;AACP,WAAW;AACX,OAAO,IAAI,GAAG,GAAG,CAAC;AAClB,OAAO,IAAI,GAAG,MAAM,CAAC;AACrB,OAAO;AACP;AACA,MAAM,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AACxB;AACA,MAAM,CAAC,GAAG,SAAS,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAClE,MAAM,CAAC,GAAG,SAAS,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,EAAE,OAAO,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAClE;AACA,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,MAAM;AACN;AACA,MAAM,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AACvB,KAAK;AACL;AACA,KAAK,UAAU,EAAE,CAAC;AAClB,IAAI;AACJ,QAAQ;AACR,IAAI,IAAI,KAAK,GAAG,GAAG,CAAC,aAAa,GAAG,aAAa,CAAC,CAAC;AACnD,IAAI,IAAI,KAAK,GAAG,GAAG,CAAC,YAAY,GAAG,YAAY,CAAC,CAAC;AACjD;AACA,IAAI,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE;AACzB,KAAK,IAAI,MAAM,GAAG,KAAK,CAAC;AACxB,KAAK,KAAK,GAAG,KAAK,CAAC;AACnB,KAAK,KAAK,GAAG,MAAM,CAAC;AACpB,KAAK;AACL;AACA,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;AACzC,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;AACzC;AACA,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;AACvB;AACA,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE;AACrB;AACA,KAAK,IAAI,KAAK,IAAI,KAAK,EAAE;AACzB,MAAM,KAAK,GAAG,KAAK,IAAI,GAAG,CAAC;AAC3B,MAAM,KAAK,GAAG,KAAK,IAAI,GAAG,CAAC;AAC3B;AACA;AACA,MAAM,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,EAAE;AAC5B,OAAO,IAAI,KAAK,GAAG,KAAK;AACxB,QAAQ,KAAK,GAAG,IAAI,CAAC;AACrB;AACA,QAAQ,KAAK,GAAG,IAAI,CAAC;AACrB,OAAO;AACP,MAAM;AACN,KAAK;AACL,SAAS,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,KAAK,IAAI,KAAK,CAAC;AACjD;AACA,KAAK,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;AAC1B;AACA,IAAI,IAAI,EAAE,EAAE,EAAE,CAAC;AACf;AACA,IAAI,IAAI,KAAK,EAAE;AACf,KAAK,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE;AAC1B,MAAM,EAAE,GAAG,UAAU,CAAC;AACtB,MAAM,EAAE,GAAG,UAAU,CAAC;AACtB,MAAM;AACN,UAAU;AACV,MAAM,EAAE,GAAG,SAAS,CAAC;AACrB,MAAM,EAAE,GAAG,SAAS,CAAC;AACrB,MAAM;AACN;AACA,KAAK,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACxC;AACA,KAAK,IAAI,CAAC,KAAK;AACf,MAAM,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AACvB,KAAK;AACL;AACA,IAAI,IAAI,KAAK,EAAE;AACf,KAAK,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE;AAC1B,MAAM,EAAE,GAAG,UAAU,CAAC;AACtB,MAAM,EAAE,GAAG,UAAU,CAAC;AACtB,MAAM;AACN,UAAU;AACV,MAAM,EAAE,GAAG,SAAS,CAAC;AACrB,MAAM,EAAE,GAAG,SAAS,CAAC;AACrB,MAAM;AACN;AACA,KAAK,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACxC;AACA,KAAK,IAAI,CAAC,KAAK;AACf,MAAM,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;AACvB,KAAK;AACL;AACA;AACA,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,EAAE;AAC1B,KAAK,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACnB,KAAK,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACnB,KAAK;AACL,IAAI;AACJ,GAAG;AACH;AACA,EAAE,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AAClB,EAAE,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AAClB;AACA,EAAE,IAAI,GAAG,IAAI,IAAI,EAAE;AACnB,GAAG,IAAI,IAAI,EAAE;AACb,IAAI,IAAI,OAAO,IAAI,IAAI,EAAE;AACzB,KAAK,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC;AAChD;AACA,KAAK,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,QAAQ,IAAI,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,UAAU,GAAG,SAAS,EAAE,QAAQ,CAAC,GAAG,IAAI,CAAC;AACjH,KAAK,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,QAAQ,IAAI,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,UAAU,GAAG,SAAS,EAAE,QAAQ,CAAC,GAAG,IAAI,CAAC;AACjH,KAAK;AACL;AACA,IAAI,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,GAAG,CAAC,CAAC;AACjF,IAAI;AACJ;AACA,GAAG,IAAI,WAAW,EAAE;AACpB,IAAI,IAAI,SAAS,GAAG,IAAI,IAAI,QAAQ,CAAC,SAAS,CAAC;AAC/C,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC;AACvB;AACA,IAAI,IAAI,aAAa,IAAI,IAAI,EAAE;AAC/B,KAAK,IAAI,WAAW,IAAI,CAAC;AACzB,MAAM,SAAS,CAAC,aAAa,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;AAC5D,KAAK;AACL,SAAS;AACT,KAAK,IAAI,WAAW,GAAG,CAAC;AACxB,MAAM,SAAS,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;AACnD,UAAU,IAAI,aAAa,IAAI,aAAa;AAC5C,MAAM,SAAS,CAAC,aAAa,EAAE,UAAU,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;AAC5D,KAAK;AACL,IAAI;AACJ,GAAG;AACH;AACA,EAAE,KAAK,KAAK,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC;AACvC,EAAE;AACF;AACA,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC;AACjB;AACA,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE;AACrC,EAAE,GAAG,GAAG;AACR,GAAG,IAAI,IAAI,IAAI,IAAI;AACnB,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC;AACpB;AACA,GAAG,OAAO,IAAI,CAAC;AACf,GAAG;AACH,EAAE,CAAC,CAAC;AACJ;AACA,CAAC,SAAS,QAAQ,CAAC,KAAK,GAAG,KAAK,EAAE;AAClC,EAAE,IAAI,KAAK;AACX,GAAG,IAAI,GAAG,IAAI,CAAC;AACf,OAAO;AACP,GAAG,IAAI,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;AACvC,GAAG,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;AAC1B,GAAG;AACH,EAAE;AACF;AACA,CAAC,SAAS,SAAS,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAChD,EAAE,IAAI,MAAM,CAAC,KAAK;AAClB,GAAG,OAAO;AACV;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,QAAQ,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,IAAI,CAAC;AACnE,GAAG,OAAO;AACV;AACA,EAAE,UAAU,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC;AAC3D;AACA,EAAE,IAAI,CAAC,IAAI,IAAI;AACf,GAAG,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAClC;AACA,GAAG,YAAY,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AAClC,EAAE;AACF;AACA,CAAC,SAAS,UAAU,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;AAChE,EAAE,IAAI,IAAI,IAAI,IAAI;AAClB,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;AACnB;AACA,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC;AACpB;AACA,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE;AACjB,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;AAC9B,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;AAC7B,GAAG;AACH,OAAO;AACP,GAAG,IAAI,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;AACzB,IAAI,UAAU,GAAG,CAAC,EAAE,CAAC;AACrB,IAAI,SAAS,GAAG,CAAC,EAAE,CAAC;AACpB,IAAI,OAAO;AACX,IAAI;AACJ;AACA,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC;AACtC;AACA,GAAG,IAAI,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;AACrC,GAAG,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC;AAC/C,GAAG,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC;AAC/C,GAAG,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC;AACjD;AACA,GAAG,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;AAC1C;AACA,GAAG,IAAI,IAAI,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,UAAU,GAAG,UAAU;AACvD,IAAI,IAAI,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,UAAU,GAAG,UAAU;AACpD,IAAI,KAAK,GAAG,MAAM,GAAG,EAAE,GAAG,EAAE;AAC5B,IAAI,KAAK,GAAG,MAAM,GAAG,EAAE,GAAG,EAAE;AAC5B,IAAI,KAAK,GAAG,MAAM,GAAG,EAAE,GAAG,EAAE;AAC5B,IAAI,KAAK,GAAG,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC;AAC7B;AACA,GAAG,IAAI,OAAO,IAAI,IAAI;AACtB,IAAI,EAAE,GAAG,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;AAClF;AACA,IAAI,EAAE,GAAG,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;AAC9B;AACA,GAAG,IAAI,OAAO,IAAI,IAAI;AACtB,IAAI,EAAE,GAAG,UAAU,CAAC,IAAI,EAAE,OAAO,CAAC,GAAG,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;AAClF;AACA,IAAI,EAAE,GAAG,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;AAC9B;AACA,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE;AACxB,IAAI,IAAI,GAAG,GAAG,EAAE,CAAC;AACjB,IAAI,EAAE,GAAG,EAAE,CAAC;AACZ,IAAI,EAAE,GAAG,GAAG,CAAC;AACb,IAAI;AACJ,GAAG;AACH;AACA,EAAE,IAAI,IAAI,EAAE;AACZ,GAAG,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,UAAU,GAAG,CAAC;AACtC,IAAI,EAAE,GAAG,SAAS,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;AACnC;AACA,GAAG,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,UAAU,GAAG,CAAC;AACtC,IAAI,EAAE,GAAG,SAAS,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;AACnC,GAAG;AACH;AACA,EAAE,IAAI,OAAO,EAAE;AACf,GAAG,aAAa,GAAG,EAAE,CAAC;AACtB,GAAG,YAAY,GAAG,EAAE,CAAC;AACrB;AACA,GAAG,CAAC,UAAU,EAAE,SAAS,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACvD,GAAG;AACH,OAAO;AACP,GAAG,UAAU,GAAG,EAAE,CAAC;AACnB,GAAG,SAAS,GAAG,EAAE,CAAC;AAClB,GAAG;AACH,EAAE;AACF;AACA,CAAC,MAAM,UAAU,GAAG;AACpB,EAAE,KAAK,EAAE,CAAC;AACV,EAAE,MAAM,EAAE,CAAC;AACX,EAAE,IAAI,EAAE,CAAC;AACT,EAAE,GAAG,EAAE,CAAC;AACR,EAAE,CAAC;AACH;AACA,CAAC,SAAS,UAAU,GAAG;AACvB,EAAE,SAAS,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;AAC/B,EAAE;AACF;AACA,CAAC,IAAI,cAAc,CAAC;AACpB,CAAC,IAAI,aAAa,CAAC;AACnB,CAAC,IAAI,eAAe,CAAC;AACrB,CAAC,IAAI,gBAAgB,CAAC;AACtB;AACA,CAAC,SAAS,SAAS,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAChD,EAAE,QAAQ,GAAG,IAAI,CAAC;AAClB,EAAE,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AAC5C;AACA,EAAE,UAAU,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AACtD;AACA,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE;AACjB,GAAG,OAAO,CAAC,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;AACzC,GAAG,OAAO,CAAC,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;AACjF,GAAG;AACH;AACA,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC;AAC5C;AACA,EAAE,cAAc,KAAK,IAAI,CAAC;AAC1B,EAAE,aAAa,MAAM,GAAG,CAAC;AACzB,EAAE,eAAe,IAAI,KAAK,CAAC;AAC3B,EAAE,gBAAgB,GAAG,MAAM,CAAC;AAC5B;AACA,EAAE,UAAU,EAAE,CAAC;AACf,EAAE;AACF;AACA,CAAC,SAAS,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAC9C,EAAE,QAAQ,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC;AACvC;AACA,EAAE,UAAU,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AACtD;AACA,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,MAAM,CAAC;AAC5C;AACA,EAAE,IAAI,SAAS,GAAG,KAAK,GAAG,CAAC,IAAI,MAAM,GAAG,CAAC,CAAC;AAC1C,EAAE,IAAI,SAAS;AACf,GAAG,cAAc,MAAM,IAAI;AAC3B,GAAG,aAAa,OAAO,GAAG;AAC1B,GAAG,eAAe,KAAK,KAAK;AAC5B,GAAG,gBAAgB,IAAI,MAAM;AAC7B,GAAG,CAAC;AACJ;AACA,EAAE,SAAS,IAAI,SAAS,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC;AAC9C;AACA,EAAE,IAAI,IAAI,CAAC,QAAQ,IAAI,SAAS,IAAI,SAAS,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA,GAAG,IAAI,IAAI,GAAG,IAAI;AAClB,IAAI,IAAI,GAAG,KAAK;AAChB,IAAI,IAAI,GAAG,GAAG;AACd,IAAI,IAAI,GAAG,MAAM,CAAC;AAClB;AACA,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE;AACxB,IAAI,IAAI,GAAG,GAAG;AACd,IAAI,IAAI,GAAG,MAAM;AACjB,IAAI,IAAI,GAAG,IAAI;AACf,IAAI,IAAI,GAAG,KAAK,CAAC;AACjB,IAAI;AACJ;AACA,GAAG,IAAI,KAAK,EAAE;AACd,IAAI,SAAS,CAAC,SAAS;AACvB,KAAK,QAAQ,CAAC,IAAI,EAAE,SAAS,CAAC;AAC9B,KAAK,QAAQ,CAAC,IAAI,GAAG,IAAI,EAAE,SAAS,CAAC;AACrC,KAAK,CAAC;AACN,IAAI;AACJ;AACA,GAAG,IAAI,KAAK,EAAE;AACd,IAAI,KAAK,IAAI,CAAC,IAAI,MAAM,EAAE;AAC1B,KAAK,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AACxB;AACA,KAAK,IAAI,CAAC,IAAI,SAAS,IAAI,EAAE,CAAC,IAAI,IAAI,IAAI,IAAI,EAAE,CAAC,GAAG,IAAI,GAAG,EAAE;AAC7D,MAAM,SAAS,CAAC,CAAC;AACjB,OAAO,QAAQ,CAAC,IAAI,GAAG,IAAI,EAAE,CAAC,CAAC;AAC/B,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC;AACxB,OAAO,CAAC;AACR,MAAM;AACN,KAAK;AACL,IAAI;AACJ;AACA,GAAG,UAAU,EAAE,CAAC;AAChB,GAAG;AACH,OAAO,IAAI,MAAM,CAAC,IAAI,EAAE;AACxB,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;AAChC;AACA,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK;AACpB,IAAI,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AACpC,GAAG;AACH;AACA,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE;AACjB,GAAG,QAAQ,CAAC,OAAO,EAAE,GAAY,CAAC,CAAC;AACnC,GAAG,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;AAC/E,GAAG;AACH,EAAE;AACF;AACA,CAAC,SAAS,UAAU,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AACjD,EAAE,IAAI,MAAM,CAAC,KAAK;AAClB,GAAG,OAAO;AACV;AACA,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC;AACpB;AACA,EAAE,IAAI,SAAS,GAAG,QAAQ,CAAC;AAC3B;AACA,EAAE,IAAI,QAAQ,EAAE;AAChB;AACA,GAAG,IAAI,KAAK,GAAG,IAAI,CAAC;AACpB,GAAG,IAAI,KAAK,GAAG,IAAI,CAAC;AACpB,GAAG,IAAI,QAAQ,GAAG,EAAE,CAAC;AACrB;AACA,GAAG,IAAI,KAAK,EAAE,KAAK,CAAC;AACpB;AACA,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE;AACxB,IAAI,KAAK,GAAG,KAAK,CAAC;AAClB,IAAI,KAAK,GAAG,KAAK,CAAC;AAClB,IAAI;AACJ,QAAQ;AACR,IAAI,KAAK,GAAG,KAAK,CAAC;AAClB,IAAI,KAAK,GAAG,KAAK,CAAC;AAClB,IAAI;AACJ;AACA,GAAG,IAAI,KAAK,IAAI,KAAK,EAAE;AACvB;AACA,IAAI,KAAK,GAAG,UAAU,IAAI,QAAQ,IAAI,UAAU,IAAI,UAAU,GAAG,QAAQ,CAAC;AAC1E,IAAI,KAAK,GAAG,SAAS,KAAK,QAAQ,IAAI,SAAS,KAAK,UAAU,GAAG,QAAQ,CAAC;AAC1E,IAAI;AACJ;AACA,GAAG,IAAI,KAAK,IAAI,KAAK;AACrB,IAAI,UAAU,GAAG,UAAU,GAAG,UAAU,GAAG,CAAC,GAAG,UAAU,CAAC;AAC1D;AACA,GAAG,IAAI,KAAK,IAAI,KAAK;AACrB,IAAI,SAAS,GAAG,SAAS,GAAG,SAAS,GAAG,CAAC,GAAG,UAAU,CAAC;AACvD;AACA,GAAG,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAClC;AACA,GAAG,QAAQ,GAAG,KAAK,CAAC;AACpB,GAAG;AACH;AACA,EAAE,UAAU,GAAG,CAAC,EAAE,CAAC;AACnB,EAAE,SAAS,GAAG,CAAC,EAAE,CAAC;AAClB;AACA;AACA,EAAE,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACjC;AACA,EAAE,IAAI,SAAS;AACf,GAAG,QAAQ,GAAG,SAAS,CAAC;AACxB,EAAE;AACF;AACA,CAAC,SAAS,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AAC/C,EAAE,IAAI,MAAM,CAAC,KAAK;AAClB,GAAG,OAAO;AACV;AACA,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC;AACpB;AACA,EAAE,UAAU,EAAE,CAAC;AACf;AACA,EAAE,UAAU,EAAE,CAAC;AACf;AACA,EAAE,IAAI,CAAC,IAAI,IAAI;AACf,GAAG,OAAO,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;AAChF,EAAE;AACF;AACA,CAAC,SAAS,WAAW,GAAG;AACxB,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;AAC7B,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AAC1C,EAAE;AACF;AACA,CAAC,EAAE,CAAC,UAAU,EAAE,GAAG,EAAE,WAAW,CAAC,CAAC;AAClC;AACA;AACA,CAAC,MAAM,MAAM,GAAG,EAAE,CAAC;AACnB;AACA,CAAC,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;AAC9B,CAAC,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;AAC9B,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;AAC1B,CAAC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC5B,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,KAAK;AAC9C,EAAE,IAAI,gBAAgB,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3C,EAAE,GAAG,GAAG,gBAAgB,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AACzC,EAAE,GAAG,IAAI,CAAC,CAAC,IAAI,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AACjD,EAAE,CAAC;AACH;AACA,CAAC,IAAI,MAAM,CAAC,IAAI,EAAE;AAClB,EAAE,OAAO,CAAC,SAAS,GAAG,IAAI,EAAE,SAAS,CAAC,CAAC;AACvC,EAAE,OAAO,CAAC,SAAS,GAAG,IAAI,EAAE,SAAS,CAAC,CAAC;AACvC,EAAE,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,CAAC,IAAI;AACjC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;AACrB,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;AACnB,GAAG,CAAC,CAAC;AACL,EAAE,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;AACxC;AACA,EAAE,OAAO,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;AACpC;AACA,EAAE,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACxB;AACA,EAAE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC3B,EAAE;AACF;AACA;AACA,CAAC,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC;AAC7C;AACA,CAAC,SAAS,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE;AAC/B,EAAE,IAAI,MAAM,IAAI,KAAK,EAAE;AACvB,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,EAAE,IAAI;AAC/B,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AAChC,IAAI,CAAC,CAAC;AACN,GAAG;AACH,EAAE;AACF;AACA,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC,IAAI;AACnC,EAAE,KAAK,IAAI,MAAM,IAAI,CAAC,CAAC,KAAK;AAC5B,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;AACjE,EAAE,CAAC,CAAC;AACJ;AACA,CAAC,MAAM,gBAAgB,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,YAAY,KAAK,YAAY,CAAC;AACpE;AACA,CAAC,MAAM,QAAQ,GAAG,MAAM,CAAC;AACzB,EAAE,GAAG,EAAE,IAAI;AACX,EAAE,SAAS,EAAE,KAAK;AAClB,EAAE,OAAO,EAAE;AACX,GAAG,GAAG,EAAE,OAAO;AACf,GAAG,GAAG,EAAE,OAAO;AACf,GAAG;AACH,EAAE,MAAM,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;AACzD,EAAE,KAAK,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,gBAAgB,CAAC;AACzC,EAAE,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;AACtB,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;AACjB;AACA,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC;AAC/B,EAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACxC;AACA,CAAC,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC;AACxB;AACA,CAAC,MAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC;AAC9B;AACA,CAAC,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;AAC7B;AACA,CAAC,SAAS,OAAO,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AAC5C,EAAE,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACpD,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACtC,EAAE;AACF;AACA,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAChB;AACA,CAAC,SAAS,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AACxC,EAAE,IAAI,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACpD,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC1C,EAAE;AACF;AACA,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AAChB;AACA,CAAC,SAAS,OAAO,GAAG;AACpB,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACnB,EAAE,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC3B,EAAE,cAAc,CAAC,KAAK,EAAE,CAAC;AACzB,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,EAAE,WAAW,CAAC,CAAC;AACpC,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;AAChB,EAAiB,WAAW,EAAE,MAAM,EAAE,CAAC;AACvC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AAClB,EAAE;AACF;AACA,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AACxB;AACA,CAAC,SAAS,KAAK,GAAG;AAClB,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAC3B;AACA,EAAE,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACpC;AACA,EAAE,IAAI,UAAU,CAAC,SAAS,CAAC;AAC3B,GAAG,QAAQ,CAAC,SAAS,EAAE,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;AAC9C;AACA,GAAG,UAAU,EAAE,CAAC;AAChB;AACA,EAAE,eAAe,GAAG,MAAM,CAAC,IAAI,KAAK,MAAM,CAAC,KAAK,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC3E,EAAE,eAAe,GAAG,eAAe,GAAG,IAAI,CAAC;AAC3C;AACA,EAAE,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACpC,EAAE;AACF;AACA,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AAC5B;AACA,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACxB;AACA,CAAC,IAAI,IAAI,EAAE;AACX,EAAE,IAAI,IAAI,YAAY,WAAW,EAAE;AACnC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;AAC1B,GAAG,KAAK,EAAE,CAAC;AACX,GAAG;AACH;AACA,GAAG,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACrB,EAAE;AACF;AACA,EAAE,KAAK,EAAE,CAAC;AACV;AACA,CAAC,OAAO,IAAI,CAAC;AACb,CAAC;AACD;AACA,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;AACtB,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;AACtB,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC1B,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC1B,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC;AAC9B,KAAK,CAAC,MAAM,KAAK,MAAM,CAAC;AACxB,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;AACxB;AACe;AACf,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;AACnB,CAAC;AACD;AACe;AACf,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;AACzB,CAAC,KAAK,CAAC,MAAM,IAAI,MAAM,CAAC;AACxB,CAAC;AACD;AACA,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;AACnB;AACgB;AAChB,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;AACvB,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC3B;AACA,CAAC,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG;AAC3B,EAAE,MAAM;AACR,EAAE,CAAC;AACH;AACA,CAAuB,CAAC,KAAK,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC;AAChD,CAAuB,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;AACjD,CAAuB,CAAC,KAAK,CAAC,IAAI,MAAM,IAAI,CAAC,CAAC;AAC9C,CAAuB,CAAC,KAAK,CAAC,MAAM,IAAIA,aAAM,CAAC,CAAC;AAEhD;;;;"}